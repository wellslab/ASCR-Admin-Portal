{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/node_modules/filepond/dist/filepond.esm.js"],"sourcesContent":["/*!\n * FilePond 4.32.8\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst isNode = value => value instanceof HTMLElement;\n\nconst createStore = (initialState, queries = [], actions = []) => {\n    // internal state\n    const state = {\n        ...initialState,\n    };\n\n    // contains all actions for next frame, is clear when actions are requested\n    const actionQueue = [];\n    const dispatchQueue = [];\n\n    // returns a duplicate of the current state\n    const getState = () => ({ ...state });\n\n    // returns a duplicate of the actions array and clears the actions array\n    const processActionQueue = () => {\n        // create copy of actions queue\n        const queue = [...actionQueue];\n\n        // clear actions queue (we don't want no double actions)\n        actionQueue.length = 0;\n\n        return queue;\n    };\n\n    // processes actions that might block the main UI thread\n    const processDispatchQueue = () => {\n        // create copy of actions queue\n        const queue = [...dispatchQueue];\n\n        // clear actions queue (we don't want no double actions)\n        dispatchQueue.length = 0;\n\n        // now dispatch these actions\n        queue.forEach(({ type, data }) => {\n            dispatch(type, data);\n        });\n    };\n\n    // adds a new action, calls its handler and\n    const dispatch = (type, data, isBlocking) => {\n        // is blocking action (should never block if document is hidden)\n        if (isBlocking && !document.hidden) {\n            dispatchQueue.push({ type, data });\n            return;\n        }\n\n        // if this action has a handler, handle the action\n        if (actionHandlers[type]) {\n            actionHandlers[type](data);\n        }\n\n        // now add action\n        actionQueue.push({\n            type,\n            data,\n        });\n    };\n\n    const query = (str, ...args) => (queryHandles[str] ? queryHandles[str](...args) : null);\n\n    const api = {\n        getState,\n        processActionQueue,\n        processDispatchQueue,\n        dispatch,\n        query,\n    };\n\n    let queryHandles = {};\n    queries.forEach(query => {\n        queryHandles = {\n            ...query(state),\n            ...queryHandles,\n        };\n    });\n\n    let actionHandlers = {};\n    actions.forEach(action => {\n        actionHandlers = {\n            ...action(dispatch, query, state),\n            ...actionHandlers,\n        };\n    });\n\n    return api;\n};\n\nconst defineProperty = (obj, property, definition) => {\n    if (typeof definition === 'function') {\n        obj[property] = definition;\n        return;\n    }\n    Object.defineProperty(obj, property, { ...definition });\n};\n\nconst forin = (obj, cb) => {\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n            continue;\n        }\n\n        cb(key, obj[key]);\n    }\n};\n\nconst createObject = definition => {\n    const obj = {};\n    forin(definition, property => {\n        defineProperty(obj, property, definition[property]);\n    });\n    return obj;\n};\n\nconst attr = (node, name, value = null) => {\n    if (value === null) {\n        return node.getAttribute(name) || node.hasAttribute(name);\n    }\n    node.setAttribute(name, value);\n};\n\nconst ns = 'http://www.w3.org/2000/svg';\nconst svgElements = ['svg', 'path']; // only svg elements used\n\nconst isSVGElement = tag => svgElements.includes(tag);\n\nconst createElement = (tag, className, attributes = {}) => {\n    if (typeof className === 'object') {\n        attributes = className;\n        className = null;\n    }\n    const element = isSVGElement(tag)\n        ? document.createElementNS(ns, tag)\n        : document.createElement(tag);\n    if (className) {\n        if (isSVGElement(tag)) {\n            attr(element, 'class', className);\n        } else {\n            element.className = className;\n        }\n    }\n    forin(attributes, (name, value) => {\n        attr(element, name, value);\n    });\n    return element;\n};\n\nconst appendChild = parent => (child, index) => {\n    if (typeof index !== 'undefined' && parent.children[index]) {\n        parent.insertBefore(child, parent.children[index]);\n    } else {\n        parent.appendChild(child);\n    }\n};\n\nconst appendChildView = (parent, childViews) => (view, index) => {\n    if (typeof index !== 'undefined') {\n        childViews.splice(index, 0, view);\n    } else {\n        childViews.push(view);\n    }\n\n    return view;\n};\n\nconst removeChildView = (parent, childViews) => view => {\n    // remove from child views\n    childViews.splice(childViews.indexOf(view), 1);\n\n    // remove the element\n    if (view.element.parentNode) {\n        parent.removeChild(view.element);\n    }\n\n    return view;\n};\n\nconst IS_BROWSER = (() =>\n    typeof window !== 'undefined' && typeof window.document !== 'undefined')();\nconst isBrowser = () => IS_BROWSER;\n\nconst testElement = isBrowser() ? createElement('svg') : {};\nconst getChildCount =\n    'children' in testElement ? el => el.children.length : el => el.childNodes.length;\n\nconst getViewRect = (elementRect, childViews, offset, scale) => {\n    const left = offset[0] || elementRect.left;\n    const top = offset[1] || elementRect.top;\n    const right = left + elementRect.width;\n    const bottom = top + elementRect.height * (scale[1] || 1);\n\n    const rect = {\n        // the rectangle of the element itself\n        element: {\n            ...elementRect,\n        },\n\n        // the rectangle of the element expanded to contain its children, does not include any margins\n        inner: {\n            left: elementRect.left,\n            top: elementRect.top,\n            right: elementRect.right,\n            bottom: elementRect.bottom,\n        },\n\n        // the rectangle of the element expanded to contain its children including own margin and child margins\n        // margins will be added after we've recalculated the size\n        outer: {\n            left,\n            top,\n            right,\n            bottom,\n        },\n    };\n\n    // expand rect to fit all child rectangles\n    childViews\n        .filter(childView => !childView.isRectIgnored())\n        .map(childView => childView.rect)\n        .forEach(childViewRect => {\n            expandRect(rect.inner, { ...childViewRect.inner });\n            expandRect(rect.outer, { ...childViewRect.outer });\n        });\n\n    // calculate inner width and height\n    calculateRectSize(rect.inner);\n\n    // append additional margin (top and left margins are included in top and left automatically)\n    rect.outer.bottom += rect.element.marginBottom;\n    rect.outer.right += rect.element.marginRight;\n\n    // calculate outer width and height\n    calculateRectSize(rect.outer);\n\n    return rect;\n};\n\nconst expandRect = (parent, child) => {\n    // adjust for parent offset\n    child.top += parent.top;\n    child.right += parent.left;\n    child.bottom += parent.top;\n    child.left += parent.left;\n\n    if (child.bottom > parent.bottom) {\n        parent.bottom = child.bottom;\n    }\n\n    if (child.right > parent.right) {\n        parent.right = child.right;\n    }\n};\n\nconst calculateRectSize = rect => {\n    rect.width = rect.right - rect.left;\n    rect.height = rect.bottom - rect.top;\n};\n\nconst isNumber = value => typeof value === 'number';\n\n/**\n * Determines if position is at destination\n * @param position\n * @param destination\n * @param velocity\n * @param errorMargin\n * @returns {boolean}\n */\nconst thereYet = (position, destination, velocity, errorMargin = 0.001) => {\n    return Math.abs(position - destination) < errorMargin && Math.abs(velocity) < errorMargin;\n};\n\n/**\n * Spring animation\n */\nconst spring =\n    // default options\n    ({ stiffness = 0.5, damping = 0.75, mass = 10 } = {}) =>\n        // method definition\n        {\n            let target = null;\n            let position = null;\n            let velocity = 0;\n            let resting = false;\n\n            // updates spring state\n            const interpolate = (ts, skipToEndState) => {\n                // in rest, don't animate\n                if (resting) return;\n\n                // need at least a target or position to do springy things\n                if (!(isNumber(target) && isNumber(position))) {\n                    resting = true;\n                    velocity = 0;\n                    return;\n                }\n\n                // calculate spring force\n                const f = -(position - target) * stiffness;\n\n                // update velocity by adding force based on mass\n                velocity += f / mass;\n\n                // update position by adding velocity\n                position += velocity;\n\n                // slow down based on amount of damping\n                velocity *= damping;\n\n                // we've arrived if we're near target and our velocity is near zero\n                if (thereYet(position, target, velocity) || skipToEndState) {\n                    position = target;\n                    velocity = 0;\n                    resting = true;\n\n                    // we done\n                    api.onupdate(position);\n                    api.oncomplete(position);\n                } else {\n                    // progress update\n                    api.onupdate(position);\n                }\n            };\n\n            /**\n             * Set new target value\n             * @param value\n             */\n            const setTarget = value => {\n                // if currently has no position, set target and position to this value\n                if (isNumber(value) && !isNumber(position)) {\n                    position = value;\n                }\n\n                // next target value will not be animated to\n                if (target === null) {\n                    target = value;\n                    position = value;\n                }\n\n                // let start moving to target\n                target = value;\n\n                // already at target\n                if (position === target || typeof target === 'undefined') {\n                    // now resting as target is current position, stop moving\n                    resting = true;\n                    velocity = 0;\n\n                    // done!\n                    api.onupdate(position);\n                    api.oncomplete(position);\n\n                    return;\n                }\n\n                resting = false;\n            };\n\n            // need 'api' to call onupdate callback\n            const api = createObject({\n                interpolate,\n                target: {\n                    set: setTarget,\n                    get: () => target,\n                },\n                resting: {\n                    get: () => resting,\n                },\n                onupdate: value => {},\n                oncomplete: value => {},\n            });\n\n            return api;\n        };\n\nconst easeLinear = t => t;\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\nconst tween =\n    // default values\n    ({ duration = 500, easing = easeInOutQuad, delay = 0 } = {}) =>\n        // method definition\n        {\n            let start = null;\n            let t;\n            let p;\n            let resting = true;\n            let reverse = false;\n            let target = null;\n\n            const interpolate = (ts, skipToEndState) => {\n                if (resting || target === null) return;\n\n                if (start === null) {\n                    start = ts;\n                }\n\n                if (ts - start < delay) return;\n\n                t = ts - start - delay;\n\n                if (t >= duration || skipToEndState) {\n                    t = 1;\n                    p = reverse ? 0 : 1;\n                    api.onupdate(p * target);\n                    api.oncomplete(p * target);\n                    resting = true;\n                } else {\n                    p = t / duration;\n                    api.onupdate((t >= 0 ? easing(reverse ? 1 - p : p) : 0) * target);\n                }\n            };\n\n            // need 'api' to call onupdate callback\n            const api = createObject({\n                interpolate,\n                target: {\n                    get: () => (reverse ? 0 : target),\n                    set: value => {\n                        // is initial value\n                        if (target === null) {\n                            target = value;\n                            api.onupdate(value);\n                            api.oncomplete(value);\n                            return;\n                        }\n\n                        // want to tween to a smaller value and have a current value\n                        if (value < target) {\n                            target = 1;\n                            reverse = true;\n                        } else {\n                            // not tweening to a smaller value\n                            reverse = false;\n                            target = value;\n                        }\n\n                        // let's go!\n                        resting = false;\n                        start = null;\n                    },\n                },\n                resting: {\n                    get: () => resting,\n                },\n                onupdate: value => {},\n                oncomplete: value => {},\n            });\n\n            return api;\n        };\n\nconst animator = {\n    spring,\n    tween,\n};\n\n/*\n { type: 'spring', stiffness: .5, damping: .75, mass: 10 };\n { translation: { type: 'spring', ... }, ... }\n { translation: { x: { type: 'spring', ... } } }\n*/\nconst createAnimator = (definition, category, property) => {\n    // default is single definition\n    // we check if transform is set, if so, we check if property is set\n    const def =\n        definition[category] && typeof definition[category][property] === 'object'\n            ? definition[category][property]\n            : definition[category] || definition;\n\n    const type = typeof def === 'string' ? def : def.type;\n    const props = typeof def === 'object' ? { ...def } : {};\n\n    return animator[type] ? animator[type](props) : null;\n};\n\nconst addGetSet = (keys, obj, props, overwrite = false) => {\n    obj = Array.isArray(obj) ? obj : [obj];\n    obj.forEach(o => {\n        keys.forEach(key => {\n            let name = key;\n            let getter = () => props[key];\n            let setter = value => (props[key] = value);\n\n            if (typeof key === 'object') {\n                name = key.key;\n                getter = key.getter || getter;\n                setter = key.setter || setter;\n            }\n\n            if (o[name] && !overwrite) {\n                return;\n            }\n\n            o[name] = {\n                get: getter,\n                set: setter,\n            };\n        });\n    });\n};\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// setup animators\n\nconst animations = ({ mixinConfig, viewProps, viewInternalAPI, viewExternalAPI }) => {\n    // initial properties\n    const initialProps = { ...viewProps };\n\n    // list of all active animations\n    const animations = [];\n\n    // setup animators\n    forin(mixinConfig, (property, animation) => {\n        const animator = createAnimator(animation);\n        if (!animator) {\n            return;\n        }\n\n        // when the animator updates, update the view state value\n        animator.onupdate = value => {\n            viewProps[property] = value;\n        };\n\n        // set animator target\n        animator.target = initialProps[property];\n\n        // when value is set, set the animator target value\n        const prop = {\n            key: property,\n            setter: value => {\n                // if already at target, we done!\n                if (animator.target === value) {\n                    return;\n                }\n\n                animator.target = value;\n            },\n            getter: () => viewProps[property],\n        };\n\n        // add getters and setters\n        addGetSet([prop], [viewInternalAPI, viewExternalAPI], viewProps, true);\n\n        // add it to the list for easy updating from the _write method\n        animations.push(animator);\n    });\n\n    // expose internal write api\n    return {\n        write: ts => {\n            let skipToEndState = document.hidden;\n            let resting = true;\n            animations.forEach(animation => {\n                if (!animation.resting) resting = false;\n                animation.interpolate(ts, skipToEndState);\n            });\n            return resting;\n        },\n        destroy: () => {},\n    };\n};\n\nconst addEvent = element => (type, fn) => {\n    element.addEventListener(type, fn);\n};\n\nconst removeEvent = element => (type, fn) => {\n    element.removeEventListener(type, fn);\n};\n\n// mixin\nconst listeners = ({\n    mixinConfig,\n    viewProps,\n    viewInternalAPI,\n    viewExternalAPI,\n    viewState,\n    view,\n}) => {\n    const events = [];\n\n    const add = addEvent(view.element);\n    const remove = removeEvent(view.element);\n\n    viewExternalAPI.on = (type, fn) => {\n        events.push({\n            type,\n            fn,\n        });\n        add(type, fn);\n    };\n\n    viewExternalAPI.off = (type, fn) => {\n        events.splice(events.findIndex(event => event.type === type && event.fn === fn), 1);\n        remove(type, fn);\n    };\n\n    return {\n        write: () => {\n            // not busy\n            return true;\n        },\n        destroy: () => {\n            events.forEach(event => {\n                remove(event.type, event.fn);\n            });\n        },\n    };\n};\n\n// add to external api and link to props\n\nconst apis = ({ mixinConfig, viewProps, viewExternalAPI }) => {\n    addGetSet(mixinConfig, viewExternalAPI, viewProps);\n};\n\nconst isDefined = value => value != null;\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// set initial state based on props in viewProps\n// apply as transforms each frame\n\nconst defaults = {\n    opacity: 1,\n    scaleX: 1,\n    scaleY: 1,\n    translateX: 0,\n    translateY: 0,\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 0,\n    originX: 0,\n    originY: 0,\n};\n\nconst styles = ({ mixinConfig, viewProps, viewInternalAPI, viewExternalAPI, view }) => {\n    // initial props\n    const initialProps = { ...viewProps };\n\n    // current props\n    const currentProps = {};\n\n    // we will add those properties to the external API and link them to the viewState\n    addGetSet(mixinConfig, [viewInternalAPI, viewExternalAPI], viewProps);\n\n    // override rect on internal and external rect getter so it takes in account transforms\n    const getOffset = () => [viewProps['translateX'] || 0, viewProps['translateY'] || 0];\n    const getScale = () => [viewProps['scaleX'] || 0, viewProps['scaleY'] || 0];\n    const getRect = () =>\n        view.rect ? getViewRect(view.rect, view.childViews, getOffset(), getScale()) : null;\n    viewInternalAPI.rect = { get: getRect };\n    viewExternalAPI.rect = { get: getRect };\n\n    // apply view props\n    mixinConfig.forEach(key => {\n        viewProps[key] =\n            typeof initialProps[key] === 'undefined' ? defaults[key] : initialProps[key];\n    });\n\n    // expose api\n    return {\n        write: () => {\n            // see if props have changed\n            if (!propsHaveChanged(currentProps, viewProps)) {\n                return;\n            }\n\n            // moves element to correct position on screen\n            applyStyles(view.element, viewProps);\n\n            // store new transforms\n            Object.assign(currentProps, { ...viewProps });\n\n            // no longer busy\n            return true;\n        },\n        destroy: () => {},\n    };\n};\n\nconst propsHaveChanged = (currentProps, newProps) => {\n    // different amount of keys\n    if (Object.keys(currentProps).length !== Object.keys(newProps).length) {\n        return true;\n    }\n\n    // lets analyze the individual props\n    for (const prop in newProps) {\n        if (newProps[prop] !== currentProps[prop]) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\nconst applyStyles = (\n    element,\n    {\n        opacity,\n        perspective,\n        translateX,\n        translateY,\n        scaleX,\n        scaleY,\n        rotateX,\n        rotateY,\n        rotateZ,\n        originX,\n        originY,\n        width,\n        height,\n    }\n) => {\n    let transforms = '';\n    let styles = '';\n\n    // handle transform origin\n    if (isDefined(originX) || isDefined(originY)) {\n        styles += `transform-origin: ${originX || 0}px ${originY || 0}px;`;\n    }\n\n    // transform order is relevant\n    // 0. perspective\n    if (isDefined(perspective)) {\n        transforms += `perspective(${perspective}px) `;\n    }\n\n    // 1. translate\n    if (isDefined(translateX) || isDefined(translateY)) {\n        transforms += `translate3d(${translateX || 0}px, ${translateY || 0}px, 0) `;\n    }\n\n    // 2. scale\n    if (isDefined(scaleX) || isDefined(scaleY)) {\n        transforms += `scale3d(${isDefined(scaleX) ? scaleX : 1}, ${\n            isDefined(scaleY) ? scaleY : 1\n        }, 1) `;\n    }\n\n    // 3. rotate\n    if (isDefined(rotateZ)) {\n        transforms += `rotateZ(${rotateZ}rad) `;\n    }\n\n    if (isDefined(rotateX)) {\n        transforms += `rotateX(${rotateX}rad) `;\n    }\n\n    if (isDefined(rotateY)) {\n        transforms += `rotateY(${rotateY}rad) `;\n    }\n\n    // add transforms\n    if (transforms.length) {\n        styles += `transform:${transforms};`;\n    }\n\n    // add opacity\n    if (isDefined(opacity)) {\n        styles += `opacity:${opacity};`;\n\n        // if we reach zero, we make the element inaccessible\n        if (opacity === 0) {\n            styles += `visibility:hidden;`;\n        }\n\n        // if we're below 100% opacity this element can't be clicked\n        if (opacity < 1) {\n            styles += `pointer-events:none;`;\n        }\n    }\n\n    // add height\n    if (isDefined(height)) {\n        styles += `height:${height}px;`;\n    }\n\n    // add width\n    if (isDefined(width)) {\n        styles += `width:${width}px;`;\n    }\n\n    // apply styles\n    const elementCurrentStyle = element.elementCurrentStyle || '';\n\n    // if new styles does not match current styles, lets update!\n    if (styles.length !== elementCurrentStyle.length || styles !== elementCurrentStyle) {\n        element.style.cssText = styles;\n        // store current styles so we can compare them to new styles later on\n        // _not_ getting the style value is faster\n        element.elementCurrentStyle = styles;\n    }\n};\n\nconst Mixins = {\n    styles,\n    listeners,\n    animations,\n    apis,\n};\n\nconst updateRect = (rect = {}, element = {}, style = {}) => {\n    if (!element.layoutCalculated) {\n        rect.paddingTop = parseInt(style.paddingTop, 10) || 0;\n        rect.marginTop = parseInt(style.marginTop, 10) || 0;\n        rect.marginRight = parseInt(style.marginRight, 10) || 0;\n        rect.marginBottom = parseInt(style.marginBottom, 10) || 0;\n        rect.marginLeft = parseInt(style.marginLeft, 10) || 0;\n        element.layoutCalculated = true;\n    }\n\n    rect.left = element.offsetLeft || 0;\n    rect.top = element.offsetTop || 0;\n    rect.width = element.offsetWidth || 0;\n    rect.height = element.offsetHeight || 0;\n\n    rect.right = rect.left + rect.width;\n    rect.bottom = rect.top + rect.height;\n\n    rect.scrollTop = element.scrollTop;\n\n    rect.hidden = element.offsetParent === null;\n\n    return rect;\n};\n\nconst createView =\n    // default view definition\n    ({\n        // element definition\n        tag = 'div',\n        name = null,\n        attributes = {},\n\n        // view interaction\n        read = () => {},\n        write = () => {},\n        create = () => {},\n        destroy = () => {},\n\n        // hooks\n        filterFrameActionsForChild = (child, actions) => actions,\n        didCreateView = () => {},\n        didWriteView = () => {},\n\n        // rect related\n        ignoreRect = false,\n        ignoreRectUpdate = false,\n\n        // mixins\n        mixins = [],\n    } = {}) => (\n        // each view requires reference to store\n        store,\n        // specific properties for this view\n        props = {}\n    ) => {\n        // root element should not be changed\n        const element = createElement(tag, `filepond--${name}`, attributes);\n\n        // style reference should also not be changed\n        const style = window.getComputedStyle(element, null);\n\n        // element rectangle\n        const rect = updateRect();\n        let frameRect = null;\n\n        // rest state\n        let isResting = false;\n\n        // pretty self explanatory\n        const childViews = [];\n\n        // loaded mixins\n        const activeMixins = [];\n\n        // references to created children\n        const ref = {};\n\n        // state used for each instance\n        const state = {};\n\n        // list of writers that will be called to update this view\n        const writers = [\n            write, // default writer\n        ];\n\n        const readers = [\n            read, // default reader\n        ];\n\n        const destroyers = [\n            destroy, // default destroy\n        ];\n\n        // core view methods\n        const getElement = () => element;\n        const getChildViews = () => childViews.concat();\n        const getReference = () => ref;\n        const createChildView = store => (view, props) => view(store, props);\n        const getRect = () => {\n            if (frameRect) {\n                return frameRect;\n            }\n            frameRect = getViewRect(rect, childViews, [0, 0], [1, 1]);\n            return frameRect;\n        };\n        const getStyle = () => style;\n\n        /**\n         * Read data from DOM\n         * @private\n         */\n        const _read = () => {\n            frameRect = null;\n\n            // read child views\n            childViews.forEach(child => child._read());\n\n            const shouldUpdate = !(ignoreRectUpdate && rect.width && rect.height);\n            if (shouldUpdate) {\n                updateRect(rect, element, style);\n            }\n\n            // readers\n            const api = { root: internalAPI, props, rect };\n            readers.forEach(reader => reader(api));\n        };\n\n        /**\n         * Write data to DOM\n         * @private\n         */\n        const _write = (ts, frameActions, shouldOptimize) => {\n            // if no actions, we assume that the view is resting\n            let resting = frameActions.length === 0;\n\n            // writers\n            writers.forEach(writer => {\n                const writerResting = writer({\n                    props,\n                    root: internalAPI,\n                    actions: frameActions,\n                    timestamp: ts,\n                    shouldOptimize,\n                });\n                if (writerResting === false) {\n                    resting = false;\n                }\n            });\n\n            // run mixins\n            activeMixins.forEach(mixin => {\n                // if one of the mixins is still busy after write operation, we are not resting\n                const mixinResting = mixin.write(ts);\n                if (mixinResting === false) {\n                    resting = false;\n                }\n            });\n\n            // updates child views that are currently attached to the DOM\n            childViews\n                .filter(child => !!child.element.parentNode)\n                .forEach(child => {\n                    // if a child view is not resting, we are not resting\n                    const childResting = child._write(\n                        ts,\n                        filterFrameActionsForChild(child, frameActions),\n                        shouldOptimize\n                    );\n                    if (!childResting) {\n                        resting = false;\n                    }\n                });\n\n            // append new elements to DOM and update those\n            childViews\n                //.filter(child => !child.element.parentNode)\n                .forEach((child, index) => {\n                    // skip\n                    if (child.element.parentNode) {\n                        return;\n                    }\n\n                    // append to DOM\n                    internalAPI.appendChild(child.element, index);\n\n                    // call read (need to know the size of these elements)\n                    child._read();\n\n                    // re-call write\n                    child._write(\n                        ts,\n                        filterFrameActionsForChild(child, frameActions),\n                        shouldOptimize\n                    );\n\n                    // we just added somthing to the dom, no rest\n                    resting = false;\n                });\n\n            // update resting state\n            isResting = resting;\n\n            didWriteView({\n                props,\n                root: internalAPI,\n                actions: frameActions,\n                timestamp: ts,\n            });\n\n            // let parent know if we are resting\n            return resting;\n        };\n\n        const _destroy = () => {\n            activeMixins.forEach(mixin => mixin.destroy());\n            destroyers.forEach(destroyer => {\n                destroyer({ root: internalAPI, props });\n            });\n            childViews.forEach(child => child._destroy());\n        };\n\n        // sharedAPI\n        const sharedAPIDefinition = {\n            element: {\n                get: getElement,\n            },\n            style: {\n                get: getStyle,\n            },\n            childViews: {\n                get: getChildViews,\n            },\n        };\n\n        // private API definition\n        const internalAPIDefinition = {\n            ...sharedAPIDefinition,\n            rect: {\n                get: getRect,\n            },\n\n            // access to custom children references\n            ref: {\n                get: getReference,\n            },\n\n            // dom modifiers\n            is: needle => name === needle,\n            appendChild: appendChild(element),\n            createChildView: createChildView(store),\n            linkView: view => {\n                childViews.push(view);\n                return view;\n            },\n            unlinkView: view => {\n                childViews.splice(childViews.indexOf(view), 1);\n            },\n            appendChildView: appendChildView(element, childViews),\n            removeChildView: removeChildView(element, childViews),\n            registerWriter: writer => writers.push(writer),\n            registerReader: reader => readers.push(reader),\n            registerDestroyer: destroyer => destroyers.push(destroyer),\n            invalidateLayout: () => (element.layoutCalculated = false),\n\n            // access to data store\n            dispatch: store.dispatch,\n            query: store.query,\n        };\n\n        // public view API methods\n        const externalAPIDefinition = {\n            element: {\n                get: getElement,\n            },\n            childViews: {\n                get: getChildViews,\n            },\n            rect: {\n                get: getRect,\n            },\n            resting: {\n                get: () => isResting,\n            },\n            isRectIgnored: () => ignoreRect,\n            _read,\n            _write,\n            _destroy,\n        };\n\n        // mixin API methods\n        const mixinAPIDefinition = {\n            ...sharedAPIDefinition,\n            rect: {\n                get: () => rect,\n            },\n        };\n\n        // add mixin functionality\n        Object.keys(mixins)\n            .sort((a, b) => {\n                // move styles to the back of the mixin list (so adjustments of other mixins are applied to the props correctly)\n                if (a === 'styles') {\n                    return 1;\n                } else if (b === 'styles') {\n                    return -1;\n                }\n                return 0;\n            })\n            .forEach(key => {\n                const mixinAPI = Mixins[key]({\n                    mixinConfig: mixins[key],\n                    viewProps: props,\n                    viewState: state,\n                    viewInternalAPI: internalAPIDefinition,\n                    viewExternalAPI: externalAPIDefinition,\n                    view: createObject(mixinAPIDefinition),\n                });\n\n                if (mixinAPI) {\n                    activeMixins.push(mixinAPI);\n                }\n            });\n\n        // construct private api\n        const internalAPI = createObject(internalAPIDefinition);\n\n        // create the view\n        create({\n            root: internalAPI,\n            props,\n        });\n\n        // append created child views to root node\n        const childCount = getChildCount(element); // need to know the current child count so appending happens in correct order\n        childViews.forEach((child, index) => {\n            internalAPI.appendChild(child.element, childCount + index);\n        });\n\n        // call did create\n        didCreateView(internalAPI);\n\n        // expose public api\n        return createObject(externalAPIDefinition);\n    };\n\nconst createPainter = (read, write, fps = 60) => {\n    const name = '__framePainter';\n\n    // set global painter\n    if (window[name]) {\n        window[name].readers.push(read);\n        window[name].writers.push(write);\n        return;\n    }\n\n    window[name] = {\n        readers: [read],\n        writers: [write],\n    };\n\n    const painter = window[name];\n\n    const interval = 1000 / fps;\n    let last = null;\n    let id = null;\n    let requestTick = null;\n    let cancelTick = null;\n\n    const setTimerType = () => {\n        if (document.hidden) {\n            requestTick = () => window.setTimeout(() => tick(performance.now()), interval);\n            cancelTick = () => window.clearTimeout(id);\n        } else {\n            requestTick = () => window.requestAnimationFrame(tick);\n            cancelTick = () => window.cancelAnimationFrame(id);\n        }\n    };\n\n    document.addEventListener('visibilitychange', () => {\n        if (cancelTick) cancelTick();\n        setTimerType();\n        tick(performance.now());\n    });\n\n    const tick = ts => {\n        // queue next tick\n        id = requestTick(tick);\n\n        // limit fps\n        if (!last) {\n            last = ts;\n        }\n\n        const delta = ts - last;\n\n        if (delta <= interval) {\n            // skip frame\n            return;\n        }\n\n        // align next frame\n        last = ts - (delta % interval);\n\n        // update view\n        painter.readers.forEach(read => read());\n        painter.writers.forEach(write => write(ts));\n    };\n\n    setTimerType();\n    tick(performance.now());\n\n    return {\n        pause: () => {\n            cancelTick(id);\n        },\n    };\n};\n\nconst createRoute = (routes, fn) => ({ root, props, actions = [], timestamp, shouldOptimize }) => {\n    actions\n        .filter(action => routes[action.type])\n        .forEach(action =>\n            routes[action.type]({ root, props, action: action.data, timestamp, shouldOptimize })\n        );\n    if (fn) {\n        fn({ root, props, actions, timestamp, shouldOptimize });\n    }\n};\n\nconst insertBefore = (newNode, referenceNode) =>\n    referenceNode.parentNode.insertBefore(newNode, referenceNode);\n\nconst insertAfter = (newNode, referenceNode) => {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n};\n\nconst isArray = value => Array.isArray(value);\n\nconst isEmpty = value => value == null;\n\nconst trim = str => str.trim();\n\nconst toString = value => '' + value;\n\nconst toArray = (value, splitter = ',') => {\n    if (isEmpty(value)) {\n        return [];\n    }\n    if (isArray(value)) {\n        return value;\n    }\n    return toString(value)\n        .split(splitter)\n        .map(trim)\n        .filter(str => str.length);\n};\n\nconst isBoolean = value => typeof value === 'boolean';\n\nconst toBoolean = value => (isBoolean(value) ? value : value === 'true');\n\nconst isString = value => typeof value === 'string';\n\nconst toNumber = value =>\n    isNumber(value) ? value : isString(value) ? toString(value).replace(/[a-z]+/gi, '') : 0;\n\nconst toInt = value => parseInt(toNumber(value), 10);\n\nconst toFloat = value => parseFloat(toNumber(value));\n\nconst isInt = value => isNumber(value) && isFinite(value) && Math.floor(value) === value;\n\nconst toBytes = (value, base = 1000) => {\n    // is in bytes\n    if (isInt(value)) {\n        return value;\n    }\n\n    // is natural file size\n    let naturalFileSize = toString(value).trim();\n\n    // if is value in megabytes\n    if (/MB$/i.test(naturalFileSize)) {\n        naturalFileSize = naturalFileSize.replace(/MB$i/, '').trim();\n        return toInt(naturalFileSize) * base * base;\n    }\n\n    // if is value in kilobytes\n    if (/KB/i.test(naturalFileSize)) {\n        naturalFileSize = naturalFileSize.replace(/KB$i/, '').trim();\n        return toInt(naturalFileSize) * base;\n    }\n\n    return toInt(naturalFileSize);\n};\n\nconst isFunction = value => typeof value === 'function';\n\nconst toFunctionReference = string => {\n    let ref = self;\n    let levels = string.split('.');\n    let level = null;\n    while ((level = levels.shift())) {\n        ref = ref[level];\n        if (!ref) {\n            return null;\n        }\n    }\n    return ref;\n};\n\nconst methods = {\n    process: 'POST',\n    patch: 'PATCH',\n    revert: 'DELETE',\n    fetch: 'GET',\n    restore: 'GET',\n    load: 'GET',\n};\n\nconst createServerAPI = outline => {\n    const api = {};\n\n    api.url = isString(outline) ? outline : outline.url || '';\n    api.timeout = outline.timeout ? parseInt(outline.timeout, 10) : 0;\n    api.headers = outline.headers ? outline.headers : {};\n\n    forin(methods, key => {\n        api[key] = createAction(key, outline[key], methods[key], api.timeout, api.headers);\n    });\n\n    // remove process if no url or process on outline\n    api.process = outline.process || isString(outline) || outline.url ? api.process : null;\n\n    // special treatment for remove\n    api.remove = outline.remove || null;\n\n    // remove generic headers from api object\n    delete api.headers;\n\n    return api;\n};\n\nconst createAction = (name, outline, method, timeout, headers) => {\n    // is explicitely set to null so disable\n    if (outline === null) {\n        return null;\n    }\n\n    // if is custom function, done! Dev handles everything.\n    if (typeof outline === 'function') {\n        return outline;\n    }\n\n    // build action object\n    const action = {\n        url: method === 'GET' || method === 'PATCH' ? `?${name}=` : '',\n        method,\n        headers,\n        withCredentials: false,\n        timeout,\n        onload: null,\n        ondata: null,\n        onerror: null,\n    };\n\n    // is a single url\n    if (isString(outline)) {\n        action.url = outline;\n        return action;\n    }\n\n    // overwrite\n    Object.assign(action, outline);\n\n    // see if should reformat headers;\n    if (isString(action.headers)) {\n        const parts = action.headers.split(/:(.+)/);\n        action.headers = {\n            header: parts[0],\n            value: parts[1],\n        };\n    }\n\n    // if is bool withCredentials\n    action.withCredentials = toBoolean(action.withCredentials);\n\n    return action;\n};\n\nconst toServerAPI = value => createServerAPI(value);\n\nconst isNull = value => value === null;\n\nconst isObject = value => typeof value === 'object' && value !== null;\n\nconst isAPI = value => {\n    return (\n        isObject(value) &&\n        isString(value.url) &&\n        isObject(value.process) &&\n        isObject(value.revert) &&\n        isObject(value.restore) &&\n        isObject(value.fetch)\n    );\n};\n\nconst getType = value => {\n    if (isArray(value)) {\n        return 'array';\n    }\n\n    if (isNull(value)) {\n        return 'null';\n    }\n\n    if (isInt(value)) {\n        return 'int';\n    }\n\n    if (/^[0-9]+ ?(?:GB|MB|KB)$/gi.test(value)) {\n        return 'bytes';\n    }\n\n    if (isAPI(value)) {\n        return 'api';\n    }\n\n    return typeof value;\n};\n\nconst replaceSingleQuotes = str =>\n    str\n        .replace(/{\\s*'/g, '{\"')\n        .replace(/'\\s*}/g, '\"}')\n        .replace(/'\\s*:/g, '\":')\n        .replace(/:\\s*'/g, ':\"')\n        .replace(/,\\s*'/g, ',\"')\n        .replace(/'\\s*,/g, '\",');\n\nconst conversionTable = {\n    array: toArray,\n    boolean: toBoolean,\n    int: value => (getType(value) === 'bytes' ? toBytes(value) : toInt(value)),\n    number: toFloat,\n    float: toFloat,\n    bytes: toBytes,\n    string: value => (isFunction(value) ? value : toString(value)),\n    function: value => toFunctionReference(value),\n    serverapi: toServerAPI,\n    object: value => {\n        try {\n            return JSON.parse(replaceSingleQuotes(value));\n        } catch (e) {\n            return null;\n        }\n    },\n};\n\nconst convertTo = (value, type) => conversionTable[type](value);\n\nconst getValueByType = (newValue, defaultValue, valueType) => {\n    // can always assign default value\n    if (newValue === defaultValue) {\n        return newValue;\n    }\n\n    // get the type of the new value\n    let newValueType = getType(newValue);\n\n    // is valid type?\n    if (newValueType !== valueType) {\n        // is string input, let's attempt to convert\n        const convertedValue = convertTo(newValue, valueType);\n\n        // what is the type now\n        newValueType = getType(convertedValue);\n\n        // no valid conversions found\n        if (convertedValue === null) {\n            throw `Trying to assign value with incorrect type to \"${option}\", allowed type: \"${valueType}\"`;\n        } else {\n            newValue = convertedValue;\n        }\n    }\n\n    // assign new value\n    return newValue;\n};\n\nconst createOption = (defaultValue, valueType) => {\n    let currentValue = defaultValue;\n    return {\n        enumerable: true,\n        get: () => currentValue,\n        set: newValue => {\n            currentValue = getValueByType(newValue, defaultValue, valueType);\n        },\n    };\n};\n\nconst createOptions = options => {\n    const obj = {};\n    forin(options, prop => {\n        const optionDefinition = options[prop];\n        obj[prop] = createOption(optionDefinition[0], optionDefinition[1]);\n    });\n    return createObject(obj);\n};\n\nconst createInitialState = options => ({\n    // model\n    items: [],\n\n    // timeout used for calling update items\n    listUpdateTimeout: null,\n\n    // timeout used for stacking metadata updates\n    itemUpdateTimeout: null,\n\n    // queue of items waiting to be processed\n    processingQueue: [],\n\n    // options\n    options: createOptions(options),\n});\n\nconst fromCamels = (string, separator = '-') =>\n    string\n        .split(/(?=[A-Z])/)\n        .map(part => part.toLowerCase())\n        .join(separator);\n\nconst createOptionAPI = (store, options) => {\n    const obj = {};\n    forin(options, key => {\n        obj[key] = {\n            get: () => store.getState().options[key],\n            set: value => {\n                store.dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n                    value,\n                });\n            },\n        };\n    });\n    return obj;\n};\n\nconst createOptionActions = options => (dispatch, query, state) => {\n    const obj = {};\n    forin(options, key => {\n        const name = fromCamels(key, '_').toUpperCase();\n\n        obj[`SET_${name}`] = action => {\n            try {\n                state.options[key] = action.value;\n            } catch (e) {\n                // nope, failed\n            }\n\n            // we successfully set the value of this option\n            dispatch(`DID_SET_${name}`, { value: state.options[key] });\n        };\n    });\n    return obj;\n};\n\nconst createOptionQueries = options => state => {\n    const obj = {};\n    forin(options, key => {\n        obj[`GET_${fromCamels(key, '_').toUpperCase()}`] = action => state.options[key];\n    });\n    return obj;\n};\n\nconst InteractionMethod = {\n    API: 1,\n    DROP: 2,\n    BROWSE: 3,\n    PASTE: 4,\n    NONE: 5,\n};\n\nconst getUniqueId = () =>\n    Math.random()\n        .toString(36)\n        .substring(2, 11);\n\nconst arrayRemove = (arr, index) => arr.splice(index, 1);\n\nconst run = (cb, sync) => {\n    if (sync) {\n        cb();\n    } else if (document.hidden) {\n        Promise.resolve(1).then(cb);\n    } else {\n        setTimeout(cb, 0);\n    }\n};\n\nconst on = () => {\n    const listeners = [];\n    const off = (event, cb) => {\n        arrayRemove(\n            listeners,\n            listeners.findIndex(listener => listener.event === event && (listener.cb === cb || !cb))\n        );\n    };\n    const fire = (event, args, sync) => {\n        listeners\n            .filter(listener => listener.event === event)\n            .map(listener => listener.cb)\n            .forEach(cb => run(() => cb(...args), sync));\n    };\n    return {\n        fireSync: (event, ...args) => {\n            fire(event, args, true);\n        },\n        fire: (event, ...args) => {\n            fire(event, args, false);\n        },\n        on: (event, cb) => {\n            listeners.push({ event, cb });\n        },\n        onOnce: (event, cb) => {\n            listeners.push({\n                event,\n                cb: (...args) => {\n                    off(event, cb);\n                    cb(...args);\n                },\n            });\n        },\n        off,\n    };\n};\n\nconst copyObjectPropertiesToObject = (src, target, excluded) => {\n    Object.getOwnPropertyNames(src)\n        .filter(property => !excluded.includes(property))\n        .forEach(key =>\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(src, key))\n        );\n};\n\nconst PRIVATE = [\n    'fire',\n    'process',\n    'revert',\n    'load',\n    'on',\n    'off',\n    'onOnce',\n    'retryLoad',\n    'extend',\n    'archive',\n    'archived',\n    'release',\n    'released',\n    'requestProcessing',\n    'freeze',\n];\n\nconst createItemAPI = item => {\n    const api = {};\n    copyObjectPropertiesToObject(item, api, PRIVATE);\n    return api;\n};\n\nconst removeReleasedItems = items => {\n    items.forEach((item, index) => {\n        if (item.released) {\n            arrayRemove(items, index);\n        }\n    });\n};\n\nconst ItemStatus = {\n    INIT: 1,\n    IDLE: 2,\n    PROCESSING_QUEUED: 9,\n    PROCESSING: 3,\n    PROCESSING_COMPLETE: 5,\n    PROCESSING_ERROR: 6,\n    PROCESSING_REVERT_ERROR: 10,\n    LOADING: 7,\n    LOAD_ERROR: 8,\n};\n\nconst FileOrigin = {\n    INPUT: 1,\n    LIMBO: 2,\n    LOCAL: 3,\n};\n\nconst getNonNumeric = str => /[^0-9]+/.exec(str);\n\nconst getDecimalSeparator = () => getNonNumeric((1.1).toLocaleString())[0];\n\nconst getThousandsSeparator = () => {\n    // Added for browsers that do not return the thousands separator (happend on native browser Android 4.4.4)\n    // We check against the normal toString output and if they're the same return a comma when decimal separator is a dot\n    const decimalSeparator = getDecimalSeparator();\n    const thousandsStringWithSeparator = (1000.0).toLocaleString();\n    const thousandsStringWithoutSeparator = (1000.0).toString();\n    if (thousandsStringWithSeparator !== thousandsStringWithoutSeparator) {\n        return getNonNumeric(thousandsStringWithSeparator)[0];\n    }\n    return decimalSeparator === '.' ? ',' : '.';\n};\n\nconst Type = {\n    BOOLEAN: 'boolean',\n    INT: 'int',\n    NUMBER: 'number',\n    STRING: 'string',\n    ARRAY: 'array',\n    OBJECT: 'object',\n    FUNCTION: 'function',\n    ACTION: 'action',\n    SERVER_API: 'serverapi',\n    REGEX: 'regex',\n};\n\n// all registered filters\nconst filters = [];\n\n// loops over matching filters and passes options to each filter, returning the mapped results\nconst applyFilterChain = (key, value, utils) =>\n    new Promise((resolve, reject) => {\n        // find matching filters for this key\n        const matchingFilters = filters.filter(f => f.key === key).map(f => f.cb);\n\n        // resolve now\n        if (matchingFilters.length === 0) {\n            resolve(value);\n            return;\n        }\n\n        // first filter to kick things of\n        const initialFilter = matchingFilters.shift();\n\n        // chain filters\n        matchingFilters\n            .reduce(\n                // loop over promises passing value to next promise\n                (current, next) => current.then(value => next(value, utils)),\n\n                // call initial filter, will return a promise\n                initialFilter(value, utils)\n\n                // all executed\n            )\n            .then(value => resolve(value))\n            .catch(error => reject(error));\n    });\n\nconst applyFilters = (key, value, utils) =>\n    filters.filter(f => f.key === key).map(f => f.cb(value, utils));\n\n// adds a new filter to the list\nconst addFilter = (key, cb) => filters.push({ key, cb });\n\nconst extendDefaultOptions = additionalOptions => Object.assign(defaultOptions, additionalOptions);\n\nconst getOptions = () => ({ ...defaultOptions });\n\nconst setOptions = opts => {\n    forin(opts, (key, value) => {\n        // key does not exist, so this option cannot be set\n        if (!defaultOptions[key]) {\n            return;\n        }\n        defaultOptions[key][0] = getValueByType(\n            value,\n            defaultOptions[key][0],\n            defaultOptions[key][1]\n        );\n    });\n};\n\n// default options on app\nconst defaultOptions = {\n    // the id to add to the root element\n    id: [null, Type.STRING],\n\n    // input field name to use\n    name: ['filepond', Type.STRING],\n\n    // disable the field\n    disabled: [false, Type.BOOLEAN],\n\n    // classname to put on wrapper\n    className: [null, Type.STRING],\n\n    // is the field required\n    required: [false, Type.BOOLEAN],\n\n    // Allow media capture when value is set\n    captureMethod: [null, Type.STRING],\n    // - \"camera\", \"microphone\" or \"camcorder\",\n    // - Does not work with multiple on apple devices\n    // - If set, acceptedFileTypes must be made to match with media wildcard \"image/*\", \"audio/*\" or \"video/*\"\n\n    // sync `acceptedFileTypes` property with `accept` attribute\n    allowSyncAcceptAttribute: [true, Type.BOOLEAN],\n\n    // Feature toggles\n    allowDrop: [true, Type.BOOLEAN], // Allow dropping of files\n    allowBrowse: [true, Type.BOOLEAN], // Allow browsing the file system\n    allowPaste: [true, Type.BOOLEAN], // Allow pasting files\n    allowMultiple: [false, Type.BOOLEAN], // Allow multiple files (disabled by default, as multiple attribute is also required on input to allow multiple)\n    allowReplace: [true, Type.BOOLEAN], // Allow dropping a file on other file to replace it (only works when multiple is set to false)\n    allowRevert: [true, Type.BOOLEAN], // Allows user to revert file upload\n    allowRemove: [true, Type.BOOLEAN], // Allow user to remove a file\n    allowProcess: [true, Type.BOOLEAN], // Allows user to process a file, when set to false, this removes the file upload button\n    allowReorder: [false, Type.BOOLEAN], // Allow reordering of files\n    allowDirectoriesOnly: [false, Type.BOOLEAN], // Allow only selecting directories with browse (no support for filtering dnd at this point)\n\n    // Try store file if `server` not set\n    storeAsFile: [false, Type.BOOLEAN],\n\n    // Revert mode\n    forceRevert: [false, Type.BOOLEAN], // Set to 'force' to require the file to be reverted before removal\n\n    // Input requirements\n    maxFiles: [null, Type.INT], // Max number of files\n    checkValidity: [false, Type.BOOLEAN], // Enables custom validity messages\n\n    // Where to put file\n    itemInsertLocationFreedom: [true, Type.BOOLEAN], // Set to false to always add items to begin or end of list\n    itemInsertLocation: ['before', Type.STRING], // Default index in list to add items that have been dropped at the top of the list\n    itemInsertInterval: [75, Type.INT],\n\n    // Drag 'n Drop related\n    dropOnPage: [false, Type.BOOLEAN], // Allow dropping of files anywhere on page (prevents browser from opening file if dropped outside of Up)\n    dropOnElement: [true, Type.BOOLEAN], // Drop needs to happen on element (set to false to also load drops outside of Up)\n    dropValidation: [false, Type.BOOLEAN], // Enable or disable validating files on drop\n    ignoredFiles: [['.ds_store', 'thumbs.db', 'desktop.ini'], Type.ARRAY],\n\n    // Upload related\n    instantUpload: [true, Type.BOOLEAN], // Should upload files immediately on drop\n    maxParallelUploads: [2, Type.INT], // Maximum files to upload in parallel\n    allowMinimumUploadDuration: [true, Type.BOOLEAN], // if true uploads take at least 750 ms, this ensures the user sees the upload progress giving trust the upload actually happened\n\n    // Chunks\n    chunkUploads: [false, Type.BOOLEAN], // Enable chunked uploads\n    chunkForce: [false, Type.BOOLEAN], // Force use of chunk uploads even for files smaller than chunk size\n    chunkSize: [5000000, Type.INT], // Size of chunks (5MB default)\n    chunkRetryDelays: [[500, 1000, 3000], Type.ARRAY], // Amount of times to retry upload of a chunk when it fails\n\n    // The server api end points to use for uploading (see docs)\n    server: [null, Type.SERVER_API],\n\n    // File size calculations, can set to 1024, this is only used for display, properties use file size base 1000\n    fileSizeBase: [1000, Type.INT],\n\n    // Labels and status messages\n    labelFileSizeBytes: ['bytes', Type.STRING],\n    labelFileSizeKilobytes: ['KB', Type.STRING],\n    labelFileSizeMegabytes: ['MB', Type.STRING],\n    labelFileSizeGigabytes: ['GB', Type.STRING],\n\n    labelDecimalSeparator: [getDecimalSeparator(), Type.STRING], // Default is locale separator\n    labelThousandsSeparator: [getThousandsSeparator(), Type.STRING], // Default is locale separator\n\n    labelIdle: [\n        'Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>',\n        Type.STRING,\n    ],\n    labelInvalidField: ['Field contains invalid files', Type.STRING],\n    labelFileWaitingForSize: ['Waiting for size', Type.STRING],\n    labelFileSizeNotAvailable: ['Size not available', Type.STRING],\n    labelFileCountSingular: ['file in list', Type.STRING],\n    labelFileCountPlural: ['files in list', Type.STRING],\n    labelFileLoading: ['Loading', Type.STRING],\n    labelFileAdded: ['Added', Type.STRING], // assistive only\n    labelFileLoadError: ['Error during load', Type.STRING],\n    labelFileRemoved: ['Removed', Type.STRING], // assistive only\n    labelFileRemoveError: ['Error during remove', Type.STRING],\n    labelFileProcessing: ['Uploading', Type.STRING],\n    labelFileProcessingComplete: ['Upload complete', Type.STRING],\n    labelFileProcessingAborted: ['Upload cancelled', Type.STRING],\n    labelFileProcessingError: ['Error during upload', Type.STRING],\n    labelFileProcessingRevertError: ['Error during revert', Type.STRING],\n\n    labelTapToCancel: ['tap to cancel', Type.STRING],\n    labelTapToRetry: ['tap to retry', Type.STRING],\n    labelTapToUndo: ['tap to undo', Type.STRING],\n\n    labelButtonRemoveItem: ['Remove', Type.STRING],\n    labelButtonAbortItemLoad: ['Abort', Type.STRING],\n    labelButtonRetryItemLoad: ['Retry', Type.STRING],\n    labelButtonAbortItemProcessing: ['Cancel', Type.STRING],\n    labelButtonUndoItemProcessing: ['Undo', Type.STRING],\n    labelButtonRetryItemProcessing: ['Retry', Type.STRING],\n    labelButtonProcessItem: ['Upload', Type.STRING],\n\n    // make sure width and height plus viewpox are even numbers so icons are nicely centered\n    iconRemove: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.586 13l-2.293 2.293a1 1 0 0 0 1.414 1.414L13 14.414l2.293 2.293a1 1 0 0 0 1.414-1.414L14.414 13l2.293-2.293a1 1 0 0 0-1.414-1.414L13 11.586l-2.293-2.293a1 1 0 0 0-1.414 1.414L11.586 13z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconProcess: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 10.414v3.585a1 1 0 0 1-2 0v-3.585l-1.293 1.293a1 1 0 0 1-1.414-1.415l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1-1.414 1.415L14 10.414zM9 18a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2H9z\" fill=\"currentColor\" fill-rule=\"evenodd\"/></svg>',\n        Type.STRING,\n    ],\n    iconRetry: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.81 9.185l-.038.02A4.997 4.997 0 0 0 8 13.683a5 5 0 0 0 5 5 5 5 0 0 0 5-5 1 1 0 0 1 2 0A7 7 0 1 1 9.722 7.496l-.842-.21a.999.999 0 1 1 .484-1.94l3.23.806c.535.133.86.675.73 1.21l-.804 3.233a.997.997 0 0 1-1.21.73.997.997 0 0 1-.73-1.21l.23-.928v-.002z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconUndo: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.185 10.81l.02-.038A4.997 4.997 0 0 1 13.683 8a5 5 0 0 1 5 5 5 5 0 0 1-5 5 1 1 0 0 0 0 2A7 7 0 1 0 7.496 9.722l-.21-.842a.999.999 0 1 0-1.94.484l.806 3.23c.133.535.675.86 1.21.73l3.233-.803a.997.997 0 0 0 .73-1.21.997.997 0 0 0-1.21-.73l-.928.23-.002-.001z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconDone: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.293 9.293a1 1 0 0 1 1.414 1.414l-7.002 7a1 1 0 0 1-1.414 0l-3.998-4a1 1 0 1 1 1.414-1.414L12 15.586l6.294-6.293z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n\n    // event handlers\n    oninit: [null, Type.FUNCTION],\n    onwarning: [null, Type.FUNCTION],\n    onerror: [null, Type.FUNCTION],\n    onactivatefile: [null, Type.FUNCTION],\n    oninitfile: [null, Type.FUNCTION],\n    onaddfilestart: [null, Type.FUNCTION],\n    onaddfileprogress: [null, Type.FUNCTION],\n    onaddfile: [null, Type.FUNCTION],\n    onprocessfilestart: [null, Type.FUNCTION],\n    onprocessfileprogress: [null, Type.FUNCTION],\n    onprocessfileabort: [null, Type.FUNCTION],\n    onprocessfilerevert: [null, Type.FUNCTION],\n    onprocessfile: [null, Type.FUNCTION],\n    onprocessfiles: [null, Type.FUNCTION],\n    onremovefile: [null, Type.FUNCTION],\n    onpreparefile: [null, Type.FUNCTION],\n    onupdatefiles: [null, Type.FUNCTION],\n    onreorderfiles: [null, Type.FUNCTION],\n\n    // hooks\n    beforeDropFile: [null, Type.FUNCTION],\n    beforeAddFile: [null, Type.FUNCTION],\n    beforeRemoveFile: [null, Type.FUNCTION],\n    beforePrepareFile: [null, Type.FUNCTION],\n\n    // styles\n    stylePanelLayout: [null, Type.STRING], // null 'integrated', 'compact', 'circle'\n    stylePanelAspectRatio: [null, Type.STRING], // null or '3:2' or 1\n    styleItemPanelAspectRatio: [null, Type.STRING],\n    styleButtonRemoveItemPosition: ['left', Type.STRING],\n    styleButtonProcessItemPosition: ['right', Type.STRING],\n    styleLoadIndicatorPosition: ['right', Type.STRING],\n    styleProgressIndicatorPosition: ['right', Type.STRING],\n    styleButtonRemoveItemAlign: [false, Type.BOOLEAN],\n\n    // custom initial files array\n    files: [[], Type.ARRAY],\n\n    // show support by displaying credits\n    credits: [['https://pqina.nl/', 'Powered by PQINA'], Type.ARRAY],\n};\n\nconst getItemByQuery = (items, query) => {\n    // just return first index\n    if (isEmpty(query)) {\n        return items[0] || null;\n    }\n\n    // query is index\n    if (isInt(query)) {\n        return items[query] || null;\n    }\n\n    // if query is item, get the id\n    if (typeof query === 'object') {\n        query = query.id;\n    }\n\n    // assume query is a string and return item by id\n    return items.find(item => item.id === query) || null;\n};\n\nconst getNumericAspectRatioFromString = aspectRatio => {\n    if (isEmpty(aspectRatio)) {\n        return aspectRatio;\n    }\n    if (/:/.test(aspectRatio)) {\n        const parts = aspectRatio.split(':');\n        return parts[1] / parts[0];\n    }\n    return parseFloat(aspectRatio);\n};\n\nconst getActiveItems = items => items.filter(item => !item.archived);\n\nconst Status = {\n    EMPTY: 0,\n    IDLE: 1, // waiting\n    ERROR: 2, // a file is in error state\n    BUSY: 3, // busy processing or loading\n    READY: 4, // all files uploaded\n};\n\nlet res = null;\nconst canUpdateFileInput = () => {\n    if (res === null) {\n        try {\n            const dataTransfer = new DataTransfer();\n            dataTransfer.items.add(new File(['hello world'], 'This_Works.txt'));\n            const el = document.createElement('input');\n            el.setAttribute('type', 'file');\n            el.files = dataTransfer.files;\n            res = el.files.length === 1;\n        } catch (err) {\n            res = false;\n        }\n    }\n    return res;\n};\n\nconst ITEM_ERROR = [\n    ItemStatus.LOAD_ERROR,\n    ItemStatus.PROCESSING_ERROR,\n    ItemStatus.PROCESSING_REVERT_ERROR,\n];\nconst ITEM_BUSY = [\n    ItemStatus.LOADING,\n    ItemStatus.PROCESSING,\n    ItemStatus.PROCESSING_QUEUED,\n    ItemStatus.INIT,\n];\nconst ITEM_READY = [ItemStatus.PROCESSING_COMPLETE];\n\nconst isItemInErrorState = item => ITEM_ERROR.includes(item.status);\nconst isItemInBusyState = item => ITEM_BUSY.includes(item.status);\nconst isItemInReadyState = item => ITEM_READY.includes(item.status);\n\nconst isAsync = state =>\n    isObject(state.options.server) &&\n    (isObject(state.options.server.process) || isFunction(state.options.server.process));\n\nconst queries = state => ({\n    GET_STATUS: () => {\n        const items = getActiveItems(state.items);\n\n        const { EMPTY, ERROR, BUSY, IDLE, READY } = Status;\n\n        if (items.length === 0) return EMPTY;\n\n        if (items.some(isItemInErrorState)) return ERROR;\n\n        if (items.some(isItemInBusyState)) return BUSY;\n\n        if (items.some(isItemInReadyState)) return READY;\n\n        return IDLE;\n    },\n\n    GET_ITEM: query => getItemByQuery(state.items, query),\n\n    GET_ACTIVE_ITEM: query => getItemByQuery(getActiveItems(state.items), query),\n\n    GET_ACTIVE_ITEMS: () => getActiveItems(state.items),\n\n    GET_ITEMS: () => state.items,\n\n    GET_ITEM_NAME: query => {\n        const item = getItemByQuery(state.items, query);\n        return item ? item.filename : null;\n    },\n\n    GET_ITEM_SIZE: query => {\n        const item = getItemByQuery(state.items, query);\n        return item ? item.fileSize : null;\n    },\n\n    GET_STYLES: () =>\n        Object.keys(state.options)\n            .filter(key => /^style/.test(key))\n            .map(option => ({\n                name: option,\n                value: state.options[option],\n            })),\n\n    GET_PANEL_ASPECT_RATIO: () => {\n        const isShapeCircle = /circle/.test(state.options.stylePanelLayout);\n        const aspectRatio = isShapeCircle\n            ? 1\n            : getNumericAspectRatioFromString(state.options.stylePanelAspectRatio);\n        return aspectRatio;\n    },\n\n    GET_ITEM_PANEL_ASPECT_RATIO: () => state.options.styleItemPanelAspectRatio,\n\n    GET_ITEMS_BY_STATUS: status =>\n        getActiveItems(state.items).filter(item => item.status === status),\n\n    GET_TOTAL_ITEMS: () => getActiveItems(state.items).length,\n\n    SHOULD_UPDATE_FILE_INPUT: () =>\n        state.options.storeAsFile && canUpdateFileInput() && !isAsync(state),\n\n    IS_ASYNC: () => isAsync(state),\n\n    GET_FILE_SIZE_LABELS: query => ({\n        labelBytes: query('GET_LABEL_FILE_SIZE_BYTES') || undefined,\n        labelKilobytes: query('GET_LABEL_FILE_SIZE_KILOBYTES') || undefined,\n        labelMegabytes: query('GET_LABEL_FILE_SIZE_MEGABYTES') || undefined,\n        labelGigabytes: query('GET_LABEL_FILE_SIZE_GIGABYTES') || undefined,\n    }),\n});\n\nconst hasRoomForItem = state => {\n    const count = getActiveItems(state.items).length;\n\n    // if cannot have multiple items, to add one item it should currently not contain items\n    if (!state.options.allowMultiple) {\n        return count === 0;\n    }\n\n    // if allows multiple items, we check if a max item count has been set, if not, there's no limit\n    const maxFileCount = state.options.maxFiles;\n    if (maxFileCount === null) {\n        return true;\n    }\n\n    // we check if the current count is smaller than the max count, if so, another file can still be added\n    if (count < maxFileCount) {\n        return true;\n    }\n\n    // no more room for another file\n    return false;\n};\n\nconst limit = (value, min, max) => Math.max(Math.min(max, value), min);\n\nconst arrayInsert = (arr, index, item) => arr.splice(index, 0, item);\n\nconst insertItem = (items, item, index) => {\n    if (isEmpty(item)) {\n        return null;\n    }\n\n    // if index is undefined, append\n    if (typeof index === 'undefined') {\n        items.push(item);\n        return item;\n    }\n\n    // limit the index to the size of the items array\n    index = limit(index, 0, items.length);\n\n    // add item to array\n    arrayInsert(items, index, item);\n\n    // expose\n    return item;\n};\n\nconst isBase64DataURI = str =>\n    /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*)\\s*$/i.test(\n        str\n    );\n\nconst getFilenameFromURL = url =>\n    `${url}`\n        .split('/')\n        .pop()\n        .split('?')\n        .shift();\n\nconst getExtensionFromFilename = name => name.split('.').pop();\n\nconst guesstimateExtension = type => {\n    // if no extension supplied, exit here\n    if (typeof type !== 'string') {\n        return '';\n    }\n\n    // get subtype\n    const subtype = type.split('/').pop();\n\n    // is svg subtype\n    if (/svg/.test(subtype)) {\n        return 'svg';\n    }\n\n    if (/zip|compressed/.test(subtype)) {\n        return 'zip';\n    }\n\n    if (/plain/.test(subtype)) {\n        return 'txt';\n    }\n\n    if (/msword/.test(subtype)) {\n        return 'doc';\n    }\n\n    // if is valid subtype\n    if (/[a-z]+/.test(subtype)) {\n        // always use jpg extension\n        if (subtype === 'jpeg') {\n            return 'jpg';\n        }\n\n        // return subtype\n        return subtype;\n    }\n\n    return '';\n};\n\nconst leftPad = (value, padding = '') => (padding + value).slice(-padding.length);\n\nconst getDateString = (date = new Date()) =>\n    `${date.getFullYear()}-${leftPad(date.getMonth() + 1, '00')}-${leftPad(\n        date.getDate(),\n        '00'\n    )}_${leftPad(date.getHours(), '00')}-${leftPad(date.getMinutes(), '00')}-${leftPad(\n        date.getSeconds(),\n        '00'\n    )}`;\n\nconst getFileFromBlob = (blob, filename, type = null, extension = null) => {\n    const file =\n        typeof type === 'string'\n            ? blob.slice(0, blob.size, type)\n            : blob.slice(0, blob.size, blob.type);\n    file.lastModifiedDate = new Date();\n\n    // copy relative path\n    if (blob._relativePath) file._relativePath = blob._relativePath;\n\n    // if blob has name property, use as filename if no filename supplied\n    if (!isString(filename)) {\n        filename = getDateString();\n    }\n\n    // if filename supplied but no extension and filename has extension\n    if (filename && extension === null && getExtensionFromFilename(filename)) {\n        file.name = filename;\n    } else {\n        extension = extension || guesstimateExtension(file.type);\n        file.name = filename + (extension ? '.' + extension : '');\n    }\n\n    return file;\n};\n\nconst getBlobBuilder = () => {\n    return (window.BlobBuilder =\n        window.BlobBuilder ||\n        window.WebKitBlobBuilder ||\n        window.MozBlobBuilder ||\n        window.MSBlobBuilder);\n};\n\nconst createBlob = (arrayBuffer, mimeType) => {\n    const BB = getBlobBuilder();\n\n    if (BB) {\n        const bb = new BB();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mimeType);\n    }\n\n    return new Blob([arrayBuffer], {\n        type: mimeType,\n    });\n};\n\nconst getBlobFromByteStringWithMimeType = (byteString, mimeType) => {\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    return createBlob(ab, mimeType);\n};\n\nconst getMimeTypeFromBase64DataURI = dataURI => {\n    return (/^data:(.+);/.exec(dataURI) || [])[1] || null;\n};\n\nconst getBase64DataFromBase64DataURI = dataURI => {\n    // get data part of string (remove data:image/jpeg...,)\n    const data = dataURI.split(',')[1];\n\n    // remove any whitespace as that causes InvalidCharacterError in IE\n    return data.replace(/\\s/g, '');\n};\n\nconst getByteStringFromBase64DataURI = dataURI => {\n    return atob(getBase64DataFromBase64DataURI(dataURI));\n};\n\nconst getBlobFromBase64DataURI = dataURI => {\n    const mimeType = getMimeTypeFromBase64DataURI(dataURI);\n    const byteString = getByteStringFromBase64DataURI(dataURI);\n\n    return getBlobFromByteStringWithMimeType(byteString, mimeType);\n};\n\nconst getFileFromBase64DataURI = (dataURI, filename, extension) => {\n    return getFileFromBlob(getBlobFromBase64DataURI(dataURI), filename, null, extension);\n};\n\nconst getFileNameFromHeader = header => {\n    // test if is content disposition header, if not exit\n    if (!/^content-disposition:/i.test(header)) return null;\n\n    // get filename parts\n    const matches = header\n        .split(/filename=|filename\\*=.+''/)\n        .splice(1)\n        .map(name => name.trim().replace(/^[\"']|[;\"']{0,2}$/g, ''))\n        .filter(name => name.length);\n\n    return matches.length ? decodeURI(matches[matches.length - 1]) : null;\n};\n\nconst getFileSizeFromHeader = header => {\n    if (/content-length:/i.test(header)) {\n        const size = header.match(/[0-9]+/)[0];\n        return size ? parseInt(size, 10) : null;\n    }\n    return null;\n};\n\nconst getTranfserIdFromHeader = header => {\n    if (/x-content-transfer-id:/i.test(header)) {\n        const id = (header.split(':')[1] || '').trim();\n        return id || null;\n    }\n    return null;\n};\n\nconst getFileInfoFromHeaders = headers => {\n    const info = {\n        source: null,\n        name: null,\n        size: null,\n    };\n\n    const rows = headers.split('\\n');\n    for (let header of rows) {\n        const name = getFileNameFromHeader(header);\n        if (name) {\n            info.name = name;\n            continue;\n        }\n\n        const size = getFileSizeFromHeader(header);\n        if (size) {\n            info.size = size;\n            continue;\n        }\n\n        const source = getTranfserIdFromHeader(header);\n        if (source) {\n            info.source = source;\n            continue;\n        }\n    }\n\n    return info;\n};\n\nconst createFileLoader = fetchFn => {\n    const state = {\n        source: null,\n        complete: false,\n        progress: 0,\n        size: null,\n        timestamp: null,\n        duration: 0,\n        request: null,\n    };\n\n    const getProgress = () => state.progress;\n    const abort = () => {\n        if (state.request && state.request.abort) {\n            state.request.abort();\n        }\n    };\n\n    // load source\n    const load = () => {\n        // get quick reference\n        const source = state.source;\n\n        api.fire('init', source);\n\n        // Load Files\n        if (source instanceof File) {\n            api.fire('load', source);\n        } else if (source instanceof Blob) {\n            // Load blobs, set default name to current date\n            api.fire('load', getFileFromBlob(source, source.name));\n        } else if (isBase64DataURI(source)) {\n            // Load base 64, set default name to current date\n            api.fire('load', getFileFromBase64DataURI(source));\n        } else {\n            // Deal as if is external URL, let's load it!\n            loadURL(source);\n        }\n    };\n\n    // loads a url\n    const loadURL = url => {\n        // is remote url and no fetch method supplied\n        if (!fetchFn) {\n            api.fire('error', {\n                type: 'error',\n                body: \"Can't load URL\",\n                code: 400,\n            });\n            return;\n        }\n\n        // set request start\n        state.timestamp = Date.now();\n\n        // load file\n        state.request = fetchFn(\n            url,\n            response => {\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // done!\n                state.complete = true;\n\n                // turn blob response into a file\n                if (response instanceof Blob) {\n                    response = getFileFromBlob(response, response.name || getFilenameFromURL(url));\n                }\n\n                api.fire(\n                    'load',\n                    // if has received blob, we go with blob, if no response, we return null\n                    response instanceof Blob ? response : response ? response.body : null\n                );\n            },\n            error => {\n                api.fire(\n                    'error',\n                    typeof error === 'string'\n                        ? {\n                              type: 'error',\n                              code: 0,\n                              body: error,\n                          }\n                        : error\n                );\n            },\n            (computable, current, total) => {\n                // collected some meta data already\n                if (total) {\n                    state.size = total;\n                }\n\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // if we can't compute progress, we're not going to fire progress events\n                if (!computable) {\n                    state.progress = null;\n                    return;\n                }\n\n                // update progress percentage\n                state.progress = current / total;\n\n                // expose\n                api.fire('progress', state.progress);\n            },\n            () => {\n                api.fire('abort');\n            },\n            response => {\n                const fileinfo = getFileInfoFromHeaders(\n                    typeof response === 'string' ? response : response.headers\n                );\n                api.fire('meta', {\n                    size: state.size || fileinfo.size,\n                    filename: fileinfo.name,\n                    source: fileinfo.source,\n                });\n            }\n        );\n    };\n\n    const api = {\n        ...on(),\n        setSource: source => (state.source = source),\n        getProgress, // file load progress\n        abort, // abort file load\n        load, // start load\n    };\n\n    return api;\n};\n\nconst isGet = method => /GET|HEAD/.test(method);\n\nconst sendRequest = (data, url, options) => {\n    const api = {\n        onheaders: () => {},\n        onprogress: () => {},\n        onload: () => {},\n        ontimeout: () => {},\n        onerror: () => {},\n        onabort: () => {},\n        abort: () => {\n            aborted = true;\n            xhr.abort();\n        },\n    };\n\n    // timeout identifier, only used when timeout is defined\n    let aborted = false;\n    let headersReceived = false;\n\n    // set default options\n    options = {\n        method: 'POST',\n        headers: {},\n        withCredentials: false,\n        ...options,\n    };\n\n    // encode url\n    url = encodeURI(url);\n\n    // if method is GET, add any received data to url\n\n    if (isGet(options.method) && data) {\n        url = `${url}${encodeURIComponent(typeof data === 'string' ? data : JSON.stringify(data))}`;\n    }\n\n    // create request\n    const xhr = new XMLHttpRequest();\n\n    // progress of load\n    const process = isGet(options.method) ? xhr : xhr.upload;\n    process.onprogress = e => {\n        // no progress event when aborted ( onprogress is called once after abort() )\n        if (aborted) {\n            return;\n        }\n\n        api.onprogress(e.lengthComputable, e.loaded, e.total);\n    };\n\n    // tries to get header info to the app as fast as possible\n    xhr.onreadystatechange = () => {\n        // not interesting in these states ('unsent' and 'openend' as they don't give us any additional info)\n        if (xhr.readyState < 2) {\n            return;\n        }\n\n        // no server response\n        if (xhr.readyState === 4 && xhr.status === 0) {\n            return;\n        }\n\n        if (headersReceived) {\n            return;\n        }\n\n        headersReceived = true;\n\n        // we've probably received some useful data in response headers\n        api.onheaders(xhr);\n    };\n\n    // load successful\n    xhr.onload = () => {\n        // is classified as valid response\n        if (xhr.status >= 200 && xhr.status < 300) {\n            api.onload(xhr);\n        } else {\n            api.onerror(xhr);\n        }\n    };\n\n    // error during load\n    xhr.onerror = () => api.onerror(xhr);\n\n    // request aborted\n    xhr.onabort = () => {\n        aborted = true;\n        api.onabort();\n    };\n\n    // request timeout\n    xhr.ontimeout = () => api.ontimeout(xhr);\n\n    // open up open up!\n    xhr.open(options.method, url, true);\n\n    // set timeout if defined (do it after open so IE11 plays ball)\n    if (isInt(options.timeout)) {\n        xhr.timeout = options.timeout;\n    }\n\n    // add headers\n    Object.keys(options.headers).forEach(key => {\n        const value = unescape(encodeURIComponent(options.headers[key]));\n        xhr.setRequestHeader(key, value);\n    });\n\n    // set type of response\n    if (options.responseType) {\n        xhr.responseType = options.responseType;\n    }\n\n    // set credentials\n    if (options.withCredentials) {\n        xhr.withCredentials = true;\n    }\n\n    // let's send our data\n    xhr.send(data);\n\n    return api;\n};\n\nconst createResponse = (type, code, body, headers) => ({\n    type,\n    code,\n    body,\n    headers,\n});\n\nconst createTimeoutResponse = cb => xhr => {\n    cb(createResponse('error', 0, 'Timeout', xhr.getAllResponseHeaders()));\n};\n\nconst hasQS = str => /\\?/.test(str);\nconst buildURL = (...parts) => {\n    let url = '';\n    parts.forEach(part => {\n        url += hasQS(url) && hasQS(part) ? part.replace(/\\?/, '&') : part;\n    });\n    return url;\n};\n\nconst createFetchFunction = (apiUrl = '', action) => {\n    // custom handler (should also handle file, load, error, progress and abort)\n    if (typeof action === 'function') {\n        return action;\n    }\n\n    // no action supplied\n    if (!action || !isString(action.url)) {\n        return null;\n    }\n\n    // set onload hanlder\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    // internal handler\n    return (url, load, error, progress, abort, headers) => {\n        // do local or remote request based on if the url is external\n        const request = sendRequest(url, buildURL(apiUrl, action.url), {\n            ...action,\n            responseType: 'blob',\n        });\n\n        request.onload = xhr => {\n            // get headers\n            const headers = xhr.getAllResponseHeaders();\n\n            // get filename\n            const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n            // create response\n            load(\n                createResponse(\n                    'load',\n                    xhr.status,\n                    action.method === 'HEAD'\n                        ? null\n                        : getFileFromBlob(onload(xhr.response), filename),\n                    headers\n                )\n            );\n        };\n\n        request.onerror = xhr => {\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.onheaders = xhr => {\n            headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n        };\n\n        request.ontimeout = createTimeoutResponse(error);\n        request.onprogress = progress;\n        request.onabort = abort;\n\n        // should return request\n        return request;\n    };\n};\n\nconst ChunkStatus = {\n    QUEUED: 0,\n    COMPLETE: 1,\n    PROCESSING: 2,\n    ERROR: 3,\n    WAITING: 4,\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort, transfer, options) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\n\n// apiUrl, action, name, file, metadata, load, error, progress, abort, transfer, options\nconst processFileChunked = (\n    apiUrl,\n    action,\n    name,\n    file,\n    metadata,\n    load,\n    error,\n    progress,\n    abort,\n    transfer,\n    options\n) => {\n    // all chunks\n    const chunks = [];\n    const { chunkTransferId, chunkServer, chunkSize, chunkRetryDelays } = options;\n\n    // default state\n    const state = {\n        serverId: chunkTransferId,\n        aborted: false,\n    };\n\n    // set onload handlers\n    const ondata = action.ondata || (fd => fd);\n    const onload =\n        action.onload ||\n        ((xhr, method) =>\n            method === 'HEAD' ? xhr.getResponseHeader('Upload-Offset') : xhr.response);\n    const onerror = action.onerror || (res => null);\n\n    // create server hook\n    const requestTransferId = cb => {\n        const formData = new FormData();\n\n        // add metadata under same name\n        if (isObject(metadata)) formData.append(name, JSON.stringify(metadata));\n\n        const headers =\n            typeof action.headers === 'function'\n                ? action.headers(file, metadata)\n                : {\n                      ...action.headers,\n                      'Upload-Length': file.size,\n                  };\n\n        const requestParams = {\n            ...action,\n            headers,\n        };\n\n        // send request object\n        const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n\n        request.onload = xhr => cb(onload(xhr, requestParams.method));\n\n        request.onerror = xhr =>\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n\n        request.ontimeout = createTimeoutResponse(error);\n    };\n\n    const requestTransferOffset = cb => {\n        const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n\n        const headers =\n            typeof action.headers === 'function'\n                ? action.headers(state.serverId)\n                : {\n                      ...action.headers,\n                  };\n\n        const requestParams = {\n            headers,\n            method: 'HEAD',\n        };\n\n        const request = sendRequest(null, requestUrl, requestParams);\n\n        request.onload = xhr => cb(onload(xhr, requestParams.method));\n\n        request.onerror = xhr =>\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n\n        request.ontimeout = createTimeoutResponse(error);\n    };\n\n    // create chunks\n    const lastChunkIndex = Math.floor(file.size / chunkSize);\n    for (let i = 0; i <= lastChunkIndex; i++) {\n        const offset = i * chunkSize;\n        const data = file.slice(offset, offset + chunkSize, 'application/offset+octet-stream');\n        chunks[i] = {\n            index: i,\n            size: data.size,\n            offset,\n            data,\n            file,\n            progress: 0,\n            retries: [...chunkRetryDelays],\n            status: ChunkStatus.QUEUED,\n            error: null,\n            request: null,\n            timeout: null,\n        };\n    }\n\n    const completeProcessingChunks = () => load(state.serverId);\n\n    const canProcessChunk = chunk =>\n        chunk.status === ChunkStatus.QUEUED || chunk.status === ChunkStatus.ERROR;\n\n    const processChunk = chunk => {\n        // processing is paused, wait here\n        if (state.aborted) return;\n\n        // get next chunk to process\n        chunk = chunk || chunks.find(canProcessChunk);\n\n        // no more chunks to process\n        if (!chunk) {\n            // all done?\n            if (chunks.every(chunk => chunk.status === ChunkStatus.COMPLETE)) {\n                completeProcessingChunks();\n            }\n\n            // no chunk to handle\n            return;\n        }\n\n        // now processing this chunk\n        chunk.status = ChunkStatus.PROCESSING;\n        chunk.progress = null;\n\n        // allow parsing of formdata\n        const ondata = chunkServer.ondata || (fd => fd);\n        const onerror = chunkServer.onerror || (res => null);\n        const onload = chunkServer.onload || (() => {});\n\n        // send request object\n        const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n\n        const headers =\n            typeof chunkServer.headers === 'function'\n                ? chunkServer.headers(chunk)\n                : {\n                      ...chunkServer.headers,\n                      'Content-Type': 'application/offset+octet-stream',\n                      'Upload-Offset': chunk.offset,\n                      'Upload-Length': file.size,\n                      'Upload-Name': file.name,\n                  };\n\n        const request = (chunk.request = sendRequest(ondata(chunk.data), requestUrl, {\n            ...chunkServer,\n            headers,\n        }));\n\n        request.onload = xhr => {\n            // allow hooking into request result\n            onload(xhr, chunk.index, chunks.length);\n\n            // done!\n            chunk.status = ChunkStatus.COMPLETE;\n\n            // remove request reference\n            chunk.request = null;\n\n            // start processing more chunks\n            processChunks();\n        };\n\n        request.onprogress = (lengthComputable, loaded, total) => {\n            chunk.progress = lengthComputable ? loaded : null;\n            updateTotalProgress();\n        };\n\n        request.onerror = xhr => {\n            chunk.status = ChunkStatus.ERROR;\n            chunk.request = null;\n            chunk.error = onerror(xhr.response) || xhr.statusText;\n            if (!retryProcessChunk(chunk)) {\n                error(\n                    createResponse(\n                        'error',\n                        xhr.status,\n                        onerror(xhr.response) || xhr.statusText,\n                        xhr.getAllResponseHeaders()\n                    )\n                );\n            }\n        };\n\n        request.ontimeout = xhr => {\n            chunk.status = ChunkStatus.ERROR;\n            chunk.request = null;\n            if (!retryProcessChunk(chunk)) {\n                createTimeoutResponse(error)(xhr);\n            }\n        };\n\n        request.onabort = () => {\n            chunk.status = ChunkStatus.QUEUED;\n            chunk.request = null;\n            abort();\n        };\n    };\n\n    const retryProcessChunk = chunk => {\n        // no more retries left\n        if (chunk.retries.length === 0) return false;\n\n        // new retry\n        chunk.status = ChunkStatus.WAITING;\n        clearTimeout(chunk.timeout);\n        chunk.timeout = setTimeout(() => {\n            processChunk(chunk);\n        }, chunk.retries.shift());\n\n        // we're going to retry\n        return true;\n    };\n\n    const updateTotalProgress = () => {\n        // calculate total progress fraction\n        const totalBytesTransfered = chunks.reduce((p, chunk) => {\n            if (p === null || chunk.progress === null) return null;\n            return p + chunk.progress;\n        }, 0);\n\n        // can't compute progress\n        if (totalBytesTransfered === null) return progress(false, 0, 0);\n\n        // calculate progress values\n        const totalSize = chunks.reduce((total, chunk) => total + chunk.size, 0);\n\n        // can update progress indicator\n        progress(true, totalBytesTransfered, totalSize);\n    };\n\n    // process new chunks\n    const processChunks = () => {\n        const totalProcessing = chunks.filter(chunk => chunk.status === ChunkStatus.PROCESSING)\n            .length;\n        if (totalProcessing >= 1) return;\n        processChunk();\n    };\n\n    const abortChunks = () => {\n        chunks.forEach(chunk => {\n            clearTimeout(chunk.timeout);\n            if (chunk.request) {\n                chunk.request.abort();\n            }\n        });\n    };\n\n    // let's go!\n    if (!state.serverId) {\n        requestTransferId(serverId => {\n            // stop here if aborted, might have happened in between request and callback\n            if (state.aborted) return;\n\n            // pass back to item so we can use it if something goes wrong\n            transfer(serverId);\n\n            // store internally\n            state.serverId = serverId;\n            processChunks();\n        });\n    } else {\n        requestTransferOffset(offset => {\n            // stop here if aborted, might have happened in between request and callback\n            if (state.aborted) return;\n\n            // mark chunks with lower offset as complete\n            chunks\n                .filter(chunk => chunk.offset < offset)\n                .forEach(chunk => {\n                    chunk.status = ChunkStatus.COMPLETE;\n                    chunk.progress = chunk.size;\n                });\n\n            // continue processing\n            processChunks();\n        });\n    }\n\n    return {\n        abort: () => {\n            state.aborted = true;\n            abortChunks();\n        },\n    };\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\nconst createFileProcessorFunction = (apiUrl, action, name, options) => (\n    file,\n    metadata,\n    load,\n    error,\n    progress,\n    abort,\n    transfer\n) => {\n    // no file received\n    if (!file) return;\n\n    // if was passed a file, and we can chunk it, exit here\n    const canChunkUpload = options.chunkUploads;\n    const shouldChunkUpload = canChunkUpload && file.size > options.chunkSize;\n    const willChunkUpload = canChunkUpload && (shouldChunkUpload || options.chunkForce);\n    if (file instanceof Blob && willChunkUpload)\n        return processFileChunked(\n            apiUrl,\n            action,\n            name,\n            file,\n            metadata,\n            load,\n            error,\n            progress,\n            abort,\n            transfer,\n            options\n        );\n\n    // set handlers\n    const ondata = action.ondata || (fd => fd);\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    const headers =\n        typeof action.headers === 'function'\n            ? action.headers(file, metadata) || {}\n            : {\n                  ...action.headers,\n              };\n\n    const requestParams = {\n        ...action,\n        headers,\n    };\n\n    // create formdata object\n    var formData = new FormData();\n\n    // add metadata under same name\n    if (isObject(metadata)) {\n        formData.append(name, JSON.stringify(metadata));\n    }\n\n    // Turn into an array of objects so no matter what the input, we can handle it the same way\n    (file instanceof Blob ? [{ name: null, file }] : file).forEach(item => {\n        formData.append(\n            name,\n            item.file,\n            item.name === null ? item.file.name : `${item.name}${item.file.name}`\n        );\n    });\n\n    // send request object\n    const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n    request.onload = xhr => {\n        load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n    };\n\n    request.onerror = xhr => {\n        error(\n            createResponse(\n                'error',\n                xhr.status,\n                onerror(xhr.response) || xhr.statusText,\n                xhr.getAllResponseHeaders()\n            )\n        );\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort;\n\n    // should return request\n    return request;\n};\n\nconst createProcessorFunction = (apiUrl = '', action, name, options) => {\n    // custom handler (should also handle file, load, error, progress and abort)\n    if (typeof action === 'function') return (...params) => action(name, ...params, options);\n\n    // no action supplied\n    if (!action || !isString(action.url)) return null;\n\n    // internal handler\n    return createFileProcessorFunction(apiUrl, action, name, options);\n};\n\n/*\n function signature:\n (uniqueFileId, load, error) => { }\n */\nconst createRevertFunction = (apiUrl = '', action) => {\n    // is custom implementation\n    if (typeof action === 'function') {\n        return action;\n    }\n\n    // no action supplied, return stub function, interface will work, but file won't be removed\n    if (!action || !isString(action.url)) {\n        return (uniqueFileId, load) => load();\n    }\n\n    // set onload hanlder\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    // internal implementation\n    return (uniqueFileId, load, error) => {\n        const request = sendRequest(\n            uniqueFileId,\n            apiUrl + action.url,\n            action // contains method, headers and withCredentials properties\n        );\n        request.onload = xhr => {\n            load(\n                createResponse(\n                    'load',\n                    xhr.status,\n                    onload(xhr.response),\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.onerror = xhr => {\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.ontimeout = createTimeoutResponse(error);\n\n        return request;\n    };\n};\n\nconst getRandomNumber = (min = 0, max = 1) => min + Math.random() * (max - min);\n\nconst createPerceivedPerformanceUpdater = (\n    cb,\n    duration = 1000,\n    offset = 0,\n    tickMin = 25,\n    tickMax = 250\n) => {\n    let timeout = null;\n    const start = Date.now();\n\n    const tick = () => {\n        let runtime = Date.now() - start;\n        let delay = getRandomNumber(tickMin, tickMax);\n\n        if (runtime + delay > duration) {\n            delay = runtime + delay - duration;\n        }\n\n        let progress = runtime / duration;\n        if (progress >= 1 || document.hidden) {\n            cb(1);\n            return;\n        }\n\n        cb(progress);\n\n        timeout = setTimeout(tick, delay);\n    };\n\n    if (duration > 0) tick();\n\n    return {\n        clear: () => {\n            clearTimeout(timeout);\n        },\n    };\n};\n\nconst createFileProcessor = (processFn, options) => {\n    const state = {\n        complete: false,\n        perceivedProgress: 0,\n        perceivedPerformanceUpdater: null,\n        progress: null,\n        timestamp: null,\n        perceivedDuration: 0,\n        duration: 0,\n        request: null,\n        response: null,\n    };\n\n    const { allowMinimumUploadDuration } = options;\n\n    const process = (file, metadata) => {\n        const progressFn = () => {\n            // we've not yet started the real download, stop here\n            // the request might not go through, for instance, there might be some server trouble\n            // if state.progress is null, the server does not allow computing progress and we show the spinner instead\n            if (state.duration === 0 || state.progress === null) return;\n\n            // as we're now processing, fire the progress event\n            api.fire('progress', api.getProgress());\n        };\n\n        const completeFn = () => {\n            state.complete = true;\n            api.fire('load-perceived', state.response.body);\n        };\n\n        // let's start processing\n        api.fire('start');\n\n        // set request start\n        state.timestamp = Date.now();\n\n        // create perceived performance progress indicator\n        state.perceivedPerformanceUpdater = createPerceivedPerformanceUpdater(\n            progress => {\n                state.perceivedProgress = progress;\n                state.perceivedDuration = Date.now() - state.timestamp;\n\n                progressFn();\n\n                // if fake progress is done, and a response has been received,\n                // and we've not yet called the complete method\n                if (state.response && state.perceivedProgress === 1 && !state.complete) {\n                    // we done!\n                    completeFn();\n                }\n            },\n            // random delay as in a list of files you start noticing\n            // files uploading at the exact same speed\n            allowMinimumUploadDuration ? getRandomNumber(750, 1500) : 0\n        );\n\n        // remember request so we can abort it later\n        state.request = processFn(\n            // the file to process\n            file,\n\n            // the metadata to send along\n            metadata,\n\n            // callbacks (load, error, progress, abort, transfer)\n            // load expects the body to be a server id if\n            // you want to make use of revert\n            response => {\n                // we put the response in state so we can access\n                // it outside of this method\n                state.response = isObject(response)\n                    ? response\n                    : {\n                          type: 'load',\n                          code: 200,\n                          body: `${response}`,\n                          headers: {},\n                      };\n\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // force progress to 1 as we're now done\n                state.progress = 1;\n\n                // actual load is done let's share results\n                api.fire('load', state.response.body);\n\n                // we are really done\n                // if perceived progress is 1 ( wait for perceived progress to complete )\n                // or if server does not support progress ( null )\n                if (\n                    !allowMinimumUploadDuration ||\n                    (allowMinimumUploadDuration && state.perceivedProgress === 1)\n                ) {\n                    completeFn();\n                }\n            },\n\n            // error is expected to be an object with type, code, body\n            error => {\n                // cancel updater\n                state.perceivedPerformanceUpdater.clear();\n\n                // update others about this error\n                api.fire(\n                    'error',\n                    isObject(error)\n                        ? error\n                        : {\n                              type: 'error',\n                              code: 0,\n                              body: `${error}`,\n                          }\n                );\n            },\n\n            // actual processing progress\n            (computable, current, total) => {\n                // update actual duration\n                state.duration = Date.now() - state.timestamp;\n\n                // update actual progress\n                state.progress = computable ? current / total : null;\n\n                progressFn();\n            },\n\n            // abort does not expect a value\n            () => {\n                // stop updater\n                state.perceivedPerformanceUpdater.clear();\n\n                // fire the abort event so we can switch visuals\n                api.fire('abort', state.response ? state.response.body : null);\n            },\n\n            // register the id for this transfer\n            transferId => {\n                api.fire('transfer', transferId);\n            }\n        );\n    };\n\n    const abort = () => {\n        // no request running, can't abort\n        if (!state.request) return;\n\n        // stop updater\n        state.perceivedPerformanceUpdater.clear();\n\n        // abort actual request\n        if (state.request.abort) state.request.abort();\n\n        // if has response object, we've completed the request\n        state.complete = true;\n    };\n\n    const reset = () => {\n        abort();\n        state.complete = false;\n        state.perceivedProgress = 0;\n        state.progress = 0;\n        state.timestamp = null;\n        state.perceivedDuration = 0;\n        state.duration = 0;\n        state.request = null;\n        state.response = null;\n    };\n\n    const getProgress = allowMinimumUploadDuration\n        ? () => (state.progress ? Math.min(state.progress, state.perceivedProgress) : null)\n        : () => state.progress || null;\n\n    const getDuration = allowMinimumUploadDuration\n        ? () => Math.min(state.duration, state.perceivedDuration)\n        : () => state.duration;\n\n    const api = {\n        ...on(),\n        process, // start processing file\n        abort, // abort active process request\n        getProgress,\n        getDuration,\n        reset,\n    };\n\n    return api;\n};\n\nconst getFilenameWithoutExtension = name => name.substring(0, name.lastIndexOf('.')) || name;\n\nconst createFileStub = source => {\n    let data = [source.name, source.size, source.type];\n\n    // is blob or base64, then we need to set the name\n    if (source instanceof Blob || isBase64DataURI(source)) {\n        data[0] = source.name || getDateString();\n    } else if (isBase64DataURI(source)) {\n        // if is base64 data uri we need to determine the average size and type\n        data[1] = source.length;\n        data[2] = getMimeTypeFromBase64DataURI(source);\n    } else if (isString(source)) {\n        // url\n        data[0] = getFilenameFromURL(source);\n        data[1] = 0;\n        data[2] = 'application/octet-stream';\n    }\n\n    return {\n        name: data[0],\n        size: data[1],\n        type: data[2],\n    };\n};\n\nconst isFile = value => !!(value instanceof File || (value instanceof Blob && value.name));\n\nconst deepCloneObject = src => {\n    if (!isObject(src)) return src;\n    const target = isArray(src) ? [] : {};\n    for (const key in src) {\n        if (!src.hasOwnProperty(key)) continue;\n        const v = src[key];\n        target[key] = v && isObject(v) ? deepCloneObject(v) : v;\n    }\n    return target;\n};\n\nconst createItem = (origin = null, serverFileReference = null, file = null) => {\n    // unique id for this item, is used to identify the item across views\n    const id = getUniqueId();\n\n    /**\n     * Internal item state\n     */\n    const state = {\n        // is archived\n        archived: false,\n\n        // if is frozen, no longer fires events\n        frozen: false,\n\n        // removed from view\n        released: false,\n\n        // original source\n        source: null,\n\n        // file model reference\n        file,\n\n        // id of file on server\n        serverFileReference,\n\n        // id of file transfer on server\n        transferId: null,\n\n        // is aborted\n        processingAborted: false,\n\n        // current item status\n        status: serverFileReference ? ItemStatus.PROCESSING_COMPLETE : ItemStatus.INIT,\n\n        // active processes\n        activeLoader: null,\n        activeProcessor: null,\n    };\n\n    // callback used when abort processing is called to link back to the resolve method\n    let abortProcessingRequestComplete = null;\n\n    /**\n     * Externally added item metadata\n     */\n    const metadata = {};\n\n    // item data\n    const setStatus = status => (state.status = status);\n\n    // fire event unless the item has been archived\n    const fire = (event, ...params) => {\n        if (state.released || state.frozen) return;\n        api.fire(event, ...params);\n    };\n\n    // file data\n    const getFileExtension = () => getExtensionFromFilename(state.file.name);\n    const getFileType = () => state.file.type;\n    const getFileSize = () => state.file.size;\n    const getFile = () => state.file;\n\n    //\n    // logic to load a file\n    //\n    const load = (source, loader, onload) => {\n        // remember the original item source\n        state.source = source;\n\n        // source is known\n        api.fireSync('init');\n\n        // file stub is already there\n        if (state.file) {\n            api.fireSync('load-skip');\n            return;\n        }\n\n        // set a stub file object while loading the actual data\n        state.file = createFileStub(source);\n\n        // starts loading\n        loader.on('init', () => {\n            fire('load-init');\n        });\n\n        // we'eve received a size indication, let's update the stub\n        loader.on('meta', meta => {\n            // set size of file stub\n            state.file.size = meta.size;\n\n            // set name of file stub\n            state.file.filename = meta.filename;\n\n            // if has received source, we done\n            if (meta.source) {\n                origin = FileOrigin.LIMBO;\n                state.serverFileReference = meta.source;\n                state.status = ItemStatus.PROCESSING_COMPLETE;\n            }\n\n            // size has been updated\n            fire('load-meta');\n        });\n\n        // the file is now loading we need to update the progress indicators\n        loader.on('progress', progress => {\n            setStatus(ItemStatus.LOADING);\n\n            fire('load-progress', progress);\n        });\n\n        // an error was thrown while loading the file, we need to switch to error state\n        loader.on('error', error => {\n            setStatus(ItemStatus.LOAD_ERROR);\n\n            fire('load-request-error', error);\n        });\n\n        // user or another process aborted the file load (cannot retry)\n        loader.on('abort', () => {\n            setStatus(ItemStatus.INIT);\n            fire('load-abort');\n        });\n\n        // done loading\n        loader.on('load', file => {\n            // as we've now loaded the file the loader is no longer required\n            state.activeLoader = null;\n\n            // called when file has loaded succesfully\n            const success = result => {\n                // set (possibly) transformed file\n                state.file = isFile(result) ? result : state.file;\n\n                // file received\n                if (origin === FileOrigin.LIMBO && state.serverFileReference) {\n                    setStatus(ItemStatus.PROCESSING_COMPLETE);\n                } else {\n                    setStatus(ItemStatus.IDLE);\n                }\n\n                fire('load');\n            };\n\n            const error = result => {\n                // set original file\n                state.file = file;\n                fire('load-meta');\n\n                setStatus(ItemStatus.LOAD_ERROR);\n                fire('load-file-error', result);\n            };\n\n            // if we already have a server file reference, we don't need to call the onload method\n            if (state.serverFileReference) {\n                success(file);\n                return;\n            }\n\n            // no server id, let's give this file the full treatment\n            onload(file, success, error);\n        });\n\n        // set loader source data\n        loader.setSource(source);\n\n        // set as active loader\n        state.activeLoader = loader;\n\n        // load the source data\n        loader.load();\n    };\n\n    const retryLoad = () => {\n        if (!state.activeLoader) {\n            return;\n        }\n        state.activeLoader.load();\n    };\n\n    const abortLoad = () => {\n        if (state.activeLoader) {\n            state.activeLoader.abort();\n            return;\n        }\n        setStatus(ItemStatus.INIT);\n        fire('load-abort');\n    };\n\n    //\n    // logic to process a file\n    //\n    const process = (processor, onprocess) => {\n        // processing was aborted\n        if (state.processingAborted) {\n            state.processingAborted = false;\n            return;\n        }\n\n        // now processing\n        setStatus(ItemStatus.PROCESSING);\n\n        // reset abort callback\n        abortProcessingRequestComplete = null;\n\n        // if no file loaded we'll wait for the load event\n        if (!(state.file instanceof Blob)) {\n            api.on('load', () => {\n                process(processor, onprocess);\n            });\n            return;\n        }\n\n        // setup processor\n        processor.on('load', serverFileReference => {\n            // need this id to be able to revert the upload\n            state.transferId = null;\n            state.serverFileReference = serverFileReference;\n        });\n\n        // register transfer id\n        processor.on('transfer', transferId => {\n            // need this id to be able to revert the upload\n            state.transferId = transferId;\n        });\n\n        processor.on('load-perceived', serverFileReference => {\n            // no longer required\n            state.activeProcessor = null;\n\n            // need this id to be able to rever the upload\n            state.transferId = null;\n            state.serverFileReference = serverFileReference;\n\n            setStatus(ItemStatus.PROCESSING_COMPLETE);\n            fire('process-complete', serverFileReference);\n        });\n\n        processor.on('start', () => {\n            fire('process-start');\n        });\n\n        processor.on('error', error => {\n            state.activeProcessor = null;\n            setStatus(ItemStatus.PROCESSING_ERROR);\n            fire('process-error', error);\n        });\n\n        processor.on('abort', serverFileReference => {\n            state.activeProcessor = null;\n\n            // if file was uploaded but processing was cancelled during perceived processor time store file reference\n            state.serverFileReference = serverFileReference;\n\n            setStatus(ItemStatus.IDLE);\n            fire('process-abort');\n\n            // has timeout so doesn't interfere with remove action\n            if (abortProcessingRequestComplete) {\n                abortProcessingRequestComplete();\n            }\n        });\n\n        processor.on('progress', progress => {\n            fire('process-progress', progress);\n        });\n\n        // when successfully transformed\n        const success = file => {\n            // if was archived in the mean time, don't process\n            if (state.archived) return;\n\n            // process file!\n            processor.process(file, { ...metadata });\n        };\n\n        // something went wrong during transform phase\n        const error = console.error;\n\n        // start processing the file\n        onprocess(state.file, success, error);\n\n        // set as active processor\n        state.activeProcessor = processor;\n    };\n\n    const requestProcessing = () => {\n        state.processingAborted = false;\n        setStatus(ItemStatus.PROCESSING_QUEUED);\n    };\n\n    const abortProcessing = () =>\n        new Promise(resolve => {\n            if (!state.activeProcessor) {\n                state.processingAborted = true;\n\n                setStatus(ItemStatus.IDLE);\n                fire('process-abort');\n\n                resolve();\n                return;\n            }\n\n            abortProcessingRequestComplete = () => {\n                resolve();\n            };\n\n            state.activeProcessor.abort();\n        });\n\n    //\n    // logic to revert a processed file\n    //\n    const revert = (revertFileUpload, forceRevert) =>\n        new Promise((resolve, reject) => {\n            // a completed upload will have a serverFileReference, a failed chunked upload where\n            // getting a serverId succeeded but >=0 chunks have been uploaded will have transferId set\n            const serverTransferId =\n                state.serverFileReference !== null ? state.serverFileReference : state.transferId;\n\n            // cannot revert without a server id for this process\n            if (serverTransferId === null) {\n                resolve();\n                return;\n            }\n\n            // revert the upload (fire and forget)\n            revertFileUpload(\n                serverTransferId,\n                () => {\n                    // reset file server id and transfer id as now it's not available on the server\n                    state.serverFileReference = null;\n                    state.transferId = null;\n                    resolve();\n                },\n                error => {\n                    // don't set error state when reverting is optional, it will always resolve\n                    if (!forceRevert) {\n                        resolve();\n                        return;\n                    }\n\n                    // oh no errors\n                    setStatus(ItemStatus.PROCESSING_REVERT_ERROR);\n                    fire('process-revert-error');\n                    reject(error);\n                }\n            );\n\n            // fire event\n            setStatus(ItemStatus.IDLE);\n            fire('process-revert');\n        });\n\n    // exposed methods\n    const setMetadata = (key, value, silent) => {\n        const keys = key.split('.');\n        const root = keys[0];\n        const last = keys.pop();\n        let data = metadata;\n        keys.forEach(key => (data = data[key]));\n\n        // compare old value against new value, if they're the same, we're not updating\n        if (JSON.stringify(data[last]) === JSON.stringify(value)) return;\n\n        // update value\n        data[last] = value;\n\n        // fire update\n        fire('metadata-update', {\n            key: root,\n            value: metadata[root],\n            silent,\n        });\n    };\n\n    const getMetadata = key => deepCloneObject(key ? metadata[key] : metadata);\n\n    const api = {\n        id: { get: () => id },\n        origin: { get: () => origin, set: value => (origin = value) },\n        serverId: { get: () => state.serverFileReference },\n        transferId: { get: () => state.transferId },\n        status: { get: () => state.status },\n        filename: { get: () => state.file.name },\n        filenameWithoutExtension: { get: () => getFilenameWithoutExtension(state.file.name) },\n        fileExtension: { get: getFileExtension },\n        fileType: { get: getFileType },\n        fileSize: { get: getFileSize },\n        file: { get: getFile },\n        relativePath: { get: () => state.file._relativePath },\n\n        source: { get: () => state.source },\n\n        getMetadata,\n        setMetadata: (key, value, silent) => {\n            if (isObject(key)) {\n                const data = key;\n                Object.keys(data).forEach(key => {\n                    setMetadata(key, data[key], value);\n                });\n                return key;\n            }\n            setMetadata(key, value, silent);\n            return value;\n        },\n\n        extend: (name, handler) => (itemAPI[name] = handler),\n\n        abortLoad,\n        retryLoad,\n        requestProcessing,\n        abortProcessing,\n\n        load,\n        process,\n        revert,\n\n        ...on(),\n\n        freeze: () => (state.frozen = true),\n\n        release: () => (state.released = true),\n        released: { get: () => state.released },\n\n        archive: () => (state.archived = true),\n        archived: { get: () => state.archived },\n\n        // replace source and file object\n        setFile: file => (state.file = file),\n    };\n\n    // create it here instead of returning it instantly so we can extend it later\n    const itemAPI = createObject(api);\n\n    return itemAPI;\n};\n\nconst getItemIndexByQuery = (items, query) => {\n    // just return first index\n    if (isEmpty(query)) {\n        return 0;\n    }\n\n    // invalid queries\n    if (!isString(query)) {\n        return -1;\n    }\n\n    // return item by id (or -1 if not found)\n    return items.findIndex(item => item.id === query);\n};\n\nconst getItemById = (items, itemId) => {\n    const index = getItemIndexByQuery(items, itemId);\n    if (index < 0) {\n        return;\n    }\n    return items[index] || null;\n};\n\nconst fetchBlob = (url, load, error, progress, abort, headers) => {\n    const request = sendRequest(null, url, {\n        method: 'GET',\n        responseType: 'blob',\n    });\n\n    request.onload = xhr => {\n        // get headers\n        const headers = xhr.getAllResponseHeaders();\n\n        // get filename\n        const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n        // create response\n        load(createResponse('load', xhr.status, getFileFromBlob(xhr.response, filename), headers));\n    };\n\n    request.onerror = xhr => {\n        error(createResponse('error', xhr.status, xhr.statusText, xhr.getAllResponseHeaders()));\n    };\n\n    request.onheaders = xhr => {\n        headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort;\n\n    // should return request\n    return request;\n};\n\nconst getDomainFromURL = url => {\n    if (url.indexOf('//') === 0) {\n        url = location.protocol + url;\n    }\n    return url\n        .toLowerCase()\n        .replace('blob:', '')\n        .replace(/([a-z])?:\\/\\//, '$1')\n        .split('/')[0];\n};\n\nconst isExternalURL = url =>\n    (url.indexOf(':') > -1 || url.indexOf('//') > -1) &&\n    getDomainFromURL(location.href) !== getDomainFromURL(url);\n\nconst dynamicLabel = label => (...params) => (isFunction(label) ? label(...params) : label);\n\nconst isMockItem = item => !isFile(item.file);\n\nconst listUpdated = (dispatch, state) => {\n    clearTimeout(state.listUpdateTimeout);\n    state.listUpdateTimeout = setTimeout(() => {\n        dispatch('DID_UPDATE_ITEMS', { items: getActiveItems(state.items) });\n    }, 0);\n};\n\nconst optionalPromise = (fn, ...params) =>\n    new Promise(resolve => {\n        if (!fn) {\n            return resolve(true);\n        }\n\n        const result = fn(...params);\n\n        if (result == null) {\n            return resolve(true);\n        }\n\n        if (typeof result === 'boolean') {\n            return resolve(result);\n        }\n\n        if (typeof result.then === 'function') {\n            result.then(resolve);\n        }\n    });\n\nconst sortItems = (state, compare) => {\n    state.items.sort((a, b) => compare(createItemAPI(a), createItemAPI(b)));\n};\n\n// returns item based on state\nconst getItemByQueryFromState = (state, itemHandler) => ({\n    query,\n    success = () => {},\n    failure = () => {},\n    ...options\n} = {}) => {\n    const item = getItemByQuery(state.items, query);\n    if (!item) {\n        failure({\n            error: createResponse('error', 0, 'Item not found'),\n            file: null,\n        });\n        return;\n    }\n    itemHandler(item, success, failure, options || {});\n};\n\nconst actions = (dispatch, query, state) => ({\n    /**\n     * Aborts all ongoing processes\n     */\n    ABORT_ALL: () => {\n        getActiveItems(state.items).forEach(item => {\n            item.freeze();\n            item.abortLoad();\n            item.abortProcessing();\n        });\n    },\n\n    /**\n     * Sets initial files\n     */\n    DID_SET_FILES: ({ value = [] }) => {\n        // map values to file objects\n        const files = value.map(file => ({\n            source: file.source ? file.source : file,\n            options: file.options,\n        }));\n\n        // loop over files, if file is in list, leave it be, if not, remove\n        // test if items should be moved\n        let activeItems = getActiveItems(state.items);\n\n        activeItems.forEach(item => {\n            // if item not is in new value, remove\n            if (!files.find(file => file.source === item.source || file.source === item.file)) {\n                dispatch('REMOVE_ITEM', { query: item, remove: false });\n            }\n        });\n\n        // add new files\n        activeItems = getActiveItems(state.items);\n        files.forEach((file, index) => {\n            // if file is already in list\n            if (activeItems.find(item => item.source === file.source || item.file === file.source))\n                return;\n\n            // not in list, add\n            dispatch('ADD_ITEM', {\n                ...file,\n                interactionMethod: InteractionMethod.NONE,\n                index,\n            });\n        });\n    },\n\n    DID_UPDATE_ITEM_METADATA: ({ id, action, change }) => {\n        // don't do anything\n        if (change.silent) return;\n\n        // if is called multiple times in close succession we combined all calls together to save resources\n        clearTimeout(state.itemUpdateTimeout);\n        state.itemUpdateTimeout = setTimeout(() => {\n            const item = getItemById(state.items, id);\n\n            // only revert and attempt to upload when we're uploading to a server\n            if (!query('IS_ASYNC')) {\n                // should we update the output data\n                applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n                    item,\n                    query,\n                    action,\n                    change,\n                }).then(shouldPrepareOutput => {\n                    // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n                    const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n                    if (beforePrepareFile)\n                        shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n\n                    if (!shouldPrepareOutput) return;\n\n                    dispatch(\n                        'REQUEST_PREPARE_OUTPUT',\n                        {\n                            query: id,\n                            item,\n                            success: file => {\n                                dispatch('DID_PREPARE_OUTPUT', { id, file });\n                            },\n                        },\n                        true\n                    );\n                });\n\n                return;\n            }\n\n            // if is local item we need to enable upload button so change can be propagated to server\n            if (item.origin === FileOrigin.LOCAL) {\n                dispatch('DID_LOAD_ITEM', {\n                    id: item.id,\n                    error: null,\n                    serverFileReference: item.source,\n                });\n            }\n\n            // for async scenarios\n            const upload = () => {\n                // we push this forward a bit so the interface is updated correctly\n                setTimeout(() => {\n                    dispatch('REQUEST_ITEM_PROCESSING', { query: id });\n                }, 32);\n            };\n\n            const revert = doUpload => {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                )\n                    .then(doUpload ? upload : () => {})\n                    .catch(() => {});\n            };\n\n            const abort = doUpload => {\n                item.abortProcessing().then(doUpload ? upload : () => {});\n            };\n\n            // if we should re-upload the file immediately\n            if (item.status === ItemStatus.PROCESSING_COMPLETE) {\n                return revert(state.options.instantUpload);\n            }\n\n            // if currently uploading, cancel upload\n            if (item.status === ItemStatus.PROCESSING) {\n                return abort(state.options.instantUpload);\n            }\n\n            if (state.options.instantUpload) {\n                upload();\n            }\n        }, 0);\n    },\n\n    MOVE_ITEM: ({ query, index }) => {\n        const item = getItemByQuery(state.items, query);\n        if (!item) return;\n        const currentIndex = state.items.indexOf(item);\n        index = limit(index, 0, state.items.length - 1);\n        if (currentIndex === index) return;\n        state.items.splice(index, 0, state.items.splice(currentIndex, 1)[0]);\n    },\n\n    SORT: ({ compare }) => {\n        sortItems(state, compare);\n        dispatch('DID_SORT_ITEMS', {\n            items: query('GET_ACTIVE_ITEMS'),\n        });\n    },\n\n    ADD_ITEMS: ({ items, index, interactionMethod, success = () => {}, failure = () => {} }) => {\n        let currentIndex = index;\n\n        if (index === -1 || typeof index === 'undefined') {\n            const insertLocation = query('GET_ITEM_INSERT_LOCATION');\n            const totalItems = query('GET_TOTAL_ITEMS');\n            currentIndex = insertLocation === 'before' ? 0 : totalItems;\n        }\n\n        const ignoredFiles = query('GET_IGNORED_FILES');\n        const isValidFile = source =>\n            isFile(source) ? !ignoredFiles.includes(source.name.toLowerCase()) : !isEmpty(source);\n        const validItems = items.filter(isValidFile);\n\n        const promises = validItems.map(\n            source =>\n                new Promise((resolve, reject) => {\n                    dispatch('ADD_ITEM', {\n                        interactionMethod,\n                        source: source.source || source,\n                        success: resolve,\n                        failure: reject,\n                        index: currentIndex++,\n                        options: source.options || {},\n                    });\n                })\n        );\n\n        Promise.all(promises)\n            .then(success)\n            .catch(failure);\n    },\n\n    /**\n     * @param source\n     * @param index\n     * @param interactionMethod\n     */\n    ADD_ITEM: ({\n        source,\n        index = -1,\n        interactionMethod,\n        success = () => {},\n        failure = () => {},\n        options = {},\n    }) => {\n        // if no source supplied\n        if (isEmpty(source)) {\n            failure({\n                error: createResponse('error', 0, 'No source'),\n                file: null,\n            });\n            return;\n        }\n\n        // filter out invalid file items, used to filter dropped directory contents\n        if (isFile(source) && state.options.ignoredFiles.includes(source.name.toLowerCase())) {\n            // fail silently\n            return;\n        }\n\n        // test if there's still room in the list of files\n        if (!hasRoomForItem(state)) {\n            // if multiple allowed, we can't replace\n            // or if only a single item is allowed but we're not allowed to replace it we exit\n            if (\n                state.options.allowMultiple ||\n                (!state.options.allowMultiple && !state.options.allowReplace)\n            ) {\n                const error = createResponse('warning', 0, 'Max files');\n\n                dispatch('DID_THROW_MAX_FILES', {\n                    source,\n                    error,\n                });\n\n                failure({ error, file: null });\n\n                return;\n            }\n\n            // let's replace the item\n            // id of first item we're about to remove\n            const item = getActiveItems(state.items)[0];\n\n            // if has been processed remove it from the server as well\n            if (\n                item.status === ItemStatus.PROCESSING_COMPLETE ||\n                item.status === ItemStatus.PROCESSING_REVERT_ERROR\n            ) {\n                const forceRevert = query('GET_FORCE_REVERT');\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    forceRevert\n                )\n                    .then(() => {\n                        if (!forceRevert) return;\n\n                        // try to add now\n                        dispatch('ADD_ITEM', {\n                            source,\n                            index,\n                            interactionMethod,\n                            success,\n                            failure,\n                            options,\n                        });\n                    })\n                    .catch(() => {}); // no need to handle this catch state for now\n\n                if (forceRevert) return;\n            }\n\n            // remove first item as it will be replaced by this item\n            dispatch('REMOVE_ITEM', { query: item.id });\n        }\n\n        // where did the file originate\n        const origin =\n            options.type === 'local'\n                ? FileOrigin.LOCAL\n                : options.type === 'limbo'\n                ? FileOrigin.LIMBO\n                : FileOrigin.INPUT;\n\n        // create a new blank item\n        const item = createItem(\n            // where did this file come from\n            origin,\n\n            // an input file never has a server file reference\n            origin === FileOrigin.INPUT ? null : source,\n\n            // file mock data, if defined\n            options.file\n        );\n\n        // set initial meta data\n        Object.keys(options.metadata || {}).forEach(key => {\n            item.setMetadata(key, options.metadata[key]);\n        });\n\n        // created the item, let plugins add methods\n        applyFilters('DID_CREATE_ITEM', item, { query, dispatch });\n\n        // where to insert new items\n        const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n\n        // adjust index if is not allowed to pick location\n        if (!state.options.itemInsertLocationFreedom) {\n            index = itemInsertLocation === 'before' ? -1 : state.items.length;\n        }\n\n        // add item to list\n        insertItem(state.items, item, index);\n\n        // sort items in list\n        if (isFunction(itemInsertLocation) && source) {\n            sortItems(state, itemInsertLocation);\n        }\n\n        // get a quick reference to the item id\n        const id = item.id;\n\n        // observe item events\n        item.on('init', () => {\n            dispatch('DID_INIT_ITEM', { id });\n        });\n\n        item.on('load-init', () => {\n            dispatch('DID_START_ITEM_LOAD', { id });\n        });\n\n        item.on('load-meta', () => {\n            dispatch('DID_UPDATE_ITEM_META', { id });\n        });\n\n        item.on('load-progress', progress => {\n            dispatch('DID_UPDATE_ITEM_LOAD_PROGRESS', { id, progress });\n        });\n\n        item.on('load-request-error', error => {\n            const mainStatus = dynamicLabel(state.options.labelFileLoadError)(error);\n\n            // is client error, no way to recover\n            if (error.code >= 400 && error.code < 500) {\n                dispatch('DID_THROW_ITEM_INVALID', {\n                    id,\n                    error,\n                    status: {\n                        main: mainStatus,\n                        sub: `${error.code} (${error.body})`,\n                    },\n                });\n\n                // reject the file so can be dealt with through API\n                failure({ error, file: createItemAPI(item) });\n                return;\n            }\n\n            // is possible server error, so might be possible to retry\n            dispatch('DID_THROW_ITEM_LOAD_ERROR', {\n                id,\n                error,\n                status: {\n                    main: mainStatus,\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('load-file-error', error => {\n            dispatch('DID_THROW_ITEM_INVALID', {\n                id,\n                error: error.status,\n                status: error.status,\n            });\n            failure({ error: error.status, file: createItemAPI(item) });\n        });\n\n        item.on('load-abort', () => {\n            dispatch('REMOVE_ITEM', { query: id });\n        });\n\n        item.on('load-skip', () => {\n            item.on('metadata-update', change => {\n                if (!isFile(item.file)) return;\n                dispatch('DID_UPDATE_ITEM_METADATA', { id, change });\n            });\n\n            dispatch('COMPLETE_LOAD_ITEM', {\n                query: id,\n                item,\n                data: {\n                    source,\n                    success,\n                },\n            });\n        });\n\n        item.on('load', () => {\n            const handleAdd = shouldAdd => {\n                // no should not add this file\n                if (!shouldAdd) {\n                    dispatch('REMOVE_ITEM', {\n                        query: id,\n                    });\n                    return;\n                }\n\n                // now interested in metadata updates\n                item.on('metadata-update', change => {\n                    dispatch('DID_UPDATE_ITEM_METADATA', { id, change });\n                });\n\n                // let plugins decide if the output data should be prepared at this point\n                // means we'll do this and wait for idle state\n                applyFilterChain('SHOULD_PREPARE_OUTPUT', false, { item, query }).then(\n                    shouldPrepareOutput => {\n                        // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n                        const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n                        if (beforePrepareFile)\n                            shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n\n                        const loadComplete = () => {\n                            dispatch('COMPLETE_LOAD_ITEM', {\n                                query: id,\n                                item,\n                                data: {\n                                    source,\n                                    success,\n                                },\n                            });\n\n                            listUpdated(dispatch, state);\n                        };\n\n                        // exit\n                        if (shouldPrepareOutput) {\n                            // wait for idle state and then run PREPARE_OUTPUT\n                            dispatch(\n                                'REQUEST_PREPARE_OUTPUT',\n                                {\n                                    query: id,\n                                    item,\n                                    success: file => {\n                                        dispatch('DID_PREPARE_OUTPUT', { id, file });\n                                        loadComplete();\n                                    },\n                                },\n                                true\n                            );\n\n                            return;\n                        }\n\n                        loadComplete();\n                    }\n                );\n            };\n\n            // item loaded, allow plugins to\n            // - read data (quickly)\n            // - add metadata\n            applyFilterChain('DID_LOAD_ITEM', item, { query, dispatch })\n                .then(() => {\n                    optionalPromise(query('GET_BEFORE_ADD_FILE'), createItemAPI(item)).then(\n                        handleAdd\n                    );\n                })\n                .catch(e => {\n                    if (!e || !e.error || !e.status) return handleAdd(false);\n                    dispatch('DID_THROW_ITEM_INVALID', {\n                        id,\n                        error: e.error,\n                        status: e.status,\n                    });\n                });\n        });\n\n        item.on('process-start', () => {\n            dispatch('DID_START_ITEM_PROCESSING', { id });\n        });\n\n        item.on('process-progress', progress => {\n            dispatch('DID_UPDATE_ITEM_PROCESS_PROGRESS', { id, progress });\n        });\n\n        item.on('process-error', error => {\n            dispatch('DID_THROW_ITEM_PROCESSING_ERROR', {\n                id,\n                error,\n                status: {\n                    main: dynamicLabel(state.options.labelFileProcessingError)(error),\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('process-revert-error', error => {\n            dispatch('DID_THROW_ITEM_PROCESSING_REVERT_ERROR', {\n                id,\n                error,\n                status: {\n                    main: dynamicLabel(state.options.labelFileProcessingRevertError)(error),\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('process-complete', serverFileReference => {\n            dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n                id,\n                error: null,\n                serverFileReference,\n            });\n            dispatch('DID_DEFINE_VALUE', { id, value: serverFileReference });\n        });\n\n        item.on('process-abort', () => {\n            dispatch('DID_ABORT_ITEM_PROCESSING', { id });\n        });\n\n        item.on('process-revert', () => {\n            dispatch('DID_REVERT_ITEM_PROCESSING', { id });\n            dispatch('DID_DEFINE_VALUE', { id, value: null });\n        });\n\n        // let view know the item has been inserted\n        dispatch('DID_ADD_ITEM', { id, index, interactionMethod });\n\n        listUpdated(dispatch, state);\n\n        // start loading the source\n        const { url, load, restore, fetch } = state.options.server || {};\n\n        item.load(\n            source,\n\n            // this creates a function that loads the file based on the type of file (string, base64, blob, file) and location of file (local, remote, limbo)\n            createFileLoader(\n                origin === FileOrigin.INPUT\n                    ? // input, if is remote, see if should use custom fetch, else use default fetchBlob\n                      isString(source) && isExternalURL(source)\n                        ? fetch\n                            ? createFetchFunction(url, fetch)\n                            : fetchBlob // remote url\n                        : fetchBlob // try to fetch url\n                    : // limbo or local\n                    origin === FileOrigin.LIMBO\n                    ? createFetchFunction(url, restore) // limbo\n                    : createFetchFunction(url, load) // local\n            ),\n\n            // called when the file is loaded so it can be piped through the filters\n            (file, success, error) => {\n                // let's process the file\n                applyFilterChain('LOAD_FILE', file, { query })\n                    .then(success)\n                    .catch(error);\n            }\n        );\n    },\n\n    REQUEST_PREPARE_OUTPUT: ({ item, success, failure = () => {} }) => {\n        // error response if item archived\n        const err = {\n            error: createResponse('error', 0, 'Item not found'),\n            file: null,\n        };\n\n        // don't handle archived items, an item could have been archived (load aborted) while waiting to be prepared\n        if (item.archived) return failure(err);\n\n        // allow plugins to alter the file data\n        applyFilterChain('PREPARE_OUTPUT', item.file, { query, item }).then(result => {\n            applyFilterChain('COMPLETE_PREPARE_OUTPUT', result, { query, item }).then(result => {\n                // don't handle archived items, an item could have been archived (load aborted) while being prepared\n                if (item.archived) return failure(err);\n\n                // we done!\n                success(result);\n            });\n        });\n    },\n\n    COMPLETE_LOAD_ITEM: ({ item, data }) => {\n        const { success, source } = data;\n\n        // sort items in list\n        const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n        if (isFunction(itemInsertLocation) && source) {\n            sortItems(state, itemInsertLocation);\n        }\n\n        // let interface know the item has loaded\n        dispatch('DID_LOAD_ITEM', {\n            id: item.id,\n            error: null,\n            serverFileReference: item.origin === FileOrigin.INPUT ? null : source,\n        });\n\n        // item has been successfully loaded and added to the\n        // list of items so can now be safely returned for use\n        success(createItemAPI(item));\n\n        // if this is a local server file we need to show a different state\n        if (item.origin === FileOrigin.LOCAL) {\n            dispatch('DID_LOAD_LOCAL_ITEM', { id: item.id });\n            return;\n        }\n\n        // if is a temp server file we prevent async upload call here (as the file is already on the server)\n        if (item.origin === FileOrigin.LIMBO) {\n            dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n                id: item.id,\n                error: null,\n                serverFileReference: source,\n            });\n\n            dispatch('DID_DEFINE_VALUE', {\n                id: item.id,\n                value: item.serverId || source,\n            });\n            return;\n        }\n\n        // id we are allowed to upload the file immediately, lets do it\n        if (query('IS_ASYNC') && state.options.instantUpload) {\n            dispatch('REQUEST_ITEM_PROCESSING', { query: item.id });\n        }\n    },\n\n    RETRY_ITEM_LOAD: getItemByQueryFromState(state, item => {\n        // try loading the source one more time\n        item.retryLoad();\n    }),\n\n    REQUEST_ITEM_PREPARE: getItemByQueryFromState(state, (item, success, failure) => {\n        dispatch(\n            'REQUEST_PREPARE_OUTPUT',\n            {\n                query: item.id,\n                item,\n                success: file => {\n                    dispatch('DID_PREPARE_OUTPUT', { id: item.id, file });\n                    success({\n                        file: item,\n                        output: file,\n                    });\n                },\n                failure,\n            },\n            true\n        );\n    }),\n\n    REQUEST_ITEM_PROCESSING: getItemByQueryFromState(state, (item, success, failure) => {\n        // cannot be queued (or is already queued)\n        const itemCanBeQueuedForProcessing =\n            // waiting for something\n            item.status === ItemStatus.IDLE ||\n            // processing went wrong earlier\n            item.status === ItemStatus.PROCESSING_ERROR;\n\n        // not ready to be processed\n        if (!itemCanBeQueuedForProcessing) {\n            const processNow = () =>\n                dispatch('REQUEST_ITEM_PROCESSING', { query: item, success, failure });\n\n            const process = () => (document.hidden ? processNow() : setTimeout(processNow, 32));\n\n            // if already done processing or tried to revert but didn't work, try again\n            if (\n                item.status === ItemStatus.PROCESSING_COMPLETE ||\n                item.status === ItemStatus.PROCESSING_REVERT_ERROR\n            ) {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                )\n                    .then(process)\n                    .catch(() => {}); // don't continue with processing if something went wrong\n            } else if (item.status === ItemStatus.PROCESSING) {\n                item.abortProcessing().then(process);\n            }\n\n            return;\n        }\n\n        // already queued for processing\n        if (item.status === ItemStatus.PROCESSING_QUEUED) return;\n\n        item.requestProcessing();\n\n        dispatch('DID_REQUEST_ITEM_PROCESSING', { id: item.id });\n\n        dispatch('PROCESS_ITEM', { query: item, success, failure }, true);\n    }),\n\n    PROCESS_ITEM: getItemByQueryFromState(state, (item, success, failure) => {\n        const maxParallelUploads = query('GET_MAX_PARALLEL_UPLOADS');\n        const totalCurrentUploads = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING).length;\n\n        // queue and wait till queue is freed up\n        if (totalCurrentUploads === maxParallelUploads) {\n            // queue for later processing\n            state.processingQueue.push({\n                id: item.id,\n                success,\n                failure,\n            });\n\n            // stop it!\n            return;\n        }\n\n        // if was not queued or is already processing exit here\n        if (item.status === ItemStatus.PROCESSING) return;\n\n        const processNext = () => {\n            // process queueud items\n            const queueEntry = state.processingQueue.shift();\n\n            // no items left\n            if (!queueEntry) return;\n\n            // get item reference\n            const { id, success, failure } = queueEntry;\n            const itemReference = getItemByQuery(state.items, id);\n\n            // if item was archived while in queue, jump to next\n            if (!itemReference || itemReference.archived) {\n                processNext();\n                return;\n            }\n\n            // process queued item\n            dispatch('PROCESS_ITEM', { query: id, success, failure }, true);\n        };\n\n        // we done function\n        item.onOnce('process-complete', () => {\n            success(createItemAPI(item));\n            processNext();\n\n            // if origin is local, and we're instant uploading, trigger remove of original\n            // as revert will remove file from list\n            const server = state.options.server;\n            const instantUpload = state.options.instantUpload;\n            if (instantUpload && item.origin === FileOrigin.LOCAL && isFunction(server.remove)) {\n                const noop = () => {};\n                item.origin = FileOrigin.LIMBO;\n                state.options.server.remove(item.source, noop, noop);\n            }\n\n            // All items processed? No errors?\n            const allItemsProcessed =\n                query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING_COMPLETE).length ===\n                state.items.length;\n            if (allItemsProcessed) {\n                dispatch('DID_COMPLETE_ITEM_PROCESSING_ALL');\n            }\n        });\n\n        // we error function\n        item.onOnce('process-error', error => {\n            failure({ error, file: createItemAPI(item) });\n            processNext();\n        });\n\n        // start file processing\n        const options = state.options;\n        item.process(\n            createFileProcessor(\n                createProcessorFunction(options.server.url, options.server.process, options.name, {\n                    chunkTransferId: item.transferId,\n                    chunkServer: options.server.patch,\n                    chunkUploads: options.chunkUploads,\n                    chunkForce: options.chunkForce,\n                    chunkSize: options.chunkSize,\n                    chunkRetryDelays: options.chunkRetryDelays,\n                }),\n                {\n                    allowMinimumUploadDuration: query('GET_ALLOW_MINIMUM_UPLOAD_DURATION'),\n                }\n            ),\n            // called when the file is about to be processed so it can be piped through the transform filters\n            (file, success, error) => {\n                // allow plugins to alter the file data\n                applyFilterChain('PREPARE_OUTPUT', file, { query, item })\n                    .then(file => {\n                        dispatch('DID_PREPARE_OUTPUT', { id: item.id, file });\n\n                        success(file);\n                    })\n                    .catch(error);\n            }\n        );\n    }),\n\n    RETRY_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        dispatch('REQUEST_ITEM_PROCESSING', { query: item });\n    }),\n\n    REQUEST_REMOVE_ITEM: getItemByQueryFromState(state, item => {\n        optionalPromise(query('GET_BEFORE_REMOVE_FILE'), createItemAPI(item)).then(shouldRemove => {\n            if (!shouldRemove) {\n                return;\n            }\n            dispatch('REMOVE_ITEM', { query: item });\n        });\n    }),\n\n    RELEASE_ITEM: getItemByQueryFromState(state, item => {\n        item.release();\n    }),\n\n    REMOVE_ITEM: getItemByQueryFromState(state, (item, success, failure, options) => {\n        const removeFromView = () => {\n            // get id reference\n            const id = item.id;\n\n            // archive the item, this does not remove it from the list\n            getItemById(state.items, id).archive();\n\n            // tell the view the item has been removed\n            dispatch('DID_REMOVE_ITEM', { error: null, id, item });\n\n            // now the list has been modified\n            listUpdated(dispatch, state);\n\n            // correctly removed\n            success(createItemAPI(item));\n        };\n\n        // if this is a local file and the `server.remove` function has been configured,\n        // send source there so dev can remove file from server\n        const server = state.options.server;\n        if (\n            item.origin === FileOrigin.LOCAL &&\n            server &&\n            isFunction(server.remove) &&\n            options.remove !== false\n        ) {\n            dispatch('DID_START_ITEM_REMOVE', { id: item.id });\n\n            server.remove(\n                item.source,\n                () => removeFromView(),\n                status => {\n                    dispatch('DID_THROW_ITEM_REMOVE_ERROR', {\n                        id: item.id,\n                        error: createResponse('error', 0, status, null),\n                        status: {\n                            main: dynamicLabel(state.options.labelFileRemoveError)(status),\n                            sub: state.options.labelTapToRetry,\n                        },\n                    });\n                }\n            );\n        } else {\n            // if is requesting revert and can revert need to call revert handler (not calling request_ because that would also trigger beforeRemoveHook)\n            if (\n                (options.revert && item.origin !== FileOrigin.LOCAL && item.serverId !== null) ||\n                // if chunked uploads are enabled and we're uploading in chunks for this specific file\n                // or if the file isn't big enough for chunked uploads but chunkForce is set then call\n                // revert before removing from the view...\n                (state.options.chunkUploads && item.file.size > state.options.chunkSize) ||\n                (state.options.chunkUploads && state.options.chunkForce)\n            ) {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                );\n            }\n\n            // can now safely remove from view\n            removeFromView();\n        }\n    }),\n\n    ABORT_ITEM_LOAD: getItemByQueryFromState(state, item => {\n        item.abortLoad();\n    }),\n\n    ABORT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        // test if is already processed\n        if (item.serverId) {\n            dispatch('REVERT_ITEM_PROCESSING', { id: item.id });\n            return;\n        }\n\n        // abort\n        item.abortProcessing().then(() => {\n            const shouldRemove = state.options.instantUpload;\n            if (shouldRemove) {\n                dispatch('REMOVE_ITEM', { query: item.id });\n            }\n        });\n    }),\n\n    REQUEST_REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        // not instant uploading, revert immediately\n        if (!state.options.instantUpload) {\n            dispatch('REVERT_ITEM_PROCESSING', { query: item });\n            return;\n        }\n\n        // if we're instant uploading the file will also be removed if we revert,\n        // so if a before remove file hook is defined we need to run it now\n        const handleRevert = shouldRevert => {\n            if (!shouldRevert) return;\n            dispatch('REVERT_ITEM_PROCESSING', { query: item });\n        };\n\n        const fn = query('GET_BEFORE_REMOVE_FILE');\n        if (!fn) {\n            return handleRevert(true);\n        }\n\n        const requestRemoveResult = fn(createItemAPI(item));\n        if (requestRemoveResult == null) {\n            // undefined or null\n            return handleRevert(true);\n        }\n\n        if (typeof requestRemoveResult === 'boolean') {\n            return handleRevert(requestRemoveResult);\n        }\n\n        if (typeof requestRemoveResult.then === 'function') {\n            requestRemoveResult.then(handleRevert);\n        }\n    }),\n\n    REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        item.revert(\n            createRevertFunction(state.options.server.url, state.options.server.revert),\n            query('GET_FORCE_REVERT')\n        )\n            .then(() => {\n                const shouldRemove = state.options.instantUpload || isMockItem(item);\n                if (shouldRemove) {\n                    dispatch('REMOVE_ITEM', { query: item.id });\n                }\n            })\n            .catch(() => {});\n    }),\n\n    SET_OPTIONS: ({ options }) => {\n        // get all keys passed\n        const optionKeys = Object.keys(options);\n\n        // get prioritized keyed to include (remove once not in options object)\n        const prioritizedOptionKeys = PrioritizedOptions.filter(key => optionKeys.includes(key));\n\n        // order the keys, prioritized first, then rest\n        const orderedOptionKeys = [\n            // add prioritized first if passed to options, else remove\n            ...prioritizedOptionKeys,\n\n            // prevent duplicate keys\n            ...Object.keys(options).filter(key => !prioritizedOptionKeys.includes(key)),\n        ];\n\n        // dispatch set event for each option\n        orderedOptionKeys.forEach(key => {\n            dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n                value: options[key],\n            });\n        });\n    },\n});\n\nconst PrioritizedOptions = [\n    'server', // must be processed before \"files\"\n];\n\nconst formatFilename = name => name;\n\nconst createElement$1 = tagName => {\n    return document.createElement(tagName);\n};\n\nconst text = (node, value) => {\n    let textNode = node.childNodes[0];\n    if (!textNode) {\n        textNode = document.createTextNode(value);\n        node.appendChild(textNode);\n    } else if (value !== textNode.nodeValue) {\n        textNode.nodeValue = value;\n    }\n};\n\nconst polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n    const angleInRadians = (((angleInDegrees % 360) - 90) * Math.PI) / 180.0;\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians),\n    };\n};\n\nconst describeArc = (x, y, radius, startAngle, endAngle, arcSweep) => {\n    const start = polarToCartesian(x, y, radius, endAngle);\n    const end = polarToCartesian(x, y, radius, startAngle);\n    return ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');\n};\n\nconst percentageArc = (x, y, radius, from, to) => {\n    let arcSweep = 1;\n    if (to > from && to - from <= 0.5) {\n        arcSweep = 0;\n    }\n    if (from > to && from - to >= 0.5) {\n        arcSweep = 0;\n    }\n    return describeArc(\n        x,\n        y,\n        radius,\n        Math.min(0.9999, from) * 360,\n        Math.min(0.9999, to) * 360,\n        arcSweep\n    );\n};\n\nconst create = ({ root, props }) => {\n    // start at 0\n    props.spin = false;\n    props.progress = 0;\n    props.opacity = 0;\n\n    // svg\n    const svg = createElement('svg');\n    root.ref.path = createElement('path', {\n        'stroke-width': 2,\n        'stroke-linecap': 'round',\n    });\n    svg.appendChild(root.ref.path);\n\n    root.ref.svg = svg;\n\n    root.appendChild(svg);\n};\n\nconst write = ({ root, props }) => {\n    if (props.opacity === 0) {\n        return;\n    }\n\n    if (props.align) {\n        root.element.dataset.align = props.align;\n    }\n\n    // get width of stroke\n    const ringStrokeWidth = parseInt(attr(root.ref.path, 'stroke-width'), 10);\n\n    // calculate size of ring\n    const size = root.rect.element.width * 0.5;\n\n    // ring state\n    let ringFrom = 0;\n    let ringTo = 0;\n\n    // now in busy mode\n    if (props.spin) {\n        ringFrom = 0;\n        ringTo = 0.5;\n    } else {\n        ringFrom = 0;\n        ringTo = props.progress;\n    }\n\n    // get arc path\n    const coordinates = percentageArc(size, size, size - ringStrokeWidth, ringFrom, ringTo);\n\n    // update progress bar\n    attr(root.ref.path, 'd', coordinates);\n\n    // hide while contains 0 value\n    attr(root.ref.path, 'stroke-opacity', props.spin || props.progress > 0 ? 1 : 0);\n};\n\nconst progressIndicator = createView({\n    tag: 'div',\n    name: 'progress-indicator',\n    ignoreRectUpdate: true,\n    ignoreRect: true,\n    create,\n    write,\n    mixins: {\n        apis: ['progress', 'spin', 'align'],\n        styles: ['opacity'],\n        animations: {\n            opacity: { type: 'tween', duration: 500 },\n            progress: {\n                type: 'spring',\n                stiffness: 0.95,\n                damping: 0.65,\n                mass: 10,\n            },\n        },\n    },\n});\n\nconst create$1 = ({ root, props }) => {\n    root.element.innerHTML = (props.icon || '') + `<span>${props.label}</span>`;\n\n    props.isDisabled = false;\n};\n\nconst write$1 = ({ root, props }) => {\n    const { isDisabled } = props;\n    const shouldDisable = root.query('GET_DISABLED') || props.opacity === 0;\n\n    if (shouldDisable && !isDisabled) {\n        props.isDisabled = true;\n        attr(root.element, 'disabled', 'disabled');\n    } else if (!shouldDisable && isDisabled) {\n        props.isDisabled = false;\n        root.element.removeAttribute('disabled');\n    }\n};\n\nconst fileActionButton = createView({\n    tag: 'button',\n    attributes: {\n        type: 'button',\n    },\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'file-action-button',\n    mixins: {\n        apis: ['label'],\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            translateX: 'spring',\n            translateY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n        listeners: true,\n    },\n    create: create$1,\n    write: write$1,\n});\n\nconst toNaturalFileSize = (bytes, decimalSeparator = '.', base = 1000, options = {}) => {\n    const {\n        labelBytes = 'bytes',\n        labelKilobytes = 'KB',\n        labelMegabytes = 'MB',\n        labelGigabytes = 'GB',\n    } = options;\n\n    // no negative byte sizes\n    bytes = Math.round(Math.abs(bytes));\n\n    const KB = base;\n    const MB = base * base;\n    const GB = base * base * base;\n\n    // just bytes\n    if (bytes < KB) {\n        return `${bytes} ${labelBytes}`;\n    }\n\n    // kilobytes\n    if (bytes < MB) {\n        return `${Math.floor(bytes / KB)} ${labelKilobytes}`;\n    }\n\n    // megabytes\n    if (bytes < GB) {\n        return `${removeDecimalsWhenZero(bytes / MB, 1, decimalSeparator)} ${labelMegabytes}`;\n    }\n\n    // gigabytes\n    return `${removeDecimalsWhenZero(bytes / GB, 2, decimalSeparator)} ${labelGigabytes}`;\n};\n\nconst removeDecimalsWhenZero = (value, decimalCount, separator) => {\n    return value\n        .toFixed(decimalCount)\n        .split('.')\n        .filter(part => part !== '0')\n        .join(separator);\n};\n\nconst create$2 = ({ root, props }) => {\n    // filename\n    const fileName = createElement$1('span');\n    fileName.className = 'filepond--file-info-main';\n    // hide for screenreaders\n    // the file is contained in a fieldset with legend that contains the filename\n    // no need to read it twice\n    attr(fileName, 'aria-hidden', 'true');\n    root.appendChild(fileName);\n    root.ref.fileName = fileName;\n\n    // filesize\n    const fileSize = createElement$1('span');\n    fileSize.className = 'filepond--file-info-sub';\n    root.appendChild(fileSize);\n    root.ref.fileSize = fileSize;\n\n    // set initial values\n    text(fileSize, root.query('GET_LABEL_FILE_WAITING_FOR_SIZE'));\n    text(fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst updateFile = ({ root, props }) => {\n    text(\n        root.ref.fileSize,\n        toNaturalFileSize(\n            root.query('GET_ITEM_SIZE', props.id),\n            '.',\n            root.query('GET_FILE_SIZE_BASE'),\n            root.query('GET_FILE_SIZE_LABELS', root.query)\n        )\n    );\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst updateFileSizeOnError = ({ root, props }) => {\n    // if size is available don't fallback to unknown size message\n    if (isInt(root.query('GET_ITEM_SIZE', props.id))) {\n        updateFile({ root, props });\n        return;\n    }\n\n    text(root.ref.fileSize, root.query('GET_LABEL_FILE_SIZE_NOT_AVAILABLE'));\n};\n\nconst fileInfo = createView({\n    name: 'file-info',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: updateFile,\n        DID_UPDATE_ITEM_META: updateFile,\n        DID_THROW_ITEM_LOAD_ERROR: updateFileSizeOnError,\n        DID_THROW_ITEM_INVALID: updateFileSizeOnError,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    create: create$2,\n    mixins: {\n        styles: ['translateX', 'translateY'],\n        animations: {\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\nconst toPercentage = value => Math.round(value * 100);\n\nconst create$3 = ({ root }) => {\n    // main status\n    const main = createElement$1('span');\n    main.className = 'filepond--file-status-main';\n    root.appendChild(main);\n    root.ref.main = main;\n\n    // sub status\n    const sub = createElement$1('span');\n    sub.className = 'filepond--file-status-sub';\n    root.appendChild(sub);\n    root.ref.sub = sub;\n\n    didSetItemLoadProgress({ root, action: { progress: null } });\n};\n\nconst didSetItemLoadProgress = ({ root, action }) => {\n    const title =\n        action.progress === null\n            ? root.query('GET_LABEL_FILE_LOADING')\n            : `${root.query('GET_LABEL_FILE_LOADING')} ${toPercentage(action.progress)}%`;\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didSetItemProcessProgress = ({ root, action }) => {\n    const title =\n        action.progress === null\n            ? root.query('GET_LABEL_FILE_PROCESSING')\n            : `${root.query('GET_LABEL_FILE_PROCESSING')} ${toPercentage(action.progress)}%`;\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didRequestItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didAbortItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_ABORTED'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_RETRY'));\n};\n\nconst didCompleteItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_COMPLETE'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_UNDO'));\n};\n\nconst clear = ({ root }) => {\n    text(root.ref.main, '');\n    text(root.ref.sub, '');\n};\n\nconst error = ({ root, action }) => {\n    text(root.ref.main, action.status.main);\n    text(root.ref.sub, action.status.sub);\n};\n\nconst fileStatus = createView({\n    name: 'file-status',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: clear,\n        DID_REVERT_ITEM_PROCESSING: clear,\n        DID_REQUEST_ITEM_PROCESSING: didRequestItemProcessing,\n        DID_ABORT_ITEM_PROCESSING: didAbortItemProcessing,\n        DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing,\n        DID_UPDATE_ITEM_PROCESS_PROGRESS: didSetItemProcessProgress,\n        DID_UPDATE_ITEM_LOAD_PROGRESS: didSetItemLoadProgress,\n        DID_THROW_ITEM_LOAD_ERROR: error,\n        DID_THROW_ITEM_INVALID: error,\n        DID_THROW_ITEM_PROCESSING_ERROR: error,\n        DID_THROW_ITEM_PROCESSING_REVERT_ERROR: error,\n        DID_THROW_ITEM_REMOVE_ERROR: error,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    create: create$3,\n    mixins: {\n        styles: ['translateX', 'translateY', 'opacity'],\n        animations: {\n            opacity: { type: 'tween', duration: 250 },\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\n/**\n * Button definitions for the file view\n */\n\nconst Buttons = {\n    AbortItemLoad: {\n        label: 'GET_LABEL_BUTTON_ABORT_ITEM_LOAD',\n        action: 'ABORT_ITEM_LOAD',\n        className: 'filepond--action-abort-item-load',\n        align: 'LOAD_INDICATOR_POSITION', // right\n    },\n    RetryItemLoad: {\n        label: 'GET_LABEL_BUTTON_RETRY_ITEM_LOAD',\n        action: 'RETRY_ITEM_LOAD',\n        icon: 'GET_ICON_RETRY',\n        className: 'filepond--action-retry-item-load',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RemoveItem: {\n        label: 'GET_LABEL_BUTTON_REMOVE_ITEM',\n        action: 'REQUEST_REMOVE_ITEM',\n        icon: 'GET_ICON_REMOVE',\n        className: 'filepond--action-remove-item',\n        align: 'BUTTON_REMOVE_ITEM_POSITION', // left\n    },\n    ProcessItem: {\n        label: 'GET_LABEL_BUTTON_PROCESS_ITEM',\n        action: 'REQUEST_ITEM_PROCESSING',\n        icon: 'GET_ICON_PROCESS',\n        className: 'filepond--action-process-item',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    AbortItemProcessing: {\n        label: 'GET_LABEL_BUTTON_ABORT_ITEM_PROCESSING',\n        action: 'ABORT_ITEM_PROCESSING',\n        className: 'filepond--action-abort-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RetryItemProcessing: {\n        label: 'GET_LABEL_BUTTON_RETRY_ITEM_PROCESSING',\n        action: 'RETRY_ITEM_PROCESSING',\n        icon: 'GET_ICON_RETRY',\n        className: 'filepond--action-retry-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RevertItemProcessing: {\n        label: 'GET_LABEL_BUTTON_UNDO_ITEM_PROCESSING',\n        action: 'REQUEST_REVERT_ITEM_PROCESSING',\n        icon: 'GET_ICON_UNDO',\n        className: 'filepond--action-revert-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n};\n\n// make a list of buttons, we can then remove buttons from this list if they're disabled\nconst ButtonKeys = [];\nforin(Buttons, key => {\n    ButtonKeys.push(key);\n});\n\nconst calculateFileInfoOffset = root => {\n    if (getRemoveIndicatorAligment(root) === 'right') return 0;\n    const buttonRect = root.ref.buttonRemoveItem.rect.element;\n    return buttonRect.hidden ? null : buttonRect.width + buttonRect.left;\n};\n\nconst calculateButtonWidth = root => {\n    const buttonRect = root.ref.buttonAbortItemLoad.rect.element;\n    return buttonRect.width;\n};\n\n// Force on full pixels so text stays crips\nconst calculateFileVerticalCenterOffset = root =>\n    Math.floor(root.ref.buttonRemoveItem.rect.element.height / 4);\nconst calculateFileHorizontalCenterOffset = root =>\n    Math.floor(root.ref.buttonRemoveItem.rect.element.left / 2);\n\nconst getLoadIndicatorAlignment = root => root.query('GET_STYLE_LOAD_INDICATOR_POSITION');\nconst getProcessIndicatorAlignment = root => root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION');\nconst getRemoveIndicatorAligment = root => root.query('GET_STYLE_BUTTON_REMOVE_ITEM_POSITION');\n\nconst DefaultStyle = {\n    buttonAbortItemLoad: { opacity: 0 },\n    buttonRetryItemLoad: { opacity: 0 },\n    buttonRemoveItem: { opacity: 0 },\n    buttonProcessItem: { opacity: 0 },\n    buttonAbortItemProcessing: { opacity: 0 },\n    buttonRetryItemProcessing: { opacity: 0 },\n    buttonRevertItemProcessing: { opacity: 0 },\n    loadProgressIndicator: { opacity: 0, align: getLoadIndicatorAlignment },\n    processProgressIndicator: { opacity: 0, align: getProcessIndicatorAlignment },\n    processingCompleteIndicator: { opacity: 0, scaleX: 0.75, scaleY: 0.75 },\n    info: { translateX: 0, translateY: 0, opacity: 0 },\n    status: { translateX: 0, translateY: 0, opacity: 0 },\n};\n\nconst IdleStyle = {\n    buttonRemoveItem: { opacity: 1 },\n    buttonProcessItem: { opacity: 1 },\n    info: { translateX: calculateFileInfoOffset },\n    status: { translateX: calculateFileInfoOffset },\n};\n\nconst ProcessingStyle = {\n    buttonAbortItemProcessing: { opacity: 1 },\n    processProgressIndicator: { opacity: 1 },\n    status: { opacity: 1 },\n};\n\nconst StyleMap = {\n    DID_THROW_ITEM_INVALID: {\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { translateX: calculateFileInfoOffset, opacity: 1 },\n    },\n    DID_START_ITEM_LOAD: {\n        buttonAbortItemLoad: { opacity: 1 },\n        loadProgressIndicator: { opacity: 1 },\n        status: { opacity: 1 },\n    },\n    DID_THROW_ITEM_LOAD_ERROR: {\n        buttonRetryItemLoad: { opacity: 1 },\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1 },\n    },\n    DID_START_ITEM_REMOVE: {\n        processProgressIndicator: { opacity: 1, align: getRemoveIndicatorAligment },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 0 },\n    },\n    DID_THROW_ITEM_REMOVE_ERROR: {\n        processProgressIndicator: { opacity: 0, align: getRemoveIndicatorAligment },\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1, translateX: calculateFileInfoOffset },\n    },\n    DID_LOAD_ITEM: IdleStyle,\n    DID_LOAD_LOCAL_ITEM: {\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { translateX: calculateFileInfoOffset },\n    },\n    DID_START_ITEM_PROCESSING: ProcessingStyle,\n    DID_REQUEST_ITEM_PROCESSING: ProcessingStyle,\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ProcessingStyle,\n    DID_COMPLETE_ITEM_PROCESSING: {\n        buttonRevertItemProcessing: { opacity: 1 },\n        info: { opacity: 1 },\n        status: { opacity: 1 },\n    },\n    DID_THROW_ITEM_PROCESSING_ERROR: {\n        buttonRemoveItem: { opacity: 1 },\n        buttonRetryItemProcessing: { opacity: 1 },\n        status: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n    },\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: {\n        buttonRevertItemProcessing: { opacity: 1 },\n        status: { opacity: 1 },\n        info: { opacity: 1 },\n    },\n    DID_ABORT_ITEM_PROCESSING: {\n        buttonRemoveItem: { opacity: 1 },\n        buttonProcessItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1 },\n    },\n    DID_REVERT_ITEM_PROCESSING: IdleStyle,\n};\n\n// complete indicator view\nconst processingCompleteIndicatorView = createView({\n    create: ({ root }) => {\n        root.element.innerHTML = root.query('GET_ICON_DONE');\n    },\n    name: 'processing-complete-indicator',\n    ignoreRect: true,\n    mixins: {\n        styles: ['scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n    },\n});\n\n/**\n * Creates the file view\n */\nconst create$4 = ({ root, props }) => {\n    // copy Buttons object\n    const LocalButtons = Object.keys(Buttons).reduce((prev, curr) => {\n        prev[curr] = { ...Buttons[curr] };\n        return prev;\n    }, {});\n\n    const { id } = props;\n\n    // allow reverting upload\n    const allowRevert = root.query('GET_ALLOW_REVERT');\n\n    // allow remove file\n    const allowRemove = root.query('GET_ALLOW_REMOVE');\n\n    // allow processing upload\n    const allowProcess = root.query('GET_ALLOW_PROCESS');\n\n    // is instant uploading, need this to determine the icon of the undo button\n    const instantUpload = root.query('GET_INSTANT_UPLOAD');\n\n    // is async set up\n    const isAsync = root.query('IS_ASYNC');\n\n    // should align remove item buttons\n    const alignRemoveItemButton = root.query('GET_STYLE_BUTTON_REMOVE_ITEM_ALIGN');\n\n    // enabled buttons array\n    let buttonFilter;\n    if (isAsync) {\n        if (allowProcess && !allowRevert) {\n            // only remove revert button\n            buttonFilter = key => !/RevertItemProcessing/.test(key);\n        } else if (!allowProcess && allowRevert) {\n            // only remove process button\n            buttonFilter = key => !/ProcessItem|RetryItemProcessing|AbortItemProcessing/.test(key);\n        } else if (!allowProcess && !allowRevert) {\n            // remove all process buttons\n            buttonFilter = key => !/Process/.test(key);\n        }\n    } else {\n        // no process controls available\n        buttonFilter = key => !/Process/.test(key);\n    }\n\n    const enabledButtons = buttonFilter ? ButtonKeys.filter(buttonFilter) : ButtonKeys.concat();\n\n    // update icon and label for revert button when instant uploading\n    if (instantUpload && allowRevert) {\n        LocalButtons['RevertItemProcessing'].label = 'GET_LABEL_BUTTON_REMOVE_ITEM';\n        LocalButtons['RevertItemProcessing'].icon = 'GET_ICON_REMOVE';\n    }\n\n    // remove last button (revert) if not allowed\n    if (isAsync && !allowRevert) {\n        const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n        map.info.translateX = calculateFileHorizontalCenterOffset;\n        map.info.translateY = calculateFileVerticalCenterOffset;\n        map.status.translateY = calculateFileVerticalCenterOffset;\n        map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };\n    }\n\n    // should align center\n    if (isAsync && !allowProcess) {\n        [\n            'DID_START_ITEM_PROCESSING',\n            'DID_REQUEST_ITEM_PROCESSING',\n            'DID_UPDATE_ITEM_PROCESS_PROGRESS',\n            'DID_THROW_ITEM_PROCESSING_ERROR',\n        ].forEach(key => {\n            StyleMap[key].status.translateY = calculateFileVerticalCenterOffset;\n        });\n        StyleMap['DID_THROW_ITEM_PROCESSING_ERROR'].status.translateX = calculateButtonWidth;\n    }\n\n    // move remove button to right\n    if (alignRemoveItemButton && allowRevert) {\n        LocalButtons['RevertItemProcessing'].align = 'BUTTON_REMOVE_ITEM_POSITION';\n        const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n        map.info.translateX = calculateFileInfoOffset;\n        map.status.translateY = calculateFileVerticalCenterOffset;\n        map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };\n    }\n\n    // show/hide RemoveItem button\n    if (!allowRemove) {\n        LocalButtons['RemoveItem'].disabled = true;\n    }\n\n    // create the button views\n    forin(LocalButtons, (key, definition) => {\n        // create button\n        const buttonView = root.createChildView(fileActionButton, {\n            label: root.query(definition.label),\n            icon: root.query(definition.icon),\n            opacity: 0,\n        });\n\n        // should be appended?\n        if (enabledButtons.includes(key)) {\n            root.appendChildView(buttonView);\n        }\n\n        // toggle\n        if (definition.disabled) {\n            buttonView.element.setAttribute('disabled', 'disabled');\n            buttonView.element.setAttribute('hidden', 'hidden');\n        }\n\n        // add position attribute\n        buttonView.element.dataset.align = root.query(`GET_STYLE_${definition.align}`);\n\n        // add class\n        buttonView.element.classList.add(definition.className);\n\n        // handle interactions\n        buttonView.on('click', e => {\n            e.stopPropagation();\n            if (definition.disabled) return;\n            root.dispatch(definition.action, { query: id });\n        });\n\n        // set reference\n        root.ref[`button${key}`] = buttonView;\n    });\n\n    // checkmark\n    root.ref.processingCompleteIndicator = root.appendChildView(\n        root.createChildView(processingCompleteIndicatorView)\n    );\n    root.ref.processingCompleteIndicator.element.dataset.align = root.query(\n        `GET_STYLE_BUTTON_PROCESS_ITEM_POSITION`\n    );\n\n    // create file info view\n    root.ref.info = root.appendChildView(root.createChildView(fileInfo, { id }));\n\n    // create file status view\n    root.ref.status = root.appendChildView(root.createChildView(fileStatus, { id }));\n\n    // add progress indicators\n    const loadIndicatorView = root.appendChildView(\n        root.createChildView(progressIndicator, {\n            opacity: 0,\n            align: root.query(`GET_STYLE_LOAD_INDICATOR_POSITION`),\n        })\n    );\n    loadIndicatorView.element.classList.add('filepond--load-indicator');\n    root.ref.loadProgressIndicator = loadIndicatorView;\n\n    const progressIndicatorView = root.appendChildView(\n        root.createChildView(progressIndicator, {\n            opacity: 0,\n            align: root.query(`GET_STYLE_PROGRESS_INDICATOR_POSITION`),\n        })\n    );\n    progressIndicatorView.element.classList.add('filepond--process-indicator');\n    root.ref.processProgressIndicator = progressIndicatorView;\n\n    // current active styles\n    root.ref.activeStyles = [];\n};\n\nconst write$2 = ({ root, actions, props }) => {\n    // route actions\n    route({ root, actions, props });\n\n    // select last state change action\n    let action = actions\n        .concat()\n        .filter(action => /^DID_/.test(action.type))\n        .reverse()\n        .find(action => StyleMap[action.type]);\n\n    // a new action happened, let's get the matching styles\n    if (action) {\n        // define new active styles\n        root.ref.activeStyles = [];\n\n        const stylesToApply = StyleMap[action.type];\n        forin(DefaultStyle, (name, defaultStyles) => {\n            // get reference to control\n            const control = root.ref[name];\n\n            // loop over all styles for this control\n            forin(defaultStyles, (key, defaultValue) => {\n                const value =\n                    stylesToApply[name] && typeof stylesToApply[name][key] !== 'undefined'\n                        ? stylesToApply[name][key]\n                        : defaultValue;\n                root.ref.activeStyles.push({ control, key, value });\n            });\n        });\n    }\n\n    // apply active styles to element\n    root.ref.activeStyles.forEach(({ control, key, value }) => {\n        control[key] = typeof value === 'function' ? value(root) : value;\n    });\n};\n\nconst route = createRoute({\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING: ({ root, action }) => {\n        root.ref.buttonAbortItemProcessing.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD: ({ root, action }) => {\n        root.ref.buttonAbortItemLoad.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL: ({ root, action }) => {\n        root.ref.buttonAbortItemRemoval.label = action.value;\n    },\n    DID_REQUEST_ITEM_PROCESSING: ({ root }) => {\n        root.ref.processProgressIndicator.spin = true;\n        root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_LOAD: ({ root }) => {\n        root.ref.loadProgressIndicator.spin = true;\n        root.ref.loadProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_REMOVE: ({ root }) => {\n        root.ref.processProgressIndicator.spin = true;\n        root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_UPDATE_ITEM_LOAD_PROGRESS: ({ root, action }) => {\n        root.ref.loadProgressIndicator.spin = false;\n        root.ref.loadProgressIndicator.progress = action.progress;\n    },\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ({ root, action }) => {\n        root.ref.processProgressIndicator.spin = false;\n        root.ref.processProgressIndicator.progress = action.progress;\n    },\n});\n\nconst file = createView({\n    create: create$4,\n    write: write$2,\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    name: 'file',\n});\n\n/**\n * Creates the file view\n */\nconst create$5 = ({ root, props }) => {\n    // filename\n    root.ref.fileName = createElement$1('legend');\n    root.appendChild(root.ref.fileName);\n\n    // file appended\n    root.ref.file = root.appendChildView(root.createChildView(file, { id: props.id }));\n\n    // data has moved to data.js\n    root.ref.data = false;\n};\n\n/**\n * Data storage\n */\nconst didLoadItem = ({ root, props }) => {\n    // updates the legend of the fieldset so screenreaders can better group buttons\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst fileWrapper = createView({\n    create: create$5,\n    ignoreRect: true,\n    write: createRoute({\n        DID_LOAD_ITEM: didLoadItem,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    tag: 'fieldset',\n    name: 'file-wrapper',\n});\n\nconst PANEL_SPRING_PROPS = { type: 'spring', damping: 0.6, mass: 7 };\n\nconst create$6 = ({ root, props }) => {\n    [\n        {\n            name: 'top',\n        },\n        {\n            name: 'center',\n            props: {\n                translateY: null,\n                scaleY: null,\n            },\n            mixins: {\n                animations: {\n                    scaleY: PANEL_SPRING_PROPS,\n                },\n                styles: ['translateY', 'scaleY'],\n            },\n        },\n        {\n            name: 'bottom',\n            props: {\n                translateY: null,\n            },\n            mixins: {\n                animations: {\n                    translateY: PANEL_SPRING_PROPS,\n                },\n                styles: ['translateY'],\n            },\n        },\n    ].forEach(section => {\n        createSection(root, section, props.name);\n    });\n\n    root.element.classList.add(`filepond--${props.name}`);\n\n    root.ref.scalable = null;\n};\n\nconst createSection = (root, section, className) => {\n    const viewConstructor = createView({\n        name: `panel-${section.name} filepond--${className}`,\n        mixins: section.mixins,\n        ignoreRectUpdate: true,\n    });\n\n    const view = root.createChildView(viewConstructor, section.props);\n\n    root.ref[section.name] = root.appendChildView(view);\n};\n\nconst write$3 = ({ root, props }) => {\n    // update scalable state\n    if (root.ref.scalable === null || props.scalable !== root.ref.scalable) {\n        root.ref.scalable = isBoolean(props.scalable) ? props.scalable : true;\n        root.element.dataset.scalable = root.ref.scalable;\n    }\n\n    // no height, can't set\n    if (!props.height) return;\n\n    // get child rects\n    const topRect = root.ref.top.rect.element;\n    const bottomRect = root.ref.bottom.rect.element;\n\n    // make sure height never is smaller than bottom and top seciton heights combined (will probably never happen, but who knows)\n    const height = Math.max(topRect.height + bottomRect.height, props.height);\n\n    // offset center part\n    root.ref.center.translateY = topRect.height;\n\n    // scale center part\n    // use math ceil to prevent transparent lines because of rounding errors\n    root.ref.center.scaleY = (height - topRect.height - bottomRect.height) / 100;\n\n    // offset bottom part\n    root.ref.bottom.translateY = height - bottomRect.height;\n};\n\nconst panel = createView({\n    name: 'panel',\n    read: ({ root, props }) => (props.heightCurrent = root.ref.bottom.translateY),\n    write: write$3,\n    create: create$6,\n    ignoreRect: true,\n    mixins: {\n        apis: ['height', 'heightCurrent', 'scalable'],\n    },\n});\n\nconst createDragHelper = items => {\n    const itemIds = items.map(item => item.id);\n    let prevIndex = undefined;\n    return {\n        setIndex: index => {\n            prevIndex = index;\n        },\n        getIndex: () => prevIndex,\n        getItemIndex: item => itemIds.indexOf(item.id),\n    };\n};\n\nconst ITEM_TRANSLATE_SPRING = {\n    type: 'spring',\n    stiffness: 0.75,\n    damping: 0.45,\n    mass: 10,\n};\n\nconst ITEM_SCALE_SPRING = 'spring';\n\nconst StateMap = {\n    DID_START_ITEM_LOAD: 'busy',\n    DID_UPDATE_ITEM_LOAD_PROGRESS: 'loading',\n    DID_THROW_ITEM_INVALID: 'load-invalid',\n    DID_THROW_ITEM_LOAD_ERROR: 'load-error',\n    DID_LOAD_ITEM: 'idle',\n    DID_THROW_ITEM_REMOVE_ERROR: 'remove-error',\n    DID_START_ITEM_REMOVE: 'busy',\n    DID_START_ITEM_PROCESSING: 'busy processing',\n    DID_REQUEST_ITEM_PROCESSING: 'busy processing',\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: 'processing',\n    DID_COMPLETE_ITEM_PROCESSING: 'processing-complete',\n    DID_THROW_ITEM_PROCESSING_ERROR: 'processing-error',\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: 'processing-revert-error',\n    DID_ABORT_ITEM_PROCESSING: 'cancelled',\n    DID_REVERT_ITEM_PROCESSING: 'idle',\n};\n\n/**\n * Creates the file view\n */\nconst create$7 = ({ root, props }) => {\n    // select\n    root.ref.handleClick = e => root.dispatch('DID_ACTIVATE_ITEM', { id: props.id });\n\n    // set id\n    root.element.id = `filepond--item-${props.id}`;\n    root.element.addEventListener('click', root.ref.handleClick);\n\n    // file view\n    root.ref.container = root.appendChildView(root.createChildView(fileWrapper, { id: props.id }));\n\n    // file panel\n    root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'item-panel' }));\n\n    // default start height\n    root.ref.panel.height = null;\n\n    // by default not marked for removal\n    props.markedForRemoval = false;\n\n    // if not allowed to reorder file items, exit here\n    if (!root.query('GET_ALLOW_REORDER')) return;\n\n    // set to idle so shows grab cursor\n    root.element.dataset.dragState = 'idle';\n\n    const grab = e => {\n        if (!e.isPrimary) return;\n\n        let removedActivateListener = false;\n\n        const origin = {\n            x: e.pageX,\n            y: e.pageY,\n        };\n\n        props.dragOrigin = {\n            x: root.translateX,\n            y: root.translateY,\n        };\n\n        props.dragCenter = {\n            x: e.offsetX,\n            y: e.offsetY,\n        };\n\n        const dragState = createDragHelper(root.query('GET_ACTIVE_ITEMS'));\n\n        root.dispatch('DID_GRAB_ITEM', { id: props.id, dragState });\n\n        const drag = e => {\n            if (!e.isPrimary) return;\n\n            e.stopPropagation();\n            e.preventDefault();\n\n            props.dragOffset = {\n                x: e.pageX - origin.x,\n                y: e.pageY - origin.y,\n            };\n\n            // if dragged stop listening to clicks, will re-add when done dragging\n            const dist =\n                props.dragOffset.x * props.dragOffset.x + props.dragOffset.y * props.dragOffset.y;\n            if (dist > 16 && !removedActivateListener) {\n                removedActivateListener = true;\n                root.element.removeEventListener('click', root.ref.handleClick);\n            }\n\n            root.dispatch('DID_DRAG_ITEM', { id: props.id, dragState });\n        };\n\n        const drop = e => {\n            if (!e.isPrimary) return;\n\n            props.dragOffset = {\n                x: e.pageX - origin.x,\n                y: e.pageY - origin.y,\n            };\n\n            reset();\n        };\n\n        const cancel = () => {\n            reset();\n        };\n\n        const reset = () => {\n            document.removeEventListener('pointercancel', cancel);\n            document.removeEventListener('pointermove', drag);\n            document.removeEventListener('pointerup', drop);\n\n            root.dispatch('DID_DROP_ITEM', { id: props.id, dragState });\n\n            // start listening to clicks again\n            if (removedActivateListener) {\n                setTimeout(() => root.element.addEventListener('click', root.ref.handleClick), 0);\n            }\n        };\n\n        document.addEventListener('pointercancel', cancel);\n        document.addEventListener('pointermove', drag);\n        document.addEventListener('pointerup', drop);\n    };\n\n    root.element.addEventListener('pointerdown', grab);\n};\n\nconst route$1 = createRoute({\n    DID_UPDATE_PANEL_HEIGHT: ({ root, action }) => {\n        root.height = action.height;\n    },\n});\n\nconst write$4 = createRoute(\n    {\n        DID_GRAB_ITEM: ({ root, props }) => {\n            props.dragOrigin = {\n                x: root.translateX,\n                y: root.translateY,\n            };\n        },\n        DID_DRAG_ITEM: ({ root }) => {\n            root.element.dataset.dragState = 'drag';\n        },\n        DID_DROP_ITEM: ({ root, props }) => {\n            props.dragOffset = null;\n            props.dragOrigin = null;\n            root.element.dataset.dragState = 'drop';\n        },\n    },\n    ({ root, actions, props, shouldOptimize }) => {\n        if (root.element.dataset.dragState === 'drop') {\n            if (root.scaleX <= 1) {\n                root.element.dataset.dragState = 'idle';\n            }\n        }\n\n        // select last state change action\n        let action = actions\n            .concat()\n            .filter(action => /^DID_/.test(action.type))\n            .reverse()\n            .find(action => StateMap[action.type]);\n\n        // no need to set same state twice\n        if (action && action.type !== props.currentState) {\n            // set current state\n            props.currentState = action.type;\n\n            // set state\n            root.element.dataset.filepondItemState = StateMap[props.currentState] || '';\n        }\n\n        // route actions\n        const aspectRatio =\n            root.query('GET_ITEM_PANEL_ASPECT_RATIO') || root.query('GET_PANEL_ASPECT_RATIO');\n        if (!aspectRatio) {\n            route$1({ root, actions, props });\n            if (!root.height && root.ref.container.rect.element.height > 0) {\n                root.height = root.ref.container.rect.element.height;\n            }\n        } else if (!shouldOptimize) {\n            root.height = root.rect.element.width * aspectRatio;\n        }\n\n        // sync panel height with item height\n        if (shouldOptimize) {\n            root.ref.panel.height = null;\n        }\n\n        root.ref.panel.height = root.height;\n    }\n);\n\nconst item = createView({\n    create: create$7,\n    write: write$4,\n    destroy: ({ root, props }) => {\n        root.element.removeEventListener('click', root.ref.handleClick);\n        root.dispatch('RELEASE_ITEM', { query: props.id });\n    },\n    tag: 'li',\n    name: 'item',\n    mixins: {\n        apis: [\n            'id',\n            'interactionMethod',\n            'markedForRemoval',\n            'spawnDate',\n            'dragCenter',\n            'dragOrigin',\n            'dragOffset',\n        ],\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity', 'height'],\n        animations: {\n            scaleX: ITEM_SCALE_SPRING,\n            scaleY: ITEM_SCALE_SPRING,\n            translateX: ITEM_TRANSLATE_SPRING,\n            translateY: ITEM_TRANSLATE_SPRING,\n            opacity: { type: 'tween', duration: 150 },\n        },\n    },\n});\n\nvar getItemsPerRow = (horizontalSpace, itemWidth) => {\n    // add one pixel leeway, when using percentages for item width total items can be 1.99 per row\n\n    return Math.max(1, Math.floor((horizontalSpace + 1) / itemWidth));\n};\n\nconst getItemIndexByPosition = (view, children, positionInView) => {\n    if (!positionInView) return;\n\n    const horizontalSpace = view.rect.element.width;\n    // const children = view.childViews;\n    const l = children.length;\n    let last = null;\n\n    // -1, don't move items to accomodate (either add to top or bottom)\n    if (l === 0 || positionInView.top < children[0].rect.element.top) return -1;\n\n    // let's get the item width\n    const item = children[0];\n    const itemRect = item.rect.element;\n    const itemHorizontalMargin = itemRect.marginLeft + itemRect.marginRight;\n    const itemWidth = itemRect.width + itemHorizontalMargin;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        for (let index = 0; index < l; index++) {\n            const child = children[index];\n            const childMid = child.rect.outer.top + child.rect.element.height * 0.5;\n            if (positionInView.top < childMid) {\n                return index;\n            }\n        }\n        return l;\n    }\n\n    // grid\n    const itemVerticalMargin = itemRect.marginTop + itemRect.marginBottom;\n    const itemHeight = itemRect.height + itemVerticalMargin;\n    for (let index = 0; index < l; index++) {\n        const indexX = index % itemsPerRow;\n        const indexY = Math.floor(index / itemsPerRow);\n\n        const offsetX = indexX * itemWidth;\n        const offsetY = indexY * itemHeight;\n\n        const itemTop = offsetY - itemRect.marginTop;\n        const itemRight = offsetX + itemWidth;\n        const itemBottom = offsetY + itemHeight + itemRect.marginBottom;\n\n        if (positionInView.top < itemBottom && positionInView.top > itemTop) {\n            if (positionInView.left < itemRight) {\n                return index;\n            } else if (index !== l - 1) {\n                last = index;\n            } else {\n                last = null;\n            }\n        }\n    }\n\n    if (last !== null) {\n        return last;\n    }\n\n    return l;\n};\n\nconst dropAreaDimensions = {\n    height: 0,\n    width: 0,\n    get getHeight() {\n        return this.height;\n    },\n    set setHeight(val) {\n        if (this.height === 0 || val === 0) this.height = val;\n    },\n    get getWidth() {\n        return this.width;\n    },\n    set setWidth(val) {\n        if (this.width === 0 || val === 0) this.width = val;\n    },\n    setDimensions: function(height, width) {\n        if (this.height === 0 || height === 0) this.height = height;\n        if (this.width === 0 || width === 0) this.width = width;\n    },\n};\n\nconst create$8 = ({ root }) => {\n    // need to set role to list as otherwise it won't be read as a list by VoiceOver\n    attr(root.element, 'role', 'list');\n\n    root.ref.lastItemSpanwDate = Date.now();\n};\n\n/**\n * Inserts a new item\n * @param root\n * @param action\n */\nconst addItemView = ({ root, action }) => {\n    const { id, index, interactionMethod } = action;\n\n    root.ref.addIndex = index;\n\n    const now = Date.now();\n    let spawnDate = now;\n    let opacity = 1;\n\n    if (interactionMethod !== InteractionMethod.NONE) {\n        opacity = 0;\n        const cooldown = root.query('GET_ITEM_INSERT_INTERVAL');\n        const dist = now - root.ref.lastItemSpanwDate;\n        spawnDate = dist < cooldown ? now + (cooldown - dist) : now;\n    }\n\n    root.ref.lastItemSpanwDate = spawnDate;\n\n    root.appendChildView(\n        root.createChildView(\n            // view type\n            item,\n\n            // props\n            {\n                spawnDate,\n                id,\n                opacity,\n                interactionMethod,\n            }\n        ),\n        index\n    );\n};\n\nconst moveItem = (item, x, y, vx = 0, vy = 1) => {\n    // set to null to remove animation while dragging\n    if (item.dragOffset) {\n        item.translateX = null;\n        item.translateY = null;\n        item.translateX = item.dragOrigin.x + item.dragOffset.x;\n        item.translateY = item.dragOrigin.y + item.dragOffset.y;\n        item.scaleX = 1.025;\n        item.scaleY = 1.025;\n    } else {\n        item.translateX = x;\n        item.translateY = y;\n\n        if (Date.now() > item.spawnDate) {\n            // reveal element\n            if (item.opacity === 0) {\n                introItemView(item, x, y, vx, vy);\n            }\n\n            // make sure is default scale every frame\n            item.scaleX = 1;\n            item.scaleY = 1;\n            item.opacity = 1;\n        }\n    }\n};\n\nconst introItemView = (item, x, y, vx, vy) => {\n    if (item.interactionMethod === InteractionMethod.NONE) {\n        item.translateX = null;\n        item.translateX = x;\n        item.translateY = null;\n        item.translateY = y;\n    } else if (item.interactionMethod === InteractionMethod.DROP) {\n        item.translateX = null;\n        item.translateX = x - vx * 20;\n\n        item.translateY = null;\n        item.translateY = y - vy * 10;\n\n        item.scaleX = 0.8;\n        item.scaleY = 0.8;\n    } else if (item.interactionMethod === InteractionMethod.BROWSE) {\n        item.translateY = null;\n        item.translateY = y - 30;\n    } else if (item.interactionMethod === InteractionMethod.API) {\n        item.translateX = null;\n        item.translateX = x - 30;\n        item.translateY = null;\n    }\n};\n\n/**\n * Removes an existing item\n * @param root\n * @param action\n */\nconst removeItemView = ({ root, action }) => {\n    const { id } = action;\n\n    // get the view matching the given id\n    const view = root.childViews.find(child => child.id === id);\n\n    // if no view found, exit\n    if (!view) {\n        return;\n    }\n\n    // animate view out of view\n    view.scaleX = 0.9;\n    view.scaleY = 0.9;\n    view.opacity = 0;\n\n    // mark for removal\n    view.markedForRemoval = true;\n};\n\nconst getItemHeight = child =>\n    child.rect.element.height +\n    child.rect.element.marginBottom * 0.5 +\n    child.rect.element.marginTop * 0.5;\nconst getItemWidth = child =>\n    child.rect.element.width +\n    child.rect.element.marginLeft * 0.5 +\n    child.rect.element.marginRight * 0.5;\n\nconst dragItem = ({ root, action }) => {\n    const { id, dragState } = action;\n\n    // reference to item\n    const item = root.query('GET_ITEM', { id });\n\n    // get the view matching the given id\n    const view = root.childViews.find(child => child.id === id);\n\n    const numItems = root.childViews.length;\n    const oldIndex = dragState.getItemIndex(item);\n\n    // if no view found, exit\n    if (!view) return;\n\n    const dragPosition = {\n        x: view.dragOrigin.x + view.dragOffset.x + view.dragCenter.x,\n        y: view.dragOrigin.y + view.dragOffset.y + view.dragCenter.y,\n    };\n\n    // get drag area dimensions\n    const dragHeight = getItemHeight(view);\n    const dragWidth = getItemWidth(view);\n\n    // get rows and columns (There will always be at least one row and one column if a file is present)\n    let cols = Math.floor(root.rect.outer.width / dragWidth);\n    if (cols > numItems) cols = numItems;\n\n    // rows are used to find when we have left the preview area bounding box\n    const rows = Math.floor(numItems / cols + 1);\n\n    dropAreaDimensions.setHeight = dragHeight * rows;\n    dropAreaDimensions.setWidth = dragWidth * cols;\n\n    // get new index of dragged item\n    var location = {\n        y: Math.floor(dragPosition.y / dragHeight),\n        x: Math.floor(dragPosition.x / dragWidth),\n        getGridIndex: function getGridIndex() {\n            if (\n                dragPosition.y > dropAreaDimensions.getHeight ||\n                dragPosition.y < 0 ||\n                dragPosition.x > dropAreaDimensions.getWidth ||\n                dragPosition.x < 0\n            )\n                return oldIndex;\n            return this.y * cols + this.x;\n        },\n        getColIndex: function getColIndex() {\n            const items = root.query('GET_ACTIVE_ITEMS');\n            const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n            const children = items.map(item =>\n                visibleChildren.find(childView => childView.id === item.id)\n            );\n            const currentIndex = children.findIndex(child => child === view);\n            const dragHeight = getItemHeight(view);\n            const l = children.length;\n            let idx = l;\n            let childHeight = 0;\n            let childBottom = 0;\n            let childTop = 0;\n            for (let i = 0; i < l; i++) {\n                childHeight = getItemHeight(children[i]);\n                childTop = childBottom;\n                childBottom = childTop + childHeight;\n                if (dragPosition.y < childBottom) {\n                    if (currentIndex > i) {\n                        if (dragPosition.y < childTop + dragHeight) {\n                            idx = i;\n                            break;\n                        }\n                        continue;\n                    }\n                    idx = i;\n                    break;\n                }\n            }\n            return idx;\n        },\n    };\n\n    // get new index\n    const index = cols > 1 ? location.getGridIndex() : location.getColIndex();\n    root.dispatch('MOVE_ITEM', { query: view, index });\n\n    // if the index of the item changed, dispatch reorder action\n    const currentIndex = dragState.getIndex();\n\n    if (currentIndex === undefined || currentIndex !== index) {\n        dragState.setIndex(index);\n\n        if (currentIndex === undefined) return;\n\n        root.dispatch('DID_REORDER_ITEMS', {\n            items: root.query('GET_ACTIVE_ITEMS'),\n            origin: oldIndex,\n            target: index,\n        });\n    }\n};\n\n/**\n * Setup action routes\n */\nconst route$2 = createRoute({\n    DID_ADD_ITEM: addItemView,\n    DID_REMOVE_ITEM: removeItemView,\n    DID_DRAG_ITEM: dragItem,\n});\n\n/**\n * Write to view\n * @param root\n * @param actions\n * @param props\n */\nconst write$5 = ({ root, props, actions, shouldOptimize }) => {\n    // route actions\n    route$2({ root, props, actions });\n\n    const { dragCoordinates } = props;\n\n    // available space on horizontal axis\n    const horizontalSpace = root.rect.element.width;\n\n    // only draw children that have dimensions\n    const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n\n    // sort based on current active items\n    const children = root\n        .query('GET_ACTIVE_ITEMS')\n        .map(item => visibleChildren.find(child => child.id === item.id))\n        .filter(item => item);\n\n    // get index\n    const dragIndex = dragCoordinates\n        ? getItemIndexByPosition(root, children, dragCoordinates)\n        : null;\n\n    // add index is used to reserve the dropped/added item index till the actual item is rendered\n    const addIndex = root.ref.addIndex || null;\n\n    // add index no longer needed till possibly next draw\n    root.ref.addIndex = null;\n\n    let dragIndexOffset = 0;\n    let removeIndexOffset = 0;\n    let addIndexOffset = 0;\n\n    if (children.length === 0) return;\n\n    const childRect = children[0].rect.element;\n    const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n    const itemWidth = childRect.width + itemHorizontalMargin;\n    const itemHeight = childRect.height + itemVerticalMargin;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        let offsetY = 0;\n        let dragOffset = 0;\n\n        children.forEach((child, index) => {\n            if (dragIndex) {\n                let dist = index - dragIndex;\n                if (dist === -2) {\n                    dragOffset = -itemVerticalMargin * 0.25;\n                } else if (dist === -1) {\n                    dragOffset = -itemVerticalMargin * 0.75;\n                } else if (dist === 0) {\n                    dragOffset = itemVerticalMargin * 0.75;\n                } else if (dist === 1) {\n                    dragOffset = itemVerticalMargin * 0.25;\n                } else {\n                    dragOffset = 0;\n                }\n            }\n\n            if (shouldOptimize) {\n                child.translateX = null;\n                child.translateY = null;\n            }\n\n            if (!child.markedForRemoval) {\n                moveItem(child, 0, offsetY + dragOffset);\n            }\n\n            let itemHeight = child.rect.element.height + itemVerticalMargin;\n\n            let visualHeight = itemHeight * (child.markedForRemoval ? child.opacity : 1);\n\n            offsetY += visualHeight;\n        });\n    }\n    // grid\n    else {\n        let prevX = 0;\n        let prevY = 0;\n\n        children.forEach((child, index) => {\n            if (index === dragIndex) {\n                dragIndexOffset = 1;\n            }\n\n            if (index === addIndex) {\n                addIndexOffset += 1;\n            }\n\n            if (child.markedForRemoval && child.opacity < 0.5) {\n                removeIndexOffset -= 1;\n            }\n\n            const visualIndex = index + addIndexOffset + dragIndexOffset + removeIndexOffset;\n\n            const indexX = visualIndex % itemsPerRow;\n            const indexY = Math.floor(visualIndex / itemsPerRow);\n\n            const offsetX = indexX * itemWidth;\n            const offsetY = indexY * itemHeight;\n\n            const vectorX = Math.sign(offsetX - prevX);\n            const vectorY = Math.sign(offsetY - prevY);\n\n            prevX = offsetX;\n            prevY = offsetY;\n\n            if (child.markedForRemoval) return;\n\n            if (shouldOptimize) {\n                child.translateX = null;\n                child.translateY = null;\n            }\n\n            moveItem(child, offsetX, offsetY, vectorX, vectorY);\n        });\n    }\n};\n\n/**\n * Filters actions that are meant specifically for a certain child of the list\n * @param child\n * @param actions\n */\nconst filterSetItemActions = (child, actions) =>\n    actions.filter(action => {\n        // if action has an id, filter out actions that don't have this child id\n        if (action.data && action.data.id) {\n            return child.id === action.data.id;\n        }\n\n        // allow all other actions\n        return true;\n    });\n\nconst list = createView({\n    create: create$8,\n    write: write$5,\n    tag: 'ul',\n    name: 'list',\n    didWriteView: ({ root }) => {\n        root.childViews\n            .filter(view => view.markedForRemoval && view.opacity === 0 && view.resting)\n            .forEach(view => {\n                view._destroy();\n                root.removeChildView(view);\n            });\n    },\n    filterFrameActionsForChild: filterSetItemActions,\n    mixins: {\n        apis: ['dragCoordinates'],\n    },\n});\n\nconst create$9 = ({ root, props }) => {\n    root.ref.list = root.appendChildView(root.createChildView(list));\n    props.dragCoordinates = null;\n    props.overflowing = false;\n};\n\nconst storeDragCoordinates = ({ root, props, action }) => {\n    if (!root.query('GET_ITEM_INSERT_LOCATION_FREEDOM')) return;\n    props.dragCoordinates = {\n        left: action.position.scopeLeft - root.ref.list.rect.element.left,\n        top:\n            action.position.scopeTop -\n            (root.rect.outer.top + root.rect.element.marginTop + root.rect.element.scrollTop),\n    };\n};\n\nconst clearDragCoordinates = ({ props }) => {\n    props.dragCoordinates = null;\n};\n\nconst route$3 = createRoute({\n    DID_DRAG: storeDragCoordinates,\n    DID_END_DRAG: clearDragCoordinates,\n});\n\nconst write$6 = ({ root, props, actions }) => {\n    // route actions\n    route$3({ root, props, actions });\n\n    // current drag position\n    root.ref.list.dragCoordinates = props.dragCoordinates;\n\n    // if currently overflowing but no longer received overflow\n    if (props.overflowing && !props.overflow) {\n        props.overflowing = false;\n\n        // reset overflow state\n        root.element.dataset.state = '';\n        root.height = null;\n    }\n\n    // if is not overflowing currently but does receive overflow value\n    if (props.overflow) {\n        const newHeight = Math.round(props.overflow);\n        if (newHeight !== root.height) {\n            props.overflowing = true;\n            root.element.dataset.state = 'overflow';\n            root.height = newHeight;\n        }\n    }\n};\n\nconst listScroller = createView({\n    create: create$9,\n    write: write$6,\n    name: 'list-scroller',\n    mixins: {\n        apis: ['overflow', 'dragCoordinates'],\n        styles: ['height', 'translateY'],\n        animations: {\n            translateY: 'spring',\n        },\n    },\n});\n\nconst attrToggle = (element, name, state, enabledValue = '') => {\n    if (state) {\n        attr(element, name, enabledValue);\n    } else {\n        element.removeAttribute(name);\n    }\n};\n\nconst resetFileInput = input => {\n    // no value, no need to reset\n    if (!input || input.value === '') {\n        return;\n    }\n\n    try {\n        // for modern browsers\n        input.value = '';\n    } catch (err) {}\n\n    // for IE10\n    if (input.value) {\n        // quickly append input to temp form and reset form\n        const form = createElement$1('form');\n        const parentNode = input.parentNode;\n        const ref = input.nextSibling;\n        form.appendChild(input);\n        form.reset();\n\n        // re-inject input where it originally was\n        if (ref) {\n            parentNode.insertBefore(input, ref);\n        } else {\n            parentNode.appendChild(input);\n        }\n    }\n};\n\nconst create$a = ({ root, props }) => {\n    // set id so can be referenced from outside labels\n    root.element.id = `filepond--browser-${props.id}`;\n\n    // set name of element (is removed when a value is set)\n    attr(root.element, 'name', root.query('GET_NAME'));\n\n    // we have to link this element to the status element\n    attr(root.element, 'aria-controls', `filepond--assistant-${props.id}`);\n\n    // set label, we use labelled by as otherwise the screenreader does not read the \"browse\" text in the label (as it has tabindex: 0)\n    attr(root.element, 'aria-labelledby', `filepond--drop-label-${props.id}`);\n\n    // set configurable props\n    setAcceptedFileTypes({ root, action: { value: root.query('GET_ACCEPTED_FILE_TYPES') } });\n    toggleAllowMultiple({ root, action: { value: root.query('GET_ALLOW_MULTIPLE') } });\n    toggleDirectoryFilter({ root, action: { value: root.query('GET_ALLOW_DIRECTORIES_ONLY') } });\n    toggleDisabled({ root });\n    toggleRequired({ root, action: { value: root.query('GET_REQUIRED') } });\n    setCaptureMethod({ root, action: { value: root.query('GET_CAPTURE_METHOD') } });\n\n    // handle changes to the input field\n    root.ref.handleChange = e => {\n        if (!root.element.value) {\n            return;\n        }\n\n        // extract files and move value of webkitRelativePath path to _relativePath\n        const files = Array.from(root.element.files).map(file => {\n            file._relativePath = file.webkitRelativePath;\n            return file;\n        });\n\n        // we add a little delay so the OS file select window can move out of the way before we add our file\n        setTimeout(() => {\n            // load files\n            props.onload(files);\n\n            // reset input, it's just for exposing a method to drop files, should not retain any state\n            resetFileInput(root.element);\n        }, 250);\n    };\n\n    root.element.addEventListener('change', root.ref.handleChange);\n};\n\nconst setAcceptedFileTypes = ({ root, action }) => {\n    if (!root.query('GET_ALLOW_SYNC_ACCEPT_ATTRIBUTE')) return;\n    attrToggle(root.element, 'accept', !!action.value, action.value ? action.value.join(',') : '');\n};\n\nconst toggleAllowMultiple = ({ root, action }) => {\n    attrToggle(root.element, 'multiple', action.value);\n};\n\nconst toggleDirectoryFilter = ({ root, action }) => {\n    attrToggle(root.element, 'webkitdirectory', action.value);\n};\n\nconst toggleDisabled = ({ root }) => {\n    const isDisabled = root.query('GET_DISABLED');\n    const doesAllowBrowse = root.query('GET_ALLOW_BROWSE');\n    const disableField = isDisabled || !doesAllowBrowse;\n    attrToggle(root.element, 'disabled', disableField);\n};\n\nconst toggleRequired = ({ root, action }) => {\n    // want to remove required, always possible\n    if (!action.value) {\n        attrToggle(root.element, 'required', false);\n    }\n    // if want to make required, only possible when zero items\n    else if (root.query('GET_TOTAL_ITEMS') === 0) {\n        attrToggle(root.element, 'required', true);\n    }\n};\n\nconst setCaptureMethod = ({ root, action }) => {\n    attrToggle(root.element, 'capture', !!action.value, action.value === true ? '' : action.value);\n};\n\nconst updateRequiredStatus = ({ root }) => {\n    const { element } = root;\n    // always remove the required attribute when more than zero items\n    if (root.query('GET_TOTAL_ITEMS') > 0) {\n        attrToggle(element, 'required', false);\n        attrToggle(element, 'name', false);\n\n        // still has items\n        const activeItems = root.query('GET_ACTIVE_ITEMS');\n        let hasInvalidField = false;\n        for (let i = 0; i < activeItems.length; i++) {\n            if (activeItems[i].status === ItemStatus.LOAD_ERROR) {\n                hasInvalidField = true;\n            }\n        }\n        // set validity status\n        root.element.setCustomValidity(\n            hasInvalidField ? root.query('GET_LABEL_INVALID_FIELD') : ''\n        );\n    } else {\n        // add name attribute\n        attrToggle(element, 'name', true, root.query('GET_NAME'));\n\n        // remove any validation messages\n        const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n        if (shouldCheckValidity) {\n            element.setCustomValidity('');\n        }\n\n        // we only add required if the field has been deemed required\n        if (root.query('GET_REQUIRED')) {\n            attrToggle(element, 'required', true);\n        }\n    }\n};\n\nconst updateFieldValidityStatus = ({ root }) => {\n    const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n    if (!shouldCheckValidity) return;\n    root.element.setCustomValidity(root.query('GET_LABEL_INVALID_FIELD'));\n};\n\nconst browser = createView({\n    tag: 'input',\n    name: 'browser',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    attributes: {\n        type: 'file',\n    },\n    create: create$a,\n    destroy: ({ root }) => {\n        root.element.removeEventListener('change', root.ref.handleChange);\n    },\n    write: createRoute({\n        DID_LOAD_ITEM: updateRequiredStatus,\n        DID_REMOVE_ITEM: updateRequiredStatus,\n        DID_THROW_ITEM_INVALID: updateFieldValidityStatus,\n\n        DID_SET_DISABLED: toggleDisabled,\n        DID_SET_ALLOW_BROWSE: toggleDisabled,\n        DID_SET_ALLOW_DIRECTORIES_ONLY: toggleDirectoryFilter,\n        DID_SET_ALLOW_MULTIPLE: toggleAllowMultiple,\n        DID_SET_ACCEPTED_FILE_TYPES: setAcceptedFileTypes,\n        DID_SET_CAPTURE_METHOD: setCaptureMethod,\n        DID_SET_REQUIRED: toggleRequired,\n    }),\n});\n\nconst Key = {\n    ENTER: 13,\n    SPACE: 32,\n};\n\nconst create$b = ({ root, props }) => {\n    // create the label and link it to the file browser\n    const label = createElement$1('label');\n    attr(label, 'for', `filepond--browser-${props.id}`);\n\n    // use for labeling file input (aria-labelledby on file input)\n    attr(label, 'id', `filepond--drop-label-${props.id}`);\n\n    // handle keys\n    root.ref.handleKeyDown = e => {\n        const isActivationKey = e.keyCode === Key.ENTER || e.keyCode === Key.SPACE;\n        if (!isActivationKey) return;\n        // stops from triggering the element a second time\n        e.preventDefault();\n\n        // click link (will then in turn activate file input)\n        root.ref.label.click();\n    };\n\n    root.ref.handleClick = e => {\n        const isLabelClick = e.target === label || label.contains(e.target);\n\n        // don't want to click twice\n        if (isLabelClick) return;\n\n        // click link (will then in turn activate file input)\n        root.ref.label.click();\n    };\n\n    // attach events\n    label.addEventListener('keydown', root.ref.handleKeyDown);\n    root.element.addEventListener('click', root.ref.handleClick);\n\n    // update\n    updateLabelValue(label, props.caption);\n\n    // add!\n    root.appendChild(label);\n    root.ref.label = label;\n};\n\nconst updateLabelValue = (label, value) => {\n    label.innerHTML = value;\n    const clickable = label.querySelector('.filepond--label-action');\n    if (clickable) {\n        attr(clickable, 'tabindex', '0');\n    }\n    return value;\n};\n\nconst dropLabel = createView({\n    name: 'drop-label',\n    ignoreRect: true,\n    create: create$b,\n    destroy: ({ root }) => {\n        root.ref.label.addEventListener('keydown', root.ref.handleKeyDown);\n        root.element.removeEventListener('click', root.ref.handleClick);\n    },\n    write: createRoute({\n        DID_SET_LABEL_IDLE: ({ root, action }) => {\n            updateLabelValue(root.ref.label, action.value);\n        },\n    }),\n    mixins: {\n        styles: ['opacity', 'translateX', 'translateY'],\n        animations: {\n            opacity: { type: 'tween', duration: 150 },\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\nconst blob = createView({\n    name: 'drip-blob',\n    ignoreRect: true,\n    mixins: {\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            translateX: 'spring',\n            translateY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n    },\n});\n\nconst addBlob = ({ root }) => {\n    const centerX = root.rect.element.width * 0.5;\n    const centerY = root.rect.element.height * 0.5;\n\n    root.ref.blob = root.appendChildView(\n        root.createChildView(blob, {\n            opacity: 0,\n            scaleX: 2.5,\n            scaleY: 2.5,\n            translateX: centerX,\n            translateY: centerY,\n        })\n    );\n};\n\nconst moveBlob = ({ root, action }) => {\n    if (!root.ref.blob) {\n        addBlob({ root });\n        return;\n    }\n\n    root.ref.blob.translateX = action.position.scopeLeft;\n    root.ref.blob.translateY = action.position.scopeTop;\n    root.ref.blob.scaleX = 1;\n    root.ref.blob.scaleY = 1;\n    root.ref.blob.opacity = 1;\n};\n\nconst hideBlob = ({ root }) => {\n    if (!root.ref.blob) {\n        return;\n    }\n    root.ref.blob.opacity = 0;\n};\n\nconst explodeBlob = ({ root }) => {\n    if (!root.ref.blob) {\n        return;\n    }\n    root.ref.blob.scaleX = 2.5;\n    root.ref.blob.scaleY = 2.5;\n    root.ref.blob.opacity = 0;\n};\n\nconst write$7 = ({ root, props, actions }) => {\n    route$4({ root, props, actions });\n\n    const { blob } = root.ref;\n\n    if (actions.length === 0 && blob && blob.opacity === 0) {\n        root.removeChildView(blob);\n        root.ref.blob = null;\n    }\n};\n\nconst route$4 = createRoute({\n    DID_DRAG: moveBlob,\n    DID_DROP: explodeBlob,\n    DID_END_DRAG: hideBlob,\n});\n\nconst drip = createView({\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'drip',\n    write: write$7,\n});\n\nconst setInputFiles = (element, files) => {\n    try {\n        // Create a DataTransfer instance and add a newly created file\n        const dataTransfer = new DataTransfer();\n        files.forEach(file => {\n            if (file instanceof File) {\n                dataTransfer.items.add(file);\n            } else {\n                dataTransfer.items.add(\n                    new File([file], file.name, {\n                        type: file.type,\n                    })\n                );\n            }\n        });\n\n        // Assign the DataTransfer files list to the file input\n        element.files = dataTransfer.files;\n    } catch (err) {\n        return false;\n    }\n    return true;\n};\n\nconst create$c = ({ root }) => {\n    root.ref.fields = {};\n    const legend = document.createElement('legend');\n    legend.textContent = 'Files';\n    root.element.appendChild(legend);\n};\n\nconst getField = (root, id) => root.ref.fields[id];\n\nconst syncFieldPositionsWithItems = root => {\n    root.query('GET_ACTIVE_ITEMS').forEach(item => {\n        if (!root.ref.fields[item.id]) return;\n        root.element.appendChild(root.ref.fields[item.id]);\n    });\n};\n\nconst didReorderItems = ({ root }) => syncFieldPositionsWithItems(root);\n\nconst didAddItem = ({ root, action }) => {\n    const fileItem = root.query('GET_ITEM', action.id);\n    const isLocalFile = fileItem.origin === FileOrigin.LOCAL;\n    const shouldUseFileInput = !isLocalFile && root.query('SHOULD_UPDATE_FILE_INPUT');\n    const dataContainer = createElement$1('input');\n    dataContainer.type = shouldUseFileInput ? 'file' : 'hidden';\n    dataContainer.name = root.query('GET_NAME');\n    root.ref.fields[action.id] = dataContainer;\n    syncFieldPositionsWithItems(root);\n};\n\nconst didLoadItem$1 = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n\n    // store server ref in hidden input\n    if (action.serverFileReference !== null) field.value = action.serverFileReference;\n\n    // store file item in file input\n    if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n\n    const fileItem = root.query('GET_ITEM', action.id);\n    setInputFiles(field, [fileItem.file]);\n};\n\nconst didPrepareOutput = ({ root, action }) => {\n    // this timeout pushes the handler after 'load'\n    if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n    setTimeout(() => {\n        const field = getField(root, action.id);\n        if (!field) return;\n        setInputFiles(field, [action.file]);\n    }, 0);\n};\n\nconst didSetDisabled = ({ root }) => {\n    root.element.disabled = root.query('GET_DISABLED');\n};\n\nconst didRemoveItem = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n    if (field.parentNode) field.parentNode.removeChild(field);\n    delete root.ref.fields[action.id];\n};\n\n// only runs for server files. will refuse to update the value if the field\n// is a file field\nconst didDefineValue = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n    if (action.value === null) {\n        // clear field value\n        field.removeAttribute('value');\n    } else {\n        // set field value\n        if (field.type != 'file') {\n            field.value = action.value;\n        }\n    }\n    syncFieldPositionsWithItems(root);\n};\n\nconst write$8 = createRoute({\n    DID_SET_DISABLED: didSetDisabled,\n    DID_ADD_ITEM: didAddItem,\n    DID_LOAD_ITEM: didLoadItem$1,\n    DID_REMOVE_ITEM: didRemoveItem,\n    DID_DEFINE_VALUE: didDefineValue,\n    DID_PREPARE_OUTPUT: didPrepareOutput,\n    DID_REORDER_ITEMS: didReorderItems,\n    DID_SORT_ITEMS: didReorderItems,\n});\n\nconst data = createView({\n    tag: 'fieldset',\n    name: 'data',\n    create: create$c,\n    write: write$8,\n    ignoreRect: true,\n});\n\nconst getRootNode = element => ('getRootNode' in element ? element.getRootNode() : document);\n\nconst images = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'tiff'];\nconst text$1 = ['css', 'csv', 'html', 'txt'];\nconst map = {\n    zip: 'zip|compressed',\n    epub: 'application/epub+zip',\n};\n\nconst guesstimateMimeType = (extension = '') => {\n    extension = extension.toLowerCase();\n    if (images.includes(extension)) {\n        return (\n            'image/' + (extension === 'jpg' ? 'jpeg' : extension === 'svg' ? 'svg+xml' : extension)\n        );\n    }\n    if (text$1.includes(extension)) {\n        return 'text/' + extension;\n    }\n\n    return map[extension] || '';\n};\n\nconst requestDataTransferItems = dataTransfer =>\n    new Promise((resolve, reject) => {\n        // try to get links from transfer, if found we'll exit immediately (unless a file is in the dataTransfer as well, this is because Firefox could represent the file as a URL and a file object at the same time)\n        const links = getLinks(dataTransfer);\n        if (links.length && !hasFiles(dataTransfer)) {\n            return resolve(links);\n        }\n        // try to get files from the transfer\n        getFiles(dataTransfer).then(resolve);\n    });\n\n/**\n * Test if datatransfer has files\n */\nconst hasFiles = dataTransfer => {\n    if (dataTransfer.files) return dataTransfer.files.length > 0;\n    return false;\n};\n\n/**\n * Extracts files from a DataTransfer object\n */\nconst getFiles = dataTransfer =>\n    new Promise((resolve, reject) => {\n        // get the transfer items as promises\n        const promisedFiles = (dataTransfer.items ? Array.from(dataTransfer.items) : [])\n\n            // only keep file system items (files and directories)\n            .filter(item => isFileSystemItem(item))\n\n            // map each item to promise\n            .map(item => getFilesFromItem(item));\n\n        // if is empty, see if we can extract some info from the files property as a fallback\n        if (!promisedFiles.length) {\n            // TODO: test for directories (should not be allowed)\n            // Use FileReader, problem is that the files property gets lost in the process\n            resolve(dataTransfer.files ? Array.from(dataTransfer.files) : []);\n            return;\n        }\n\n        // done!\n        Promise.all(promisedFiles)\n            .then(returnedFileGroups => {\n                // flatten groups\n                const files = [];\n                returnedFileGroups.forEach(group => {\n                    files.push.apply(files, group);\n                });\n\n                // done (filter out empty files)!\n                resolve(\n                    files\n                        .filter(file => file)\n                        .map(file => {\n                            if (!file._relativePath) file._relativePath = file.webkitRelativePath;\n                            return file;\n                        })\n                );\n            })\n            .catch(console.error);\n    });\n\nconst isFileSystemItem = item => {\n    if (isEntry(item)) {\n        const entry = getAsEntry(item);\n        if (entry) {\n            return entry.isFile || entry.isDirectory;\n        }\n    }\n    return item.kind === 'file';\n};\n\nconst getFilesFromItem = item =>\n    new Promise((resolve, reject) => {\n        if (isDirectoryEntry(item)) {\n            getFilesInDirectory(getAsEntry(item))\n                .then(resolve)\n                .catch(reject);\n            return;\n        }\n\n        resolve([item.getAsFile()]);\n    });\n\nconst getFilesInDirectory = entry =>\n    new Promise((resolve, reject) => {\n        const files = [];\n\n        // the total entries to read\n        let dirCounter = 0;\n        let fileCounter = 0;\n\n        const resolveIfDone = () => {\n            if (fileCounter === 0 && dirCounter === 0) {\n                resolve(files);\n            }\n        };\n\n        // the recursive function\n        const readEntries = dirEntry => {\n            dirCounter++;\n\n            const directoryReader = dirEntry.createReader();\n\n            // directories are returned in batches, we need to process all batches before we're done\n            const readBatch = () => {\n                directoryReader.readEntries(entries => {\n                    if (entries.length === 0) {\n                        dirCounter--;\n                        resolveIfDone();\n                        return;\n                    }\n\n                    entries.forEach(entry => {\n                        // recursively read more directories\n                        if (entry.isDirectory) {\n                            readEntries(entry);\n                        } else {\n                            // read as file\n                            fileCounter++;\n\n                            entry.file(file => {\n                                const correctedFile = correctMissingFileType(file);\n                                if (entry.fullPath) correctedFile._relativePath = entry.fullPath;\n                                files.push(correctedFile);\n                                fileCounter--;\n                                resolveIfDone();\n                            });\n                        }\n                    });\n\n                    // try to get next batch of files\n                    readBatch();\n                }, reject);\n            };\n\n            // read first batch of files\n            readBatch();\n        };\n\n        // go!\n        readEntries(entry);\n    });\n\nconst correctMissingFileType = file => {\n    if (file.type.length) return file;\n    const date = file.lastModifiedDate;\n    const name = file.name;\n    const type = guesstimateMimeType(getExtensionFromFilename(file.name));\n    if (!type.length) return file;\n    file = file.slice(0, file.size, type);\n    file.name = name;\n    file.lastModifiedDate = date;\n    return file;\n};\n\nconst isDirectoryEntry = item => isEntry(item) && (getAsEntry(item) || {}).isDirectory;\n\nconst isEntry = item => 'webkitGetAsEntry' in item;\n\nconst getAsEntry = item => item.webkitGetAsEntry();\n\n/**\n * Extracts links from a DataTransfer object\n */\nconst getLinks = dataTransfer => {\n    let links = [];\n    try {\n        // look in meta data property\n        links = getLinksFromTransferMetaData(dataTransfer);\n        if (links.length) {\n            return links;\n        }\n        links = getLinksFromTransferURLData(dataTransfer);\n    } catch (e) {\n        // nope nope nope (probably IE trouble)\n    }\n    return links;\n};\n\nconst getLinksFromTransferURLData = dataTransfer => {\n    let data = dataTransfer.getData('url');\n    if (typeof data === 'string' && data.length) {\n        return [data];\n    }\n    return [];\n};\n\nconst getLinksFromTransferMetaData = dataTransfer => {\n    let data = dataTransfer.getData('text/html');\n    if (typeof data === 'string' && data.length) {\n        const matches = data.match(/src\\s*=\\s*\"(.+?)\"/);\n        if (matches) {\n            return [matches[1]];\n        }\n    }\n    return [];\n};\n\nconst dragNDropObservers = [];\n\nconst eventPosition = e => ({\n    pageLeft: e.pageX,\n    pageTop: e.pageY,\n    scopeLeft: e.offsetX || e.layerX,\n    scopeTop: e.offsetY || e.layerY,\n});\n\nconst createDragNDropClient = (element, scopeToObserve, filterElement) => {\n    const observer = getDragNDropObserver(scopeToObserve);\n\n    const client = {\n        element,\n        filterElement,\n        state: null,\n        ondrop: () => {},\n        onenter: () => {},\n        ondrag: () => {},\n        onexit: () => {},\n        onload: () => {},\n        allowdrop: () => {},\n    };\n\n    client.destroy = observer.addListener(client);\n\n    return client;\n};\n\nconst getDragNDropObserver = element => {\n    // see if already exists, if so, return\n    const observer = dragNDropObservers.find(item => item.element === element);\n    if (observer) {\n        return observer;\n    }\n\n    // create new observer, does not yet exist for this element\n    const newObserver = createDragNDropObserver(element);\n    dragNDropObservers.push(newObserver);\n    return newObserver;\n};\n\nconst createDragNDropObserver = element => {\n    const clients = [];\n\n    const routes = {\n        dragenter,\n        dragover,\n        dragleave,\n        drop,\n    };\n\n    const handlers = {};\n\n    forin(routes, (event, createHandler) => {\n        handlers[event] = createHandler(element, clients);\n        element.addEventListener(event, handlers[event], false);\n    });\n\n    const observer = {\n        element,\n        addListener: client => {\n            // add as client\n            clients.push(client);\n\n            // return removeListener function\n            return () => {\n                // remove client\n                clients.splice(clients.indexOf(client), 1);\n\n                // if no more clients, clean up observer\n                if (clients.length === 0) {\n                    dragNDropObservers.splice(dragNDropObservers.indexOf(observer), 1);\n\n                    forin(routes, event => {\n                        element.removeEventListener(event, handlers[event], false);\n                    });\n                }\n            };\n        },\n    };\n\n    return observer;\n};\n\nconst elementFromPoint = (root, point) => {\n    if (!('elementFromPoint' in root)) {\n        root = document;\n    }\n    return root.elementFromPoint(point.x, point.y);\n};\n\nconst isEventTarget = (e, target) => {\n    // get root\n    const root = getRootNode(target);\n\n    // get element at position\n    // if root is not actual shadow DOM and does not have elementFromPoint method, use the one on document\n    const elementAtPosition = elementFromPoint(root, {\n        x: e.pageX - window.pageXOffset,\n        y: e.pageY - window.pageYOffset,\n    });\n\n    // test if target is the element or if one of its children is\n    return elementAtPosition === target || target.contains(elementAtPosition);\n};\n\nlet initialTarget = null;\n\nconst setDropEffect = (dataTransfer, effect) => {\n    // is in try catch as IE11 will throw error if not\n    try {\n        dataTransfer.dropEffect = effect;\n    } catch (e) {}\n};\n\nconst dragenter = (root, clients) => e => {\n    e.preventDefault();\n\n    initialTarget = e.target;\n\n    clients.forEach(client => {\n        const { element, onenter } = client;\n\n        if (isEventTarget(e, element)) {\n            client.state = 'enter';\n\n            // fire enter event\n            onenter(eventPosition(e));\n        }\n    });\n};\n\nconst dragover = (root, clients) => e => {\n    e.preventDefault();\n\n    const dataTransfer = e.dataTransfer;\n\n    requestDataTransferItems(dataTransfer).then(items => {\n        let overDropTarget = false;\n\n        clients.some(client => {\n            const { filterElement, element, onenter, onexit, ondrag, allowdrop } = client;\n\n            // by default we can drop\n            setDropEffect(dataTransfer, 'copy');\n\n            // allow transfer of these items\n            const allowsTransfer = allowdrop(items);\n\n            // only used when can be dropped on page\n            if (!allowsTransfer) {\n                setDropEffect(dataTransfer, 'none');\n                return;\n            }\n\n            // targetting this client\n            if (isEventTarget(e, element)) {\n                overDropTarget = true;\n\n                // had no previous state, means we are entering this client\n                if (client.state === null) {\n                    client.state = 'enter';\n                    onenter(eventPosition(e));\n                    return;\n                }\n\n                // now over element (no matter if it allows the drop or not)\n                client.state = 'over';\n\n                // needs to allow transfer\n                if (filterElement && !allowsTransfer) {\n                    setDropEffect(dataTransfer, 'none');\n                    return;\n                }\n\n                // dragging\n                ondrag(eventPosition(e));\n            } else {\n                // should be over an element to drop\n                if (filterElement && !overDropTarget) {\n                    setDropEffect(dataTransfer, 'none');\n                }\n\n                // might have just left this client?\n                if (client.state) {\n                    client.state = null;\n                    onexit(eventPosition(e));\n                }\n            }\n        });\n    });\n};\n\nconst drop = (root, clients) => e => {\n    e.preventDefault();\n\n    const dataTransfer = e.dataTransfer;\n\n    requestDataTransferItems(dataTransfer).then(items => {\n        clients.forEach(client => {\n            const { filterElement, element, ondrop, onexit, allowdrop } = client;\n\n            client.state = null;\n\n            // if we're filtering on element we need to be over the element to drop\n            if (filterElement && !isEventTarget(e, element)) return;\n\n            // no transfer for this client\n            if (!allowdrop(items)) return onexit(eventPosition(e));\n\n            // we can drop these items on this client\n            ondrop(eventPosition(e), items);\n        });\n    });\n};\n\nconst dragleave = (root, clients) => e => {\n    if (initialTarget !== e.target) {\n        return;\n    }\n\n    clients.forEach(client => {\n        const { onexit } = client;\n\n        client.state = null;\n\n        onexit(eventPosition(e));\n    });\n};\n\nconst createHopper = (scope, validateItems, options) => {\n    // is now hopper scope\n    scope.classList.add('filepond--hopper');\n\n    // shortcuts\n    const { catchesDropsOnPage, requiresDropOnElement, filterItems = items => items } = options;\n\n    // create a dnd client\n    const client = createDragNDropClient(\n        scope,\n        catchesDropsOnPage ? document.documentElement : scope,\n        requiresDropOnElement\n    );\n\n    // current client state\n    let lastState = '';\n    let currentState = '';\n\n    // determines if a file may be dropped\n    client.allowdrop = items => {\n        // TODO: if we can, throw error to indicate the items cannot by dropped\n\n        return validateItems(filterItems(items));\n    };\n\n    client.ondrop = (position, items) => {\n        const filteredItems = filterItems(items);\n\n        if (!validateItems(filteredItems)) {\n            api.ondragend(position);\n            return;\n        }\n\n        currentState = 'drag-drop';\n\n        api.onload(filteredItems, position);\n    };\n\n    client.ondrag = position => {\n        api.ondrag(position);\n    };\n\n    client.onenter = position => {\n        currentState = 'drag-over';\n\n        api.ondragstart(position);\n    };\n\n    client.onexit = position => {\n        currentState = 'drag-exit';\n\n        api.ondragend(position);\n    };\n\n    const api = {\n        updateHopperState: () => {\n            if (lastState !== currentState) {\n                scope.dataset.hopperState = currentState;\n                lastState = currentState;\n            }\n        },\n        onload: () => {},\n        ondragstart: () => {},\n        ondrag: () => {},\n        ondragend: () => {},\n        destroy: () => {\n            // destroy client\n            client.destroy();\n        },\n    };\n\n    return api;\n};\n\nlet listening = false;\nconst listeners$1 = [];\n\nconst handlePaste = e => {\n    // if is pasting in input or textarea and the target is outside of a filepond scope, ignore\n    const activeEl = document.activeElement;\n    const isActiveElementEditable =\n        activeEl &&\n        (/textarea|input/i.test(activeEl.nodeName) ||\n            activeEl.getAttribute('contenteditable') === 'true' ||\n            activeEl.getAttribute('contenteditable') === '');\n\n    if (isActiveElementEditable) {\n        // test textarea or input is contained in filepond root\n        let inScope = false;\n        let element = activeEl;\n        while (element !== document.body) {\n            if (element.classList.contains('filepond--root')) {\n                inScope = true;\n                break;\n            }\n            element = element.parentNode;\n        }\n\n        if (!inScope) return;\n    }\n\n    requestDataTransferItems(e.clipboardData).then(files => {\n        // no files received\n        if (!files.length) {\n            return;\n        }\n\n        // notify listeners of received files\n        listeners$1.forEach(listener => listener(files));\n    });\n};\n\nconst listen = cb => {\n    // can't add twice\n    if (listeners$1.includes(cb)) {\n        return;\n    }\n\n    // add initial listener\n    listeners$1.push(cb);\n\n    // setup paste listener for entire page\n    if (listening) {\n        return;\n    }\n\n    listening = true;\n    document.addEventListener('paste', handlePaste);\n};\n\nconst unlisten = listener => {\n    arrayRemove(listeners$1, listeners$1.indexOf(listener));\n\n    // clean up\n    if (listeners$1.length === 0) {\n        document.removeEventListener('paste', handlePaste);\n        listening = false;\n    }\n};\n\nconst createPaster = () => {\n    const cb = files => {\n        api.onload(files);\n    };\n\n    const api = {\n        destroy: () => {\n            unlisten(cb);\n        },\n        onload: () => {},\n    };\n\n    listen(cb);\n\n    return api;\n};\n\n/**\n * Creates the file view\n */\nconst create$d = ({ root, props }) => {\n    root.element.id = `filepond--assistant-${props.id}`;\n    attr(root.element, 'role', 'alert');\n    attr(root.element, 'aria-live', 'polite');\n    attr(root.element, 'aria-relevant', 'additions');\n};\n\nlet addFilesNotificationTimeout = null;\nlet notificationClearTimeout = null;\n\nconst filenames = [];\n\nconst assist = (root, message) => {\n    root.element.textContent = message;\n};\n\nconst clear$1 = root => {\n    root.element.textContent = '';\n};\n\nconst listModified = (root, filename, label) => {\n    const total = root.query('GET_TOTAL_ITEMS');\n    assist(\n        root,\n        `${label} ${filename}, ${total} ${\n            total === 1\n                ? root.query('GET_LABEL_FILE_COUNT_SINGULAR')\n                : root.query('GET_LABEL_FILE_COUNT_PLURAL')\n        }`\n    );\n\n    // clear group after set amount of time so the status is not read twice\n    clearTimeout(notificationClearTimeout);\n    notificationClearTimeout = setTimeout(() => {\n        clear$1(root);\n    }, 1500);\n};\n\nconst isUsingFilePond = root => root.element.parentNode.contains(document.activeElement);\n\nconst itemAdded = ({ root, action }) => {\n    if (!isUsingFilePond(root)) {\n        return;\n    }\n\n    root.element.textContent = '';\n    const item = root.query('GET_ITEM', action.id);\n    filenames.push(item.filename);\n\n    clearTimeout(addFilesNotificationTimeout);\n    addFilesNotificationTimeout = setTimeout(() => {\n        listModified(root, filenames.join(', '), root.query('GET_LABEL_FILE_ADDED'));\n        filenames.length = 0;\n    }, 750);\n};\n\nconst itemRemoved = ({ root, action }) => {\n    if (!isUsingFilePond(root)) {\n        return;\n    }\n\n    const item = action.item;\n    listModified(root, item.filename, root.query('GET_LABEL_FILE_REMOVED'));\n};\n\nconst itemProcessed = ({ root, action }) => {\n    // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n    const label = root.query('GET_LABEL_FILE_PROCESSING_COMPLETE');\n\n    assist(root, `${filename} ${label}`);\n};\n\nconst itemProcessedUndo = ({ root, action }) => {\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n    const label = root.query('GET_LABEL_FILE_PROCESSING_ABORTED');\n\n    assist(root, `${filename} ${label}`);\n};\n\nconst itemError = ({ root, action }) => {\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n\n    // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    assist(root, `${action.status.main} ${filename} ${action.status.sub}`);\n};\n\nconst assistant = createView({\n    create: create$d,\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: itemAdded,\n        DID_REMOVE_ITEM: itemRemoved,\n        DID_COMPLETE_ITEM_PROCESSING: itemProcessed,\n\n        DID_ABORT_ITEM_PROCESSING: itemProcessedUndo,\n        DID_REVERT_ITEM_PROCESSING: itemProcessedUndo,\n\n        DID_THROW_ITEM_REMOVE_ERROR: itemError,\n        DID_THROW_ITEM_LOAD_ERROR: itemError,\n        DID_THROW_ITEM_INVALID: itemError,\n        DID_THROW_ITEM_PROCESSING_ERROR: itemError,\n    }),\n    tag: 'span',\n    name: 'assistant',\n});\n\nconst toCamels = (string, separator = '-') =>\n    string.replace(new RegExp(`${separator}.`, 'g'), sub => sub.charAt(1).toUpperCase());\n\nconst debounce = (func, interval = 16, immidiateOnly = true) => {\n    let last = Date.now();\n    let timeout = null;\n\n    return (...args) => {\n        clearTimeout(timeout);\n\n        const dist = Date.now() - last;\n\n        const fn = () => {\n            last = Date.now();\n            func(...args);\n        };\n\n        if (dist < interval) {\n            // we need to delay by the difference between interval and dist\n            // for example: if distance is 10 ms and interval is 16 ms,\n            // we need to wait an additional 6ms before calling the function)\n            if (!immidiateOnly) {\n                timeout = setTimeout(fn, interval - dist);\n            }\n        } else {\n            // go!\n            fn();\n        }\n    };\n};\n\nconst MAX_FILES_LIMIT = 1000000;\n\nconst prevent = e => e.preventDefault();\n\nconst create$e = ({ root, props }) => {\n    // Add id\n    const id = root.query('GET_ID');\n    if (id) {\n        root.element.id = id;\n    }\n\n    // Add className\n    const className = root.query('GET_CLASS_NAME');\n    if (className) {\n        className\n            .split(' ')\n            .filter(name => name.length)\n            .forEach(name => {\n                root.element.classList.add(name);\n            });\n    }\n\n    // Field label\n    root.ref.label = root.appendChildView(\n        root.createChildView(dropLabel, {\n            ...props,\n            translateY: null,\n            caption: root.query('GET_LABEL_IDLE'),\n        })\n    );\n\n    // List of items\n    root.ref.list = root.appendChildView(root.createChildView(listScroller, { translateY: null }));\n\n    // Background panel\n    root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'panel-root' }));\n\n    // Assistant notifies assistive tech when content changes\n    root.ref.assistant = root.appendChildView(root.createChildView(assistant, { ...props }));\n\n    // Data\n    root.ref.data = root.appendChildView(root.createChildView(data, { ...props }));\n\n    // Measure (tests if fixed height was set)\n    // DOCTYPE needs to be set for this to work\n    root.ref.measure = createElement$1('div');\n    root.ref.measure.style.height = '100%';\n    root.element.appendChild(root.ref.measure);\n\n    // information on the root height or fixed height status\n    root.ref.bounds = null;\n\n    // apply initial style properties\n    root.query('GET_STYLES')\n        .filter(style => !isEmpty(style.value))\n        .map(({ name, value }) => {\n            root.element.dataset[name] = value;\n        });\n\n    // determine if width changed\n    root.ref.widthPrevious = null;\n    root.ref.widthUpdated = debounce(() => {\n        root.ref.updateHistory = [];\n        root.dispatch('DID_RESIZE_ROOT');\n    }, 250);\n\n    // history of updates\n    root.ref.previousAspectRatio = null;\n    root.ref.updateHistory = [];\n\n    // prevent scrolling and zooming on iOS (only if supports pointer events, for then we can enable reorder)\n    const canHover = window.matchMedia('(pointer: fine) and (hover: hover)').matches;\n    const hasPointerEvents = 'PointerEvent' in window;\n    if (root.query('GET_ALLOW_REORDER') && hasPointerEvents && !canHover) {\n        root.element.addEventListener('touchmove', prevent, { passive: false });\n        root.element.addEventListener('gesturestart', prevent);\n    }\n\n    // add credits\n    const credits = root.query('GET_CREDITS');\n    const hasCredits = credits.length === 2;\n    if (hasCredits) {\n        const frag = document.createElement('a');\n        frag.className = 'filepond--credits';\n        frag.href = credits[0];\n        frag.tabIndex = -1;\n        frag.target = '_blank';\n        frag.rel = 'noopener noreferrer nofollow';\n        frag.textContent = credits[1];\n        root.element.appendChild(frag);\n        root.ref.credits = frag;\n    }\n};\n\nconst write$9 = ({ root, props, actions }) => {\n    // route actions\n    route$5({ root, props, actions });\n\n    // apply style properties\n    actions\n        .filter(action => /^DID_SET_STYLE_/.test(action.type))\n        .filter(action => !isEmpty(action.data.value))\n        .map(({ type, data }) => {\n            const name = toCamels(type.substring(8).toLowerCase(), '_');\n            root.element.dataset[name] = data.value;\n            root.invalidateLayout();\n        });\n\n    if (root.rect.element.hidden) return;\n\n    if (root.rect.element.width !== root.ref.widthPrevious) {\n        root.ref.widthPrevious = root.rect.element.width;\n        root.ref.widthUpdated();\n    }\n\n    // get box bounds, we do this only once\n    let bounds = root.ref.bounds;\n    if (!bounds) {\n        bounds = root.ref.bounds = calculateRootBoundingBoxHeight(root);\n\n        // destroy measure element\n        root.element.removeChild(root.ref.measure);\n        root.ref.measure = null;\n    }\n\n    // get quick references to various high level parts of the upload tool\n    const { hopper, label, list, panel } = root.ref;\n\n    // sets correct state to hopper scope\n    if (hopper) {\n        hopper.updateHopperState();\n    }\n\n    // bool to indicate if we're full or not\n    const aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n    const isMultiItem = root.query('GET_ALLOW_MULTIPLE');\n    const totalItems = root.query('GET_TOTAL_ITEMS');\n    const maxItems = isMultiItem ? root.query('GET_MAX_FILES') || MAX_FILES_LIMIT : 1;\n    const atMaxCapacity = totalItems === maxItems;\n\n    // action used to add item\n    const addAction = actions.find(action => action.type === 'DID_ADD_ITEM');\n\n    // if reached max capacity and we've just reached it\n    if (atMaxCapacity && addAction) {\n        // get interaction type\n        const interactionMethod = addAction.data.interactionMethod;\n\n        // hide label\n        label.opacity = 0;\n\n        if (isMultiItem) {\n            label.translateY = -40;\n        } else {\n            if (interactionMethod === InteractionMethod.API) {\n                label.translateX = 40;\n            } else if (interactionMethod === InteractionMethod.BROWSE) {\n                label.translateY = 40;\n            } else {\n                label.translateY = 30;\n            }\n        }\n    } else if (!atMaxCapacity) {\n        label.opacity = 1;\n        label.translateX = 0;\n        label.translateY = 0;\n    }\n\n    const listItemMargin = calculateListItemMargin(root);\n\n    const listHeight = calculateListHeight(root);\n\n    const labelHeight = label.rect.element.height;\n    const currentLabelHeight = !isMultiItem || atMaxCapacity ? 0 : labelHeight;\n\n    const listMarginTop = atMaxCapacity ? list.rect.element.marginTop : 0;\n    const listMarginBottom = totalItems === 0 ? 0 : list.rect.element.marginBottom;\n\n    const visualHeight = currentLabelHeight + listMarginTop + listHeight.visual + listMarginBottom;\n    const boundsHeight = currentLabelHeight + listMarginTop + listHeight.bounds + listMarginBottom;\n\n    // link list to label bottom position\n    list.translateY =\n        Math.max(0, currentLabelHeight - list.rect.element.marginTop) - listItemMargin.top;\n\n    if (aspectRatio) {\n        // fixed aspect ratio\n\n        // calculate height based on width\n        const width = root.rect.element.width;\n        const height = width * aspectRatio;\n\n        // clear history if aspect ratio has changed\n        if (aspectRatio !== root.ref.previousAspectRatio) {\n            root.ref.previousAspectRatio = aspectRatio;\n            root.ref.updateHistory = [];\n        }\n\n        // remember this width\n        const history = root.ref.updateHistory;\n        history.push(width);\n\n        const MAX_BOUNCES = 2;\n        if (history.length > MAX_BOUNCES * 2) {\n            const l = history.length;\n            const bottom = l - 10;\n            let bounces = 0;\n            for (let i = l; i >= bottom; i--) {\n                if (history[i] === history[i - 2]) {\n                    bounces++;\n                }\n\n                if (bounces >= MAX_BOUNCES) {\n                    // dont adjust height\n                    return;\n                }\n            }\n        }\n\n        // fix height of panel so it adheres to aspect ratio\n        panel.scalable = false;\n        panel.height = height;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            height -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        if (listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = height;\n    } else if (bounds.fixedHeight) {\n        // fixed height\n\n        // fix height of panel\n        panel.scalable = false;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            bounds.fixedHeight -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        // set list height\n        if (listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // no need to set container bounds as these are handles by CSS fixed height\n    } else if (bounds.cappedHeight) {\n        // max-height\n\n        // not a fixed height panel\n        const isCappedHeight = visualHeight >= bounds.cappedHeight;\n        const panelHeight = Math.min(bounds.cappedHeight, visualHeight);\n        panel.scalable = true;\n        panel.height = isCappedHeight\n            ? panelHeight\n            : panelHeight - listItemMargin.top - listItemMargin.bottom;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            panelHeight -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        // set list height (if is overflowing)\n        if (visualHeight > bounds.cappedHeight && listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = Math.min(\n            bounds.cappedHeight,\n            boundsHeight - listItemMargin.top - listItemMargin.bottom\n        );\n    } else {\n        // flexible height\n\n        // not a fixed height panel\n        const itemMargin = totalItems > 0 ? listItemMargin.top + listItemMargin.bottom : 0;\n        panel.scalable = true;\n        panel.height = Math.max(labelHeight, visualHeight - itemMargin);\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = Math.max(labelHeight, boundsHeight - itemMargin);\n    }\n\n    // move credits to bottom\n    if (root.ref.credits && panel.heightCurrent)\n        root.ref.credits.style.transform = `translateY(${panel.heightCurrent}px)`;\n};\n\nconst calculateListItemMargin = root => {\n    const item = root.ref.list.childViews[0].childViews[0];\n    return item\n        ? {\n              top: item.rect.element.marginTop,\n              bottom: item.rect.element.marginBottom,\n          }\n        : {\n              top: 0,\n              bottom: 0,\n          };\n};\n\nconst calculateListHeight = root => {\n    let visual = 0;\n    let bounds = 0;\n\n    // get file list reference\n    const scrollList = root.ref.list;\n    const itemList = scrollList.childViews[0];\n    const visibleChildren = itemList.childViews.filter(child => child.rect.element.height);\n    const children = root\n        .query('GET_ACTIVE_ITEMS')\n        .map(item => visibleChildren.find(child => child.id === item.id))\n        .filter(item => item);\n\n    // no children, done!\n    if (children.length === 0) return { visual, bounds };\n\n    const horizontalSpace = itemList.rect.element.width;\n    const dragIndex = getItemIndexByPosition(itemList, children, scrollList.dragCoordinates);\n\n    const childRect = children[0].rect.element;\n\n    const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n\n    const itemWidth = childRect.width + itemHorizontalMargin;\n    const itemHeight = childRect.height + itemVerticalMargin;\n\n    const newItem = typeof dragIndex !== 'undefined' && dragIndex >= 0 ? 1 : 0;\n    const removedItem = children.find(child => child.markedForRemoval && child.opacity < 0.45)\n        ? -1\n        : 0;\n    const verticalItemCount = children.length + newItem + removedItem;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        children.forEach(item => {\n            const height = item.rect.element.height + itemVerticalMargin;\n            bounds += height;\n            visual += height * item.opacity;\n        });\n    }\n    // grid\n    else {\n        bounds = Math.ceil(verticalItemCount / itemsPerRow) * itemHeight;\n        visual = bounds;\n    }\n\n    return { visual, bounds };\n};\n\nconst calculateRootBoundingBoxHeight = root => {\n    const height = root.ref.measureHeight || null;\n    const cappedHeight = parseInt(root.style.maxHeight, 10) || null;\n    const fixedHeight = height === 0 ? null : height;\n\n    return {\n        cappedHeight,\n        fixedHeight,\n    };\n};\n\nconst exceedsMaxFiles = (root, items) => {\n    const allowReplace = root.query('GET_ALLOW_REPLACE');\n    const allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n    const totalItems = root.query('GET_TOTAL_ITEMS');\n    let maxItems = root.query('GET_MAX_FILES');\n\n    // total amount of items being dragged\n    const totalBrowseItems = items.length;\n\n    // if does not allow multiple items and dragging more than one item\n    if (!allowMultiple && totalBrowseItems > 1) {\n        root.dispatch('DID_THROW_MAX_FILES', {\n            source: items,\n            error: createResponse('warning', 0, 'Max files'),\n        });\n        return true;\n    }\n\n    // limit max items to one if not allowed to drop multiple items\n    maxItems = allowMultiple ? maxItems : 1;\n\n    if (!allowMultiple && allowReplace) {\n        // There is only one item, so there is room to replace or add an item\n        return false;\n    }\n\n    // no more room?\n    const hasMaxItems = isInt(maxItems);\n    if (hasMaxItems && totalItems + totalBrowseItems > maxItems) {\n        root.dispatch('DID_THROW_MAX_FILES', {\n            source: items,\n            error: createResponse('warning', 0, 'Max files'),\n        });\n        return true;\n    }\n\n    return false;\n};\n\nconst getDragIndex = (list, children, position) => {\n    const itemList = list.childViews[0];\n    return getItemIndexByPosition(itemList, children, {\n        left: position.scopeLeft - itemList.rect.element.left,\n        top:\n            position.scopeTop -\n            (list.rect.outer.top + list.rect.element.marginTop + list.rect.element.scrollTop),\n    });\n};\n\n/**\n * Enable or disable file drop functionality\n */\nconst toggleDrop = root => {\n    const isAllowed = root.query('GET_ALLOW_DROP');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.hopper) {\n        const hopper = createHopper(\n            root.element,\n            items => {\n                // allow quick validation of dropped items\n                const beforeDropFile = root.query('GET_BEFORE_DROP_FILE') || (() => true);\n\n                // all items should be validated by all filters as valid\n                const dropValidation = root.query('GET_DROP_VALIDATION');\n                return dropValidation\n                    ? items.every(\n                          item =>\n                              applyFilters('ALLOW_HOPPER_ITEM', item, {\n                                  query: root.query,\n                              }).every(result => result === true) && beforeDropFile(item)\n                      )\n                    : true;\n            },\n            {\n                filterItems: items => {\n                    const ignoredFiles = root.query('GET_IGNORED_FILES');\n                    return items.filter(item => {\n                        if (isFile(item)) {\n                            return !ignoredFiles.includes(item.name.toLowerCase());\n                        }\n                        return true;\n                    });\n                },\n                catchesDropsOnPage: root.query('GET_DROP_ON_PAGE'),\n                requiresDropOnElement: root.query('GET_DROP_ON_ELEMENT'),\n            }\n        );\n\n        hopper.onload = (items, position) => {\n            // get item children elements and sort based on list sort\n            const list = root.ref.list.childViews[0];\n            const visibleChildren = list.childViews.filter(child => child.rect.element.height);\n            const children = root\n                .query('GET_ACTIVE_ITEMS')\n                .map(item => visibleChildren.find(child => child.id === item.id))\n                .filter(item => item);\n\n            applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(queue => {\n                // these files don't fit so stop here\n                if (exceedsMaxFiles(root, queue)) return false;\n\n                // go\n                root.dispatch('ADD_ITEMS', {\n                    items: queue,\n                    index: getDragIndex(root.ref.list, children, position),\n                    interactionMethod: InteractionMethod.DROP,\n                });\n            });\n\n            root.dispatch('DID_DROP', { position });\n\n            root.dispatch('DID_END_DRAG', { position });\n        };\n\n        hopper.ondragstart = position => {\n            root.dispatch('DID_START_DRAG', { position });\n        };\n\n        hopper.ondrag = debounce(position => {\n            root.dispatch('DID_DRAG', { position });\n        });\n\n        hopper.ondragend = position => {\n            root.dispatch('DID_END_DRAG', { position });\n        };\n\n        root.ref.hopper = hopper;\n\n        root.ref.drip = root.appendChildView(root.createChildView(drip));\n    } else if (!enabled && root.ref.hopper) {\n        root.ref.hopper.destroy();\n        root.ref.hopper = null;\n        root.removeChildView(root.ref.drip);\n    }\n};\n\n/**\n * Enable or disable browse functionality\n */\nconst toggleBrowse = (root, props) => {\n    const isAllowed = root.query('GET_ALLOW_BROWSE');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.browser) {\n        root.ref.browser = root.appendChildView(\n            root.createChildView(browser, {\n                ...props,\n                onload: items => {\n                    applyFilterChain('ADD_ITEMS', items, {\n                        dispatch: root.dispatch,\n                    }).then(queue => {\n                        // these files don't fit so stop here\n                        if (exceedsMaxFiles(root, queue)) return false;\n\n                        // add items!\n                        root.dispatch('ADD_ITEMS', {\n                            items: queue,\n                            index: -1,\n                            interactionMethod: InteractionMethod.BROWSE,\n                        });\n                    });\n                },\n            }),\n            0\n        );\n    } else if (!enabled && root.ref.browser) {\n        root.removeChildView(root.ref.browser);\n        root.ref.browser = null;\n    }\n};\n\n/**\n * Enable or disable paste functionality\n */\nconst togglePaste = root => {\n    const isAllowed = root.query('GET_ALLOW_PASTE');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.paster) {\n        root.ref.paster = createPaster();\n        root.ref.paster.onload = items => {\n            applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(queue => {\n                // these files don't fit so stop here\n                if (exceedsMaxFiles(root, queue)) return false;\n\n                // add items!\n                root.dispatch('ADD_ITEMS', {\n                    items: queue,\n                    index: -1,\n                    interactionMethod: InteractionMethod.PASTE,\n                });\n            });\n        };\n    } else if (!enabled && root.ref.paster) {\n        root.ref.paster.destroy();\n        root.ref.paster = null;\n    }\n};\n\n/**\n * Route actions\n */\nconst route$5 = createRoute({\n    DID_SET_ALLOW_BROWSE: ({ root, props }) => {\n        toggleBrowse(root, props);\n    },\n    DID_SET_ALLOW_DROP: ({ root }) => {\n        toggleDrop(root);\n    },\n    DID_SET_ALLOW_PASTE: ({ root }) => {\n        togglePaste(root);\n    },\n    DID_SET_DISABLED: ({ root, props }) => {\n        toggleDrop(root);\n        togglePaste(root);\n        toggleBrowse(root, props);\n        const isDisabled = root.query('GET_DISABLED');\n        if (isDisabled) {\n            root.element.dataset.disabled = 'disabled';\n        } else {\n            // delete root.element.dataset.disabled; <= this does not work on iOS 10\n            root.element.removeAttribute('data-disabled');\n        }\n    },\n});\n\nconst root = createView({\n    name: 'root',\n    read: ({ root }) => {\n        if (root.ref.measure) {\n            root.ref.measureHeight = root.ref.measure.offsetHeight;\n        }\n    },\n    create: create$e,\n    write: write$9,\n    destroy: ({ root }) => {\n        if (root.ref.paster) {\n            root.ref.paster.destroy();\n        }\n        if (root.ref.hopper) {\n            root.ref.hopper.destroy();\n        }\n        root.element.removeEventListener('touchmove', prevent);\n        root.element.removeEventListener('gesturestart', prevent);\n    },\n    mixins: {\n        styles: ['height'],\n    },\n});\n\n// creates the app\nconst createApp = (initialOptions = {}) => {\n    // let element\n    let originalElement = null;\n\n    // get default options\n    const defaultOptions = getOptions();\n\n    // create the data store, this will contain all our app info\n    const store = createStore(\n        // initial state (should be serializable)\n        createInitialState(defaultOptions),\n\n        // queries\n        [queries, createOptionQueries(defaultOptions)],\n\n        // action handlers\n        [actions, createOptionActions(defaultOptions)]\n    );\n\n    // set initial options\n    store.dispatch('SET_OPTIONS', { options: initialOptions });\n\n    // kick thread if visibility changes\n    const visibilityHandler = () => {\n        if (document.hidden) return;\n        store.dispatch('KICK');\n    };\n    document.addEventListener('visibilitychange', visibilityHandler);\n\n    // re-render on window resize start and finish\n    let resizeDoneTimer = null;\n    let isResizing = false;\n    let isResizingHorizontally = false;\n    let initialWindowWidth = null;\n    let currentWindowWidth = null;\n    const resizeHandler = () => {\n        if (!isResizing) {\n            isResizing = true;\n        }\n        clearTimeout(resizeDoneTimer);\n        resizeDoneTimer = setTimeout(() => {\n            isResizing = false;\n            initialWindowWidth = null;\n            currentWindowWidth = null;\n            if (isResizingHorizontally) {\n                isResizingHorizontally = false;\n                store.dispatch('DID_STOP_RESIZE');\n            }\n        }, 500);\n    };\n    window.addEventListener('resize', resizeHandler);\n\n    // render initial view\n    const view = root(store, { id: getUniqueId() });\n\n    //\n    // PRIVATE API -------------------------------------------------------------------------------------\n    //\n    let isResting = false;\n    let isHidden = false;\n\n    const readWriteApi = {\n        // necessary for update loop\n\n        /**\n         * Reads from dom (never call manually)\n         * @private\n         */\n        _read: () => {\n            // test if we're resizing horizontally\n            // TODO: see if we can optimize this by measuring root rect\n            if (isResizing) {\n                currentWindowWidth = window.innerWidth;\n                if (!initialWindowWidth) {\n                    initialWindowWidth = currentWindowWidth;\n                }\n\n                if (!isResizingHorizontally && currentWindowWidth !== initialWindowWidth) {\n                    store.dispatch('DID_START_RESIZE');\n                    isResizingHorizontally = true;\n                }\n            }\n\n            if (isHidden && isResting) {\n                // test if is no longer hidden\n                isResting = view.element.offsetParent === null;\n            }\n\n            // if resting, no need to read as numbers will still all be correct\n            if (isResting) return;\n\n            // read view data\n            view._read();\n\n            // if is hidden we need to know so we exit rest mode when revealed\n            isHidden = view.rect.element.hidden;\n        },\n\n        /**\n         * Writes to dom (never call manually)\n         * @private\n         */\n        _write: ts => {\n            // get all actions from store\n            const actions = store\n                .processActionQueue()\n\n                // filter out set actions (these will automatically trigger DID_SET)\n                .filter(action => !/^SET_/.test(action.type));\n\n            // if was idling and no actions stop here\n            if (isResting && !actions.length) return;\n\n            // some actions might trigger events\n            routeActionsToEvents(actions);\n\n            // update the view\n            isResting = view._write(ts, actions, isResizingHorizontally);\n\n            // will clean up all archived items\n            removeReleasedItems(store.query('GET_ITEMS'));\n\n            // now idling\n            if (isResting) {\n                store.processDispatchQueue();\n            }\n        },\n    };\n\n    //\n    // EXPOSE EVENTS -------------------------------------------------------------------------------------\n    //\n    const createEvent = name => data => {\n        // create default event\n        const event = {\n            type: name,\n        };\n\n        // no data to add\n        if (!data) {\n            return event;\n        }\n\n        // copy relevant props\n        if (data.hasOwnProperty('error')) {\n            event.error = data.error ? { ...data.error } : null;\n        }\n\n        if (data.status) {\n            event.status = { ...data.status };\n        }\n\n        if (data.file) {\n            event.output = data.file;\n        }\n\n        // only source is available, else add item if possible\n        if (data.source) {\n            event.file = data.source;\n        } else if (data.item || data.id) {\n            const item = data.item ? data.item : store.query('GET_ITEM', data.id);\n            event.file = item ? createItemAPI(item) : null;\n        }\n\n        // map all items in a possible items array\n        if (data.items) {\n            event.items = data.items.map(createItemAPI);\n        }\n\n        // if this is a progress event add the progress amount\n        if (/progress/.test(name)) {\n            event.progress = data.progress;\n        }\n\n        // copy relevant props\n        if (data.hasOwnProperty('origin') && data.hasOwnProperty('target')) {\n            event.origin = data.origin;\n            event.target = data.target;\n        }\n\n        return event;\n    };\n\n    const eventRoutes = {\n        DID_DESTROY: createEvent('destroy'),\n\n        DID_INIT: createEvent('init'),\n\n        DID_THROW_MAX_FILES: createEvent('warning'),\n\n        DID_INIT_ITEM: createEvent('initfile'),\n        DID_START_ITEM_LOAD: createEvent('addfilestart'),\n        DID_UPDATE_ITEM_LOAD_PROGRESS: createEvent('addfileprogress'),\n        DID_LOAD_ITEM: createEvent('addfile'),\n\n        DID_THROW_ITEM_INVALID: [createEvent('error'), createEvent('addfile')],\n\n        DID_THROW_ITEM_LOAD_ERROR: [createEvent('error'), createEvent('addfile')],\n\n        DID_THROW_ITEM_REMOVE_ERROR: [createEvent('error'), createEvent('removefile')],\n\n        DID_PREPARE_OUTPUT: createEvent('preparefile'),\n\n        DID_START_ITEM_PROCESSING: createEvent('processfilestart'),\n        DID_UPDATE_ITEM_PROCESS_PROGRESS: createEvent('processfileprogress'),\n        DID_ABORT_ITEM_PROCESSING: createEvent('processfileabort'),\n        DID_COMPLETE_ITEM_PROCESSING: createEvent('processfile'),\n        DID_COMPLETE_ITEM_PROCESSING_ALL: createEvent('processfiles'),\n        DID_REVERT_ITEM_PROCESSING: createEvent('processfilerevert'),\n\n        DID_THROW_ITEM_PROCESSING_ERROR: [createEvent('error'), createEvent('processfile')],\n\n        DID_REMOVE_ITEM: createEvent('removefile'),\n\n        DID_UPDATE_ITEMS: createEvent('updatefiles'),\n\n        DID_ACTIVATE_ITEM: createEvent('activatefile'),\n\n        DID_REORDER_ITEMS: createEvent('reorderfiles'),\n    };\n\n    const exposeEvent = event => {\n        // create event object to be dispatched\n        const detail = { pond: exports, ...event };\n        delete detail.type;\n        view.element.dispatchEvent(\n            new CustomEvent(`FilePond:${event.type}`, {\n                // event info\n                detail,\n\n                // event behaviour\n                bubbles: true,\n                cancelable: true,\n                composed: true, // triggers listeners outside of shadow root\n            })\n        );\n\n        // event object to params used for `on()` event handlers and callbacks `oninit()`\n        const params = [];\n\n        // if is possible error event, make it the first param\n        if (event.hasOwnProperty('error')) {\n            params.push(event.error);\n        }\n\n        // file is always section\n        if (event.hasOwnProperty('file')) {\n            params.push(event.file);\n        }\n\n        // append other props\n        const filtered = ['type', 'error', 'file'];\n        Object.keys(event)\n            .filter(key => !filtered.includes(key))\n            .forEach(key => params.push(event[key]));\n\n        // on(type, () => { })\n        exports.fire(event.type, ...params);\n\n        // oninit = () => {}\n        const handler = store.query(`GET_ON${event.type.toUpperCase()}`);\n        if (handler) {\n            handler(...params);\n        }\n    };\n\n    const routeActionsToEvents = actions => {\n        if (!actions.length) return;\n        actions\n            .filter(action => eventRoutes[action.type])\n            .forEach(action => {\n                const routes = eventRoutes[action.type];\n                (Array.isArray(routes) ? routes : [routes]).forEach(route => {\n                    // this isn't fantastic, but because of the stacking of settimeouts plugins can handle the did_load before the did_init\n                    if (action.type === 'DID_INIT_ITEM') {\n                        exposeEvent(route(action.data));\n                    } else {\n                        setTimeout(() => {\n                            exposeEvent(route(action.data));\n                        }, 0);\n                    }\n                });\n            });\n    };\n\n    //\n    // PUBLIC API -------------------------------------------------------------------------------------\n    //\n    const setOptions = options => store.dispatch('SET_OPTIONS', { options });\n\n    const getFile = query => store.query('GET_ACTIVE_ITEM', query);\n\n    const prepareFile = query =>\n        new Promise((resolve, reject) => {\n            store.dispatch('REQUEST_ITEM_PREPARE', {\n                query,\n                success: item => {\n                    resolve(item);\n                },\n                failure: error => {\n                    reject(error);\n                },\n            });\n        });\n\n    const addFile = (source, options = {}) =>\n        new Promise((resolve, reject) => {\n            addFiles([{ source, options }], { index: options.index })\n                .then(items => resolve(items && items[0]))\n                .catch(reject);\n        });\n\n    const isFilePondFile = obj => obj.file && obj.id;\n\n    const removeFile = (query, options) => {\n        // if only passed options\n        if (typeof query === 'object' && !isFilePondFile(query) && !options) {\n            options = query;\n            query = undefined;\n        }\n\n        // request item removal\n        store.dispatch('REMOVE_ITEM', { ...options, query });\n\n        // see if item has been removed\n        return store.query('GET_ACTIVE_ITEM', query) === null;\n    };\n\n    const addFiles = (...args) =>\n        new Promise((resolve, reject) => {\n            const sources = [];\n            const options = {};\n\n            // user passed a sources array\n            if (isArray(args[0])) {\n                sources.push.apply(sources, args[0]);\n                Object.assign(options, args[1] || {});\n            } else {\n                // user passed sources as arguments, last one might be options object\n                const lastArgument = args[args.length - 1];\n                if (typeof lastArgument === 'object' && !(lastArgument instanceof Blob)) {\n                    Object.assign(options, args.pop());\n                }\n\n                // add rest to sources\n                sources.push(...args);\n            }\n\n            store.dispatch('ADD_ITEMS', {\n                items: sources,\n                index: options.index,\n                interactionMethod: InteractionMethod.API,\n                success: resolve,\n                failure: reject,\n            });\n        });\n\n    const getFiles = () => store.query('GET_ACTIVE_ITEMS');\n\n    const processFile = query =>\n        new Promise((resolve, reject) => {\n            store.dispatch('REQUEST_ITEM_PROCESSING', {\n                query,\n                success: item => {\n                    resolve(item);\n                },\n                failure: error => {\n                    reject(error);\n                },\n            });\n        });\n\n    const prepareFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n        const items = queries.length ? queries : getFiles();\n        return Promise.all(items.map(prepareFile));\n    };\n\n    const processFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n        if (!queries.length) {\n            const files = getFiles().filter(\n                item =>\n                    !(item.status === ItemStatus.IDLE && item.origin === FileOrigin.LOCAL) &&\n                    item.status !== ItemStatus.PROCESSING &&\n                    item.status !== ItemStatus.PROCESSING_COMPLETE &&\n                    item.status !== ItemStatus.PROCESSING_REVERT_ERROR\n            );\n            return Promise.all(files.map(processFile));\n        }\n        return Promise.all(queries.map(processFile));\n    };\n\n    const removeFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n\n        let options;\n        if (typeof queries[queries.length - 1] === 'object') {\n            options = queries.pop();\n        } else if (Array.isArray(args[0])) {\n            options = args[1];\n        }\n\n        const files = getFiles();\n\n        if (!queries.length) return Promise.all(files.map(file => removeFile(file, options)));\n\n        // when removing by index the indexes shift after each file removal so we need to convert indexes to ids\n        const mappedQueries = queries\n            .map(query => (isNumber(query) ? (files[query] ? files[query].id : null) : query))\n            .filter(query => query);\n\n        return mappedQueries.map(q => removeFile(q, options));\n    };\n\n    const exports = {\n        // supports events\n        ...on(),\n\n        // inject private api methods\n        ...readWriteApi,\n\n        // inject all getters and setters\n        ...createOptionAPI(store, defaultOptions),\n\n        /**\n         * Override options defined in options object\n         * @param options\n         */\n        setOptions,\n\n        /**\n         * Load the given file\n         * @param source - the source of the file (either a File, base64 data uri or url)\n         * @param options - object, { index: 0 }\n         */\n        addFile,\n\n        /**\n         * Load the given files\n         * @param sources - the sources of the files to load\n         * @param options - object, { index: 0 }\n         */\n        addFiles,\n\n        /**\n         * Returns the file objects matching the given query\n         * @param query { string, number, null }\n         */\n        getFile,\n\n        /**\n         * Upload file with given name\n         * @param query { string, number, null  }\n         */\n        processFile,\n\n        /**\n         * Request prepare output for file with given name\n         * @param query { string, number, null  }\n         */\n        prepareFile,\n\n        /**\n         * Removes a file by its name\n         * @param query { string, number, null  }\n         */\n        removeFile,\n\n        /**\n         * Moves a file to a new location in the files list\n         */\n        moveFile: (query, index) => store.dispatch('MOVE_ITEM', { query, index }),\n\n        /**\n         * Returns all files (wrapped in public api)\n         */\n        getFiles,\n\n        /**\n         * Starts uploading all files\n         */\n        processFiles,\n\n        /**\n         * Clears all files from the files list\n         */\n        removeFiles,\n\n        /**\n         * Starts preparing output of all files\n         */\n        prepareFiles,\n\n        /**\n         * Sort list of files\n         */\n        sort: compare => store.dispatch('SORT', { compare }),\n\n        /**\n         * Browse the file system for a file\n         */\n        browse: () => {\n            // needs to be trigger directly as user action needs to be traceable (is not traceable in requestAnimationFrame)\n            var input = view.element.querySelector('input[type=file]');\n            if (input) {\n                input.click();\n            }\n        },\n\n        /**\n         * Destroys the app\n         */\n        destroy: () => {\n            // request destruction\n            exports.fire('destroy', view.element);\n\n            // stop active processes (file uploads, fetches, stuff like that)\n            // loop over items and depending on states call abort for ongoing processes\n            store.dispatch('ABORT_ALL');\n\n            // destroy view\n            view._destroy();\n\n            // stop listening to resize\n            window.removeEventListener('resize', resizeHandler);\n\n            // stop listening to the visiblitychange event\n            document.removeEventListener('visibilitychange', visibilityHandler);\n\n            // dispatch destroy\n            store.dispatch('DID_DESTROY');\n        },\n\n        /**\n         * Inserts the plugin before the target element\n         */\n        insertBefore: element => insertBefore(view.element, element),\n\n        /**\n         * Inserts the plugin after the target element\n         */\n        insertAfter: element => insertAfter(view.element, element),\n\n        /**\n         * Appends the plugin to the target element\n         */\n        appendTo: element => element.appendChild(view.element),\n\n        /**\n         * Replaces an element with the app\n         */\n        replaceElement: element => {\n            // insert the app before the element\n            insertBefore(view.element, element);\n\n            // remove the original element\n            element.parentNode.removeChild(element);\n\n            // remember original element\n            originalElement = element;\n        },\n\n        /**\n         * Restores the original element\n         */\n        restoreElement: () => {\n            if (!originalElement) {\n                return; // no element to restore\n            }\n\n            // restore original element\n            insertAfter(originalElement, view.element);\n\n            // remove our element\n            view.element.parentNode.removeChild(view.element);\n\n            // remove reference\n            originalElement = null;\n        },\n\n        /**\n         * Returns true if the app root is attached to given element\n         * @param element\n         */\n        isAttachedTo: element => view.element === element || originalElement === element,\n\n        /**\n         * Returns the root element\n         */\n        element: {\n            get: () => view.element,\n        },\n\n        /**\n         * Returns the current pond status\n         */\n        status: {\n            get: () => store.query('GET_STATUS'),\n        },\n    };\n\n    // Done!\n    store.dispatch('DID_INIT');\n\n    // create actual api object\n    return createObject(exports);\n};\n\nconst createAppObject = (customOptions = {}) => {\n    // default options\n    const defaultOptions = {};\n    forin(getOptions(), (key, value) => {\n        defaultOptions[key] = value[0];\n    });\n\n    // set app options\n    const app = createApp({\n        // default options\n        ...defaultOptions,\n\n        // custom options\n        ...customOptions,\n    });\n\n    // return the plugin instance\n    return app;\n};\n\nconst lowerCaseFirstLetter = string => string.charAt(0).toLowerCase() + string.slice(1);\n\nconst attributeNameToPropertyName = attributeName => toCamels(attributeName.replace(/^data-/, ''));\n\nconst mapObject = (object, propertyMap) => {\n    // remove unwanted\n    forin(propertyMap, (selector, mapping) => {\n        forin(object, (property, value) => {\n            // create regexp shortcut\n            const selectorRegExp = new RegExp(selector);\n\n            // tests if\n            const matches = selectorRegExp.test(property);\n\n            // no match, skip\n            if (!matches) {\n                return;\n            }\n\n            // if there's a mapping, the original property is always removed\n            delete object[property];\n\n            // should only remove, we done!\n            if (mapping === false) {\n                return;\n            }\n\n            // move value to new property\n            if (isString(mapping)) {\n                object[mapping] = value;\n                return;\n            }\n\n            // move to group\n            const group = mapping.group;\n            if (isObject(mapping) && !object[group]) {\n                object[group] = {};\n            }\n\n            object[group][lowerCaseFirstLetter(property.replace(selectorRegExp, ''))] = value;\n        });\n\n        // do submapping\n        if (mapping.mapping) {\n            mapObject(object[mapping.group], mapping.mapping);\n        }\n    });\n};\n\nconst getAttributesAsObject = (node, attributeMapping = {}) => {\n    // turn attributes into object\n    const attributes = [];\n    forin(node.attributes, index => {\n        attributes.push(node.attributes[index]);\n    });\n\n    const output = attributes\n        .filter(attribute => attribute.name)\n        .reduce((obj, attribute) => {\n            const value = attr(node, attribute.name);\n\n            obj[attributeNameToPropertyName(attribute.name)] =\n                value === attribute.name ? true : value;\n            return obj;\n        }, {});\n\n    // do mapping of object properties\n    mapObject(output, attributeMapping);\n\n    return output;\n};\n\nconst createAppAtElement = (element, options = {}) => {\n    // how attributes of the input element are mapped to the options for the plugin\n    const attributeMapping = {\n        // translate to other name\n        '^class$': 'className',\n        '^multiple$': 'allowMultiple',\n        '^capture$': 'captureMethod',\n        '^webkitdirectory$': 'allowDirectoriesOnly',\n\n        // group under single property\n        '^server': {\n            group: 'server',\n            mapping: {\n                '^process': {\n                    group: 'process',\n                },\n                '^revert': {\n                    group: 'revert',\n                },\n                '^fetch': {\n                    group: 'fetch',\n                },\n                '^restore': {\n                    group: 'restore',\n                },\n                '^load': {\n                    group: 'load',\n                },\n            },\n        },\n\n        // don't include in object\n        '^type$': false,\n        '^files$': false,\n    };\n\n    // add additional option translators\n    applyFilters('SET_ATTRIBUTE_TO_OPTION_MAP', attributeMapping);\n\n    // create final options object by setting options object and then overriding options supplied on element\n    const mergedOptions = {\n        ...options,\n    };\n\n    const attributeOptions = getAttributesAsObject(\n        element.nodeName === 'FIELDSET' ? element.querySelector('input[type=file]') : element,\n        attributeMapping\n    );\n\n    // merge with options object\n    Object.keys(attributeOptions).forEach(key => {\n        if (isObject(attributeOptions[key])) {\n            if (!isObject(mergedOptions[key])) {\n                mergedOptions[key] = {};\n            }\n            Object.assign(mergedOptions[key], attributeOptions[key]);\n        } else {\n            mergedOptions[key] = attributeOptions[key];\n        }\n    });\n\n    // if parent is a fieldset, get files from parent by selecting all input fields that are not file upload fields\n    // these will then be automatically set to the initial files\n    mergedOptions.files = (options.files || []).concat(\n        Array.from(element.querySelectorAll('input:not([type=file])')).map(input => ({\n            source: input.value,\n            options: {\n                type: input.dataset.type,\n            },\n        }))\n    );\n\n    // build plugin\n    const app = createAppObject(mergedOptions);\n\n    // add already selected files\n    if (element.files) {\n        Array.from(element.files).forEach(file => {\n            app.addFile(file);\n        });\n    }\n\n    // replace the target element\n    app.replaceElement(element);\n\n    // expose\n    return app;\n};\n\n// if an element is passed, we create the instance at that element, if not, we just create an up object\nconst createApp$1 = (...args) =>\n    isNode(args[0]) ? createAppAtElement(...args) : createAppObject(...args);\n\nconst PRIVATE_METHODS = ['fire', '_read', '_write'];\n\nconst createAppAPI = app => {\n    const api = {};\n\n    copyObjectPropertiesToObject(app, api, PRIVATE_METHODS);\n\n    return api;\n};\n\n/**\n * Replaces placeholders in given string with replacements\n * @param string - \"Foo {bar}\"\"\n * @param replacements - { \"bar\": 10 }\n */\nconst replaceInString = (string, replacements) =>\n    string.replace(/(?:{([a-zA-Z]+)})/g, (match, group) => replacements[group]);\n\nconst createWorker = fn => {\n    const workerBlob = new Blob(['(', fn.toString(), ')()'], {\n        type: 'application/javascript',\n    });\n    const workerURL = URL.createObjectURL(workerBlob);\n    const worker = new Worker(workerURL);\n\n    return {\n        transfer: (message, cb) => {},\n        post: (message, cb, transferList) => {\n            const id = getUniqueId();\n\n            worker.onmessage = e => {\n                if (e.data.id === id) {\n                    cb(e.data.message);\n                }\n            };\n\n            worker.postMessage(\n                {\n                    id,\n                    message,\n                },\n                transferList\n            );\n        },\n        terminate: () => {\n            worker.terminate();\n            URL.revokeObjectURL(workerURL);\n        },\n    };\n};\n\nconst loadImage = url =>\n    new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n            resolve(img);\n        };\n        img.onerror = e => {\n            reject(e);\n        };\n        img.src = url;\n    });\n\nconst renameFile = (file, name) => {\n    const renamedFile = file.slice(0, file.size, file.type);\n    renamedFile.lastModifiedDate = file.lastModifiedDate;\n    renamedFile.name = name;\n    return renamedFile;\n};\n\nconst copyFile = file => renameFile(file, file.name);\n\n// already registered plugins (can't register twice)\nconst registeredPlugins = [];\n\n// pass utils to plugin\nconst createAppPlugin = plugin => {\n    // already registered\n    if (registeredPlugins.includes(plugin)) {\n        return;\n    }\n\n    // remember this plugin\n    registeredPlugins.push(plugin);\n\n    // setup!\n    const pluginOutline = plugin({\n        addFilter,\n        utils: {\n            Type,\n            forin,\n            isString,\n            isFile,\n            toNaturalFileSize,\n            replaceInString,\n            getExtensionFromFilename,\n            getFilenameWithoutExtension,\n            guesstimateMimeType,\n            getFileFromBlob,\n            getFilenameFromURL,\n            createRoute,\n            createWorker,\n            createView,\n            createItemAPI,\n            loadImage,\n            copyFile,\n            renameFile,\n            createBlob,\n            applyFilterChain,\n            text,\n            getNumericAspectRatioFromString,\n        },\n        views: {\n            fileActionButton,\n        },\n    });\n\n    // add plugin options to default options\n    extendDefaultOptions(pluginOutline.options);\n};\n\n// feature detection used by supported() method\nconst isOperaMini = () => Object.prototype.toString.call(window.operamini) === '[object OperaMini]';\nconst hasPromises = () => 'Promise' in window;\nconst hasBlobSlice = () => 'slice' in Blob.prototype;\nconst hasCreateObjectURL = () => 'URL' in window && 'createObjectURL' in window.URL;\nconst hasVisibility = () => 'visibilityState' in document;\nconst hasTiming = () => 'performance' in window; // iOS 8.x\nconst hasCSSSupports = () => 'supports' in (window.CSS || {}); // use to detect Safari 9+\nconst isIE11 = () => /MSIE|Trident/.test(window.navigator.userAgent);\n\nconst supported = (() => {\n    // Runs immediately and then remembers result for subsequent calls\n    const isSupported =\n        // Has to be a browser\n        isBrowser() &&\n        // Can't run on Opera Mini due to lack of everything\n        !isOperaMini() &&\n        // Require these APIs to feature detect a modern browser\n        hasVisibility() &&\n        hasPromises() &&\n        hasBlobSlice() &&\n        hasCreateObjectURL() &&\n        hasTiming() &&\n        // doesn't need CSSSupports but is a good way to detect Safari 9+ (we do want to support IE11 though)\n        (hasCSSSupports() || isIE11());\n\n    return () => isSupported;\n})();\n\n/**\n * Plugin internal state (over all instances)\n */\nconst state = {\n    // active app instances, used to redraw the apps and to find the later\n    apps: [],\n};\n\n// plugin name\nconst name = 'filepond';\n\n/**\n * Public Plugin methods\n */\nconst fn = () => {};\nlet Status$1 = {};\nlet FileStatus = {};\nlet FileOrigin$1 = {};\nlet OptionTypes = {};\nlet create$f = fn;\nlet destroy = fn;\nlet parse = fn;\nlet find = fn;\nlet registerPlugin = fn;\nlet getOptions$1 = fn;\nlet setOptions$1 = fn;\n\n// if not supported, no API\nif (supported()) {\n    // start painter and fire load event\n    createPainter(\n        () => {\n            state.apps.forEach(app => app._read());\n        },\n        ts => {\n            state.apps.forEach(app => app._write(ts));\n        }\n    );\n\n    // fire loaded event so we know when FilePond is available\n    const dispatch = () => {\n        // let others know we have area ready\n        document.dispatchEvent(\n            new CustomEvent('FilePond:loaded', {\n                detail: {\n                    supported,\n                    create: create$f,\n                    destroy,\n                    parse,\n                    find,\n                    registerPlugin,\n                    setOptions: setOptions$1,\n                },\n            })\n        );\n\n        // clean up event\n        document.removeEventListener('DOMContentLoaded', dispatch);\n    };\n\n    if (document.readyState !== 'loading') {\n        // move to back of execution queue, FilePond should have been exported by then\n        setTimeout(() => dispatch(), 0);\n    } else {\n        document.addEventListener('DOMContentLoaded', dispatch);\n    }\n\n    // updates the OptionTypes object based on the current options\n    const updateOptionTypes = () =>\n        forin(getOptions(), (key, value) => {\n            OptionTypes[key] = value[1];\n        });\n\n    Status$1 = { ...Status };\n    FileOrigin$1 = { ...FileOrigin };\n    FileStatus = { ...ItemStatus };\n\n    OptionTypes = {};\n    updateOptionTypes();\n\n    // create method, creates apps and adds them to the app array\n    create$f = (...args) => {\n        const app = createApp$1(...args);\n        app.on('destroy', destroy);\n        state.apps.push(app);\n        return createAppAPI(app);\n    };\n\n    // destroys apps and removes them from the app array\n    destroy = hook => {\n        // returns true if the app was destroyed successfully\n        const indexToRemove = state.apps.findIndex(app => app.isAttachedTo(hook));\n        if (indexToRemove >= 0) {\n            // remove from apps\n            const app = state.apps.splice(indexToRemove, 1)[0];\n\n            // restore original dom element\n            app.restoreElement();\n\n            return true;\n        }\n\n        return false;\n    };\n\n    // parses the given context for plugins (does not include the context element itself)\n    parse = context => {\n        // get all possible hooks\n        const matchedHooks = Array.from(context.querySelectorAll(`.${name}`));\n\n        // filter out already active hooks\n        const newHooks = matchedHooks.filter(\n            newHook => !state.apps.find(app => app.isAttachedTo(newHook))\n        );\n\n        // create new instance for each hook\n        return newHooks.map(hook => create$f(hook));\n    };\n\n    // returns an app based on the given element hook\n    find = hook => {\n        const app = state.apps.find(app => app.isAttachedTo(hook));\n        if (!app) {\n            return null;\n        }\n        return createAppAPI(app);\n    };\n\n    // adds a plugin extension\n    registerPlugin = (...plugins) => {\n        // register plugins\n        plugins.forEach(createAppPlugin);\n\n        // update OptionTypes, each plugin might have extended the default options\n        updateOptionTypes();\n    };\n\n    getOptions$1 = () => {\n        const opts = {};\n        forin(getOptions(), (key, value) => {\n            opts[key] = value[0];\n        });\n        return opts;\n    };\n\n    setOptions$1 = opts => {\n        if (isObject(opts)) {\n            // update existing plugins\n            state.apps.forEach(app => {\n                app.setOptions(opts);\n            });\n\n            // override defaults\n            setOptions(opts);\n        }\n\n        // return new options\n        return getOptions$1();\n    };\n}\n\nexport {\n    FileOrigin$1 as FileOrigin,\n    FileStatus,\n    OptionTypes,\n    Status$1 as Status,\n    create$f as create,\n    destroy,\n    find,\n    getOptions$1 as getOptions,\n    parse,\n    registerPlugin,\n    setOptions$1 as setOptions,\n    supported,\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8412, "column": 0}, "map": {"version":3,"sources":["file:///app/node_modules/react-filepond/dist/react-filepond.esm.js"],"sourcesContent":["/*!\n * react-filepond v7.1.3\n * A handy FilePond adapter component for React\n * \n * Copyright (c) 2024 PQINA\n * https://pqina.nl/filepond\n * \n * Licensed under the MIT license.\n */\n\nimport React, { createElement, useCallback } from \"react\";\n\n// Import required methods and styles from the FilePond module, should not need anything else\nimport { create, supported, registerPlugin, FileStatus } from \"filepond\";\n\n// We need to be able to call the registerPlugin method directly so we can add plugins\nexport { registerPlugin, FileStatus };\n\n// Do this once\nconst isSupported = supported();\n\n// filtered methods\nconst filteredMethods = [\n  \"setOptions\",\n  \"on\",\n  \"off\",\n  \"onOnce\",\n  \"appendTo\",\n  \"insertAfter\",\n  \"insertBefore\",\n  \"isAttachedTo\",\n  \"replaceElement\",\n  \"restoreElement\",\n  \"destroy\",\n];\n\n// The React <FilePond/> wrapper\nexport class FilePond extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allowFilesSync = true;\n  }\n\n  // Will setup FilePond instance when mounted\n  componentDidMount() {\n    // clone the input so we can restore it in unmount\n    this._input = this._element.querySelector('input[type=\"file\"]');\n    this._inputClone = this._input.cloneNode();\n\n    // exit here if not supported\n    if (!isSupported) return;\n\n    const options = Object.assign({}, this.props);\n\n    // if onupdate files is defined, make sure setFiles does not cause race condition\n    if (options.onupdatefiles) {\n      const cb = options.onupdatefiles;\n      options.onupdatefiles = (items) => {\n        this.allowFilesSync = false;\n        cb(items);\n      };\n    }\n\n    // Create our pond\n    this._pond = create(this._input, options);\n\n    // Reference pond methods to FilePond component instance\n    Object.keys(this._pond)\n      .filter((key) => !filteredMethods.includes(key))\n      .forEach((key) => {\n        this[key] = this._pond[key];\n      });\n  }\n\n  // Will clean up FilePond instance when unmounted\n  componentWillUnmount() {\n    // exit when no pond defined\n    if (!this._pond) return;\n\n    // This fixed <Strict> errors\n\n    // FilePond destroy is async so we have to move FilePond to a bin element so it can no longer affect current element tree as React unmount / mount is sync\n    const bin = document.createElement(\"div\");\n    bin.append(this._pond.element);\n    bin.id = \"foo\";\n\n    // now we call destroy so FilePond can start it's destroy logic\n    this._pond.destroy();\n    this._pond = undefined;\n\n    // we re-add the original file input element so everything is as it was before\n    this._element.append(this._inputClone);\n  }\n\n  shouldComponentUpdate() {\n    if (!this.allowFilesSync) {\n      this.allowFilesSync = true;\n      return false;\n    }\n    return true;\n  }\n\n  // Something changed\n  componentDidUpdate() {\n    // exit when no pond defined\n    if (!this._pond) return;\n\n    const options = Object.assign({}, this.props);\n\n    // this is only set onces, on didmount\n    delete options.onupdatefiles;\n\n    // update pond options based on new props\n    this._pond.setOptions(options);\n  }\n\n  // Renders basic element hook for FilePond to attach to\n  render() {\n    const {\n      id,\n      name,\n      className,\n      allowMultiple,\n      required,\n      captureMethod,\n      acceptedFileTypes,\n    } = this.props;\n    return createElement(\n      \"div\",\n      {\n        className: \"filepond--wrapper\",\n        ref: (element) => (this._element = element),\n      },\n      createElement(\"input\", {\n        type: \"file\",\n        name,\n        id,\n        accept: acceptedFileTypes,\n        multiple: allowMultiple,\n        required: required,\n        className: className,\n        capture: captureMethod,\n      })\n    );\n  }\n}\n\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;AAED;AAEA,6FAA6F;AAC7F;;;;AAKA,eAAe;AACf,MAAM,cAAc,CAAA,GAAA,mJAAA,CAAA,YAAS,AAAD;AAE5B,mBAAmB;AACnB,MAAM,kBAAkB;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAGM,MAAM,iBAAiB,qMAAA,CAAA,UAAK,CAAC,SAAS;IAC3C,YAAY,KAAK,CAAE;QACjB,KAAK,CAAC;QACN,IAAI,CAAC,cAAc,GAAG;IACxB;IAEA,4CAA4C;IAC5C,oBAAoB;QAClB,kDAAkD;QAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS;QAExC,6BAA6B;QAC7B,IAAI,CAAC,aAAa;QAElB,MAAM,UAAU,OAAO,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;QAE5C,iFAAiF;QACjF,IAAI,QAAQ,aAAa,EAAE;YACzB,MAAM,KAAK,QAAQ,aAAa;YAChC,QAAQ,aAAa,GAAG,CAAC;gBACvB,IAAI,CAAC,cAAc,GAAG;gBACtB,GAAG;YACL;QACF;QAEA,kBAAkB;QAClB,IAAI,CAAC,KAAK,GAAG,CAAA,GAAA,mJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,CAAC,MAAM,EAAE;QAEjC,wDAAwD;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EACnB,MAAM,CAAC,CAAC,MAAQ,CAAC,gBAAgB,QAAQ,CAAC,MAC1C,OAAO,CAAC,CAAC;YACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;QAC7B;IACJ;IAEA,iDAAiD;IACjD,uBAAuB;QACrB,4BAA4B;QAC5B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;QAEjB,6BAA6B;QAE7B,0JAA0J;QAC1J,MAAM,MAAM,SAAS,aAAa,CAAC;QACnC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;QAC7B,IAAI,EAAE,GAAG;QAET,+DAA+D;QAC/D,IAAI,CAAC,KAAK,CAAC,OAAO;QAClB,IAAI,CAAC,KAAK,GAAG;QAEb,8EAA8E;QAC9E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW;IACvC;IAEA,wBAAwB;QACtB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,cAAc,GAAG;YACtB,OAAO;QACT;QACA,OAAO;IACT;IAEA,oBAAoB;IACpB,qBAAqB;QACnB,4BAA4B;QAC5B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;QAEjB,MAAM,UAAU,OAAO,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;QAE5C,sCAAsC;QACtC,OAAO,QAAQ,aAAa;QAE5B,yCAAyC;QACzC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;IACxB;IAEA,uDAAuD;IACvD,SAAS;QACP,MAAM,EACJ,EAAE,EACF,IAAI,EACJ,SAAS,EACT,aAAa,EACb,QAAQ,EACR,aAAa,EACb,iBAAiB,EAClB,GAAG,IAAI,CAAC,KAAK;QACd,OAAO,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EACjB,OACA;YACE,WAAW;YACX,KAAK,CAAC,UAAa,IAAI,CAAC,QAAQ,GAAG;QACrC,GACA,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAE,SAAS;YACrB,MAAM;YACN;YACA;YACA,QAAQ;YACR,UAAU;YACV,UAAU;YACV,WAAW;YACX,SAAS;QACX;IAEJ;AACF","ignoreList":[0],"debugId":null}}]
}