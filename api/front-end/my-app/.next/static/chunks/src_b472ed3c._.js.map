{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/curation/components/ArticlesTable.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback, useEffect } from 'react';\nimport { CheckIcon, XMarkIcon, ClockIcon, ExclamationTriangleIcon } from '@heroicons/react/24/outline';\nimport { API_ENDPOINTS } from '../../../../lib/api';\n\ninterface Article {\n  id: number;\n  filename: string;\n  pubmed_id: number | null;\n  created_on: string;\n  modified_on: string;\n  curation_status: 'pending' | 'processing' | 'completed' | 'failed';\n  curation_error: string | null;\n  approximate_tokens: number;\n}\n\ninterface ArticlesTableProps {\n  articles: Article[];\n  selectedArticles: number[];\n  onSelectionChange: (selected: number[]) => void;\n  loading: boolean;\n  onStartCuration: () => void;\n  onErrorClick?: (articleId: number) => void;\n  onRetryClick?: (articleId: number) => void;\n  isPolling?: boolean;\n}\n\nexport function ArticlesTable({ \n  articles, \n  selectedArticles, \n  onSelectionChange, \n  loading,\n  onStartCuration,\n  onErrorClick,\n  onRetryClick,\n  isPolling = false\n}: ArticlesTableProps) {\n  const [sortConfig, setSortConfig] = useState<{\n    key: keyof Article;\n    direction: 'asc' | 'desc';\n  }>({\n    key: 'modified_on',\n    direction: 'desc'\n  });\n\n  const [retryingArticles, setRetryingArticles] = useState<Set<number>>(new Set());\n\n  // Note: Auto-refresh is handled by the parent component's polling hook\n\n  const handleSelectAll = useCallback(() => {\n    if (selectedArticles.length === articles.length) {\n      onSelectionChange([]);\n    } else {\n      const selectableArticles = articles\n        .filter(article => article.curation_status !== 'processing')\n        .slice(0, 20)\n        .map(article => article.id);\n      onSelectionChange(selectableArticles);\n    }\n  }, [articles, selectedArticles, onSelectionChange]);\n\n  const handleArticleSelect = useCallback((articleId: number) => {\n    const article = articles.find(a => a.id === articleId);\n    if (article?.curation_status === 'processing') return;\n\n    if (selectedArticles.includes(articleId)) {\n      onSelectionChange(selectedArticles.filter(id => id !== articleId));\n    } else if (selectedArticles.length < 20) {\n      onSelectionChange([...selectedArticles, articleId]);\n    }\n  }, [articles, selectedArticles, onSelectionChange]);\n\n  const handleRetry = useCallback(async (articleId: number) => {\n    if (!onRetryClick) return;\n    \n    setRetryingArticles(prev => new Set(prev).add(articleId));\n    \n    try {\n      await onRetryClick(articleId);\n      // No need to refresh - polling will handle updates\n    } catch (error) {\n      console.error('Retry failed:', error);\n    } finally {\n      setRetryingArticles(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(articleId);\n        return newSet;\n      });\n    }\n  }, [onRetryClick]);\n\n  const getStatusIndicator = (article: Article) => {\n    // Show processing icon if article is being retried (optimistic update)\n    if (retryingArticles.has(article.id)) {\n      return (\n        <ClockIcon className=\"h-4 w-4 text-blue-500 animate-pulse\" />\n      );\n    }\n    \n    switch (article.curation_status) {\n      case 'completed':\n        return (\n          <span className=\"inline-block w-4 h-4 rounded-full bg-green-200\" />\n        );\n      case 'pending':\n        return (\n          <span className=\"inline-block w-4 h-4 rounded-full bg-blue-200\" />\n        );\n      case 'failed':\n        return (\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => onErrorClick?.(article.id)}\n              className=\"flex items-center hover:bg-red-50 p-1 rounded transition-colors\"\n              title=\"Click to view error details\"\n            >\n              <ExclamationTriangleIcon className=\"h-4 w-4 text-red-500\" />\n            </button>\n            {onRetryClick && (\n              <button\n                onClick={() => handleRetry(article.id)}\n                disabled={retryingArticles.has(article.id)}\n                className=\"flex items-center hover:bg-blue-50 p-1 rounded transition-colors disabled:opacity-50\"\n                title=\"Retry curation\"\n              >\n                <span className=\"text-blue-600 text-xs font-medium\">↻</span>\n              </button>\n            )}\n          </div>\n        );\n      case 'processing':\n        return (\n          <ClockIcon className=\"h-4 w-4 text-blue-500 animate-pulse\" />\n        );\n      default:\n        return null;\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  };\n\n  const sortedArticles = [...articles].sort((a, b) => {\n    const aValue = a[sortConfig.key];\n    const bValue = b[sortConfig.key];\n    \n    // Handle null values\n    if (aValue === null && bValue === null) return 0;\n    if (aValue === null) return sortConfig.direction === 'asc' ? 1 : -1;\n    if (bValue === null) return sortConfig.direction === 'asc' ? -1 : 1;\n    \n    if (sortConfig.direction === 'asc') {\n      return aValue < bValue ? -1 : 1;\n    } else {\n      return aValue > bValue ? -1 : 1;\n    }\n  });\n\n  if (loading) {\n    return (\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-4 bg-gray-200 rounded w-1/4 mb-4\"></div>\n          <div className=\"space-y-3\">\n            {[...Array(5)].map((_, i) => (\n              <div key={i} className=\"h-4 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center space-x-4\">\n            <h2 className=\"text-lg font-medium text-gray-900\">Articles</h2>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <span className=\"text-sm text-gray-500\">\n              {selectedArticles.length} of {articles.length} selected\n              {selectedArticles.length > 0 && ` (max 20)`}\n            </span>\n            <button\n              onClick={onStartCuration}\n              disabled={selectedArticles.length === 0 || isPolling}\n              className={`px-4 py-2 rounded-md text-sm font-medium ${\n                selectedArticles.length > 0 && !isPolling\n                  ? 'bg-blue-600 text-white hover:bg-blue-700'\n                  : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              }`}\n            >\n              {isPolling ? 'Processing...' : 'Start Curation'}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-2 text-left\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedArticles.length === articles.length && articles.length > 0}\n                  onChange={handleSelectAll}\n                  className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                />\n              </th>\n              <th className=\"px-6 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Filename\n              </th>\n              <th className=\"px-6 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                PubMed ID\n              </th>\n              <th className=\"px-6 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Tokens\n              </th>\n              <th className=\"px-6 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Created\n              </th>\n              <th className=\"px-6 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Modified\n              </th>\n              <th className=\"px-6 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Status\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {sortedArticles.map((article) => (\n              <tr \n                key={article.id}\n                className={`hover:bg-gray-50 transition-colors ${\n                  selectedArticles.includes(article.id) ? 'bg-blue-50' : ''\n                } ${\n                  article.curation_status === 'processing' || retryingArticles.has(article.id) ? 'bg-blue-25' : ''\n                }`}\n              >\n                <td className=\"px-6 py-2 whitespace-nowrap\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedArticles.includes(article.id)}\n                    onChange={() => handleArticleSelect(article.id)}\n                    disabled={article.curation_status === 'processing' || retryingArticles.has(article.id)}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500 disabled:opacity-50\"\n                  />\n                </td>\n                <td className=\"px-6 py-2 whitespace-nowrap text-sm text-gray-900\">\n                  {article.filename}\n                </td>\n                <td className=\"px-6 py-2 whitespace-nowrap text-sm text-gray-900\">\n                  {article.pubmed_id || '-'}\n                </td>\n                <td className=\"px-6 py-2 whitespace-nowrap text-sm text-gray-900\">\n                  {article.approximate_tokens.toLocaleString()}\n                </td>\n                <td className=\"px-6 py-2 whitespace-nowrap text-sm text-gray-900\">\n                  {formatDate(article.created_on)}\n                </td>\n                <td className=\"px-6 py-2 whitespace-nowrap text-sm text-gray-900\">\n                  {formatDate(article.modified_on)}\n                </td>\n                <td className=\"px-6 py-2 whitespace-nowrap text-sm\">\n                  {getStatusIndicator(article)}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {articles.length === 0 && (\n        <div className=\"p-6 text-center text-gray-500\">\n          No articles available for curation.\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/curation/components/ErrorModal.tsx"],"sourcesContent":["'use client';\n\nimport { Fragment } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { XMarkIcon, ExclamationTriangleIcon } from '@heroicons/react/24/outline';\n\ninterface ErrorDetails {\n  article_id: number;\n  error_message: string;\n  curation_status: string;\n  failed_at: string;\n  filename?: string;\n  pubmed_id?: number | null;\n}\n\ninterface ErrorModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  errorDetails: ErrorDetails | null;\n  loading?: boolean;\n}\n\nexport function ErrorModal({ isOpen, onClose, errorDetails, loading = false }: ErrorModalProps) {\n  const categorizeError = (errorMessage: string) => {\n    const lowerError = errorMessage.toLowerCase();\n    \n    if (lowerError.includes('openai') || lowerError.includes('api key') || lowerError.includes('token limit')) {\n      return {\n        category: 'OpenAI API Error',\n        severity: 'high',\n        description: 'Issue with OpenAI API integration'\n      };\n    } else if (lowerError.includes('parsing') || lowerError.includes('json') || lowerError.includes('format')) {\n      return {\n        category: 'Data Processing Error',\n        severity: 'medium',\n        description: 'Issue with data parsing or formatting'\n      };\n    } else if (lowerError.includes('timeout') || lowerError.includes('connection')) {\n      return {\n        category: 'Network Error',\n        severity: 'medium',\n        description: 'Network connectivity issue'\n      };\n    } else {\n      return {\n        category: 'Application Error',\n        severity: 'low',\n        description: 'General application error'\n      };\n    }\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'high':\n        return 'text-red-600 bg-red-50 border-red-200';\n      case 'medium':\n        return 'text-yellow-600 bg-yellow-50 border-yellow-200';\n      case 'low':\n        return 'text-blue-600 bg-blue-50 border-blue-200';\n      default:\n        return 'text-gray-600 bg-gray-50 border-gray-200';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  return (\n    <Transition.Root show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n          <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n              enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n              leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            >\n              <Dialog.Panel className=\"relative transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-2xl sm:p-6\">\n                <div className=\"absolute right-0 top-0 hidden pr-4 pt-4 sm:block\">\n                  <button\n                    type=\"button\"\n                    className=\"rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n                    onClick={onClose}\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n\n                {loading ? (\n                  <div className=\"flex items-center justify-center py-8\">\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                    <span className=\"ml-3 text-gray-600\">Loading error details...</span>\n                  </div>\n                ) : errorDetails ? (\n                  <div>\n                    <div className=\"flex items-center\">\n                      <div className=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                        <ExclamationTriangleIcon className=\"h-6 w-6 text-red-600\" aria-hidden=\"true\" />\n                      </div>\n                      <div className=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\">\n                        <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-gray-900\">\n                          Curation Error Details\n                        </Dialog.Title>\n                      </div>\n                    </div>\n\n                    <div className=\"mt-6 space-y-6\">\n                      {/* Article Information */}\n                      <div className=\"bg-gray-50 rounded-lg p-4\">\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Article Information</h4>\n                        <dl className=\"grid grid-cols-1 gap-x-4 gap-y-2 text-sm\">\n                          <div>\n                            <dt className=\"font-medium text-gray-500\">Article ID:</dt>\n                            <dd className=\"text-gray-900\">{errorDetails.article_id}</dd>\n                          </div>\n                          {errorDetails.filename && (\n                            <div>\n                              <dt className=\"font-medium text-gray-500\">Filename:</dt>\n                              <dd className=\"text-gray-900\">{errorDetails.filename}</dd>\n                            </div>\n                          )}\n                          {errorDetails.pubmed_id && (\n                            <div>\n                              <dt className=\"font-medium text-gray-500\">PubMed ID:</dt>\n                              <dd className=\"text-gray-900\">{errorDetails.pubmed_id}</dd>\n                            </div>\n                          )}\n                          <div>\n                            <dt className=\"font-medium text-gray-500\">Failed At:</dt>\n                            <dd className=\"text-gray-900\">{formatDate(errorDetails.failed_at)}</dd>\n                          </div>\n                        </dl>\n                      </div>\n\n                      {/* Error Categorization */}\n                      {(() => {\n                        const errorInfo = categorizeError(errorDetails.error_message);\n                        return (\n                          <div className={`rounded-lg p-4 border ${getSeverityColor(errorInfo.severity)}`}>\n                            <h4 className=\"text-sm font-medium mb-2\">Error Category</h4>\n                            <p className=\"text-sm font-medium\">{errorInfo.category}</p>\n                            <p className=\"text-sm mt-1\">{errorInfo.description}</p>\n                          </div>\n                        );\n                      })()}\n\n                      {/* Error Message */}\n                      <div>\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Error Message</h4>\n                        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                          <pre className=\"text-sm text-red-800 whitespace-pre-wrap font-mono\">\n                            {errorDetails.error_message}\n                          </pre>\n                        </div>\n                      </div>\n\n                      {/* Troubleshooting Tips */}\n                      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                        <h4 className=\"text-sm font-medium text-blue-900 mb-2\">Troubleshooting Tips</h4>\n                        <ul className=\"text-sm text-blue-800 space-y-1\">\n                          <li>• Check if the article content is properly formatted</li>\n                          <li>• Verify that the transcription process completed successfully</li>\n                          <li>• Contact support if the error persists</li>\n                          <li>• You can retry curation once the issue is resolved</li>\n                        </ul>\n                      </div>\n                    </div>\n\n                    <div className=\"mt-6 flex justify-end space-x-3\">\n                      <button\n                        type=\"button\"\n                        className=\"rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n                        onClick={onClose}\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-8\">\n                    <p className=\"text-gray-500\">No error details available.</p>\n                  </div>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1052, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/ErrorBoundary.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('Editor Error Boundary caught an error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-6 m-4\">\n          <div className=\"flex items-center mb-4\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">\n                Editor Error\n              </h3>\n              <div className=\"mt-2 text-sm text-red-700\">\n                <p>Something went wrong with the cell line editor. Please refresh the page or contact support if the problem persists.</p>\n                {process.env.NODE_ENV === 'development' && this.state.error && (\n                  <details className=\"mt-2\">\n                    <summary className=\"cursor-pointer\">Technical Details</summary>\n                    <pre className=\"mt-2 text-xs bg-red-100 p-2 rounded overflow-x-auto\">\n                      {this.state.error.stack}\n                    </pre>\n                  </details>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"flex\">\n            <button\n              onClick={() => this.setState({ hasError: false })}\n              className=\"bg-red-100 hover:bg-red-200 text-red-800 text-sm font-medium py-2 px-4 rounded transition-colors\"\n            >\n              Try Again\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n} "],"names":[],"mappings":";;;AA2CiB;;AAzCjB;AAFA;;;AAaO,MAAM,sBAAsB,6JAAA,CAAA,UAAK,CAAC,SAAS;IAChD,YAAY,KAAY,CAAE;QACxB,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YAAE,UAAU;QAAM;IACjC;IAEA,OAAO,yBAAyB,KAAY,EAAS;QACnD,OAAO;YAAE,UAAU;YAAM;QAAM;IACjC;IAEA,kBAAkB,KAAY,EAAE,SAA0B,EAAE;QAC1D,QAAQ,KAAK,CAAC,0CAA0C,OAAO;IACjE;IAEA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvB,qBACE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;oCAAuB,SAAQ;oCAAY,MAAK;8CAC7D,cAAA,6LAAC;wCAAK,UAAS;wCAAU,GAAE;wCAA0N,UAAS;;;;;;;;;;;;;;;;0CAGlQ,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAmC;;;;;;kDAGjD,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;0DAAE;;;;;;4CACF,oDAAyB,iBAAiB,IAAI,CAAC,KAAK,CAAC,KAAK,kBACzD,6LAAC;gDAAQ,WAAU;;kEACjB,6LAAC;wDAAQ,WAAU;kEAAiB;;;;;;kEACpC,6LAAC;wDAAI,WAAU;kEACZ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAOnC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,SAAS,IAAM,IAAI,CAAC,QAAQ,CAAC;oCAAE,UAAU;gCAAM;4BAC/C,WAAU;sCACX;;;;;;;;;;;;;;;;;QAMT;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;AACF","debugId":null}},
    {"offset": {"line": 1211, "column": 0}, "map": {"version":3,"sources":["file:///app/src/lib/api.ts"],"sourcesContent":["const isDev = process.env.NODE_ENV === 'development';\n\nconst API_BASE_URL = isDev\n  ? 'http://localhost:8000'\n  : process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\nexport const API_ENDPOINTS = {\n  // Curation endpoints\n  CURATION: {\n    BASE: `${API_BASE_URL}/api/curation`,\n    ARTICLES: `${API_BASE_URL}/api/curation/articles/`,\n    STATUS: `${API_BASE_URL}/api/curation/status/`,\n    BULK_CURATE: `${API_BASE_URL}/api/curation/bulk_curate/`,\n    ERROR_DETAILS: (articleId: number) => `${API_BASE_URL}/api/curation/${articleId}/error_details/`,\n    RETRY: (articleId: number) => `${API_BASE_URL}/api/curation/${articleId}/retry/`,\n    CELLLINES: (articleId: number) => `${API_BASE_URL}/api/curation/${articleId}/celllines/`,\n    SAVE_CELLLINE: (celllineId: string) => `${API_BASE_URL}/api/curation/celllines/${celllineId}/`,\n  },\n  // Editor endpoints (for reference)\n  EDITOR: {\n    CELLLINES: `${API_BASE_URL}/api/editor/celllines/`,\n    CELLLINE: (id: string) => `${API_BASE_URL}/api/editor/celllines/${id}/`,\n    SCHEMA: `${API_BASE_URL}/api/editor/cellline-schema/`,\n    NEW_TEMPLATE: `${API_BASE_URL}/api/editor/celllines/new_template/`,\n    VERSIONS: (id: string) => `${API_BASE_URL}/api/editor/celllines/${id}/versions/`,\n    VERSION: (id: string, version: string) => `${API_BASE_URL}/api/editor/celllines/${id}/versions/${version}/`,\n  },\n  // Transcription endpoints\n  TRANSCRIPTION: {\n    ARTICLES: `${API_BASE_URL}/api/articles/`,\n    CREATE_ARTICLE: `${API_BASE_URL}/api/transcription/create_article/`,\n  },\n};\n\nexport default API_ENDPOINTS; "],"names":[],"mappings":";;;;AAAc;AAAd,MAAM,QAAQ,oDAAyB;AAEvC,MAAM,eAAe,uCACjB;AAGG,MAAM,gBAAgB;IAC3B,qBAAqB;IACrB,UAAU;QACR,MAAM,GAAG,aAAa,aAAa,CAAC;QACpC,UAAU,GAAG,aAAa,uBAAuB,CAAC;QAClD,QAAQ,GAAG,aAAa,qBAAqB,CAAC;QAC9C,aAAa,GAAG,aAAa,0BAA0B,CAAC;QACxD,eAAe,CAAC,YAAsB,GAAG,aAAa,cAAc,EAAE,UAAU,eAAe,CAAC;QAChG,OAAO,CAAC,YAAsB,GAAG,aAAa,cAAc,EAAE,UAAU,OAAO,CAAC;QAChF,WAAW,CAAC,YAAsB,GAAG,aAAa,cAAc,EAAE,UAAU,WAAW,CAAC;QACxF,eAAe,CAAC,aAAuB,GAAG,aAAa,wBAAwB,EAAE,WAAW,CAAC,CAAC;IAChG;IACA,mCAAmC;IACnC,QAAQ;QACN,WAAW,GAAG,aAAa,sBAAsB,CAAC;QAClD,UAAU,CAAC,KAAe,GAAG,aAAa,sBAAsB,EAAE,GAAG,CAAC,CAAC;QACvE,QAAQ,GAAG,aAAa,4BAA4B,CAAC;QACrD,cAAc,GAAG,aAAa,mCAAmC,CAAC;QAClE,UAAU,CAAC,KAAe,GAAG,aAAa,sBAAsB,EAAE,GAAG,UAAU,CAAC;QAChF,SAAS,CAAC,IAAY,UAAoB,GAAG,aAAa,sBAAsB,EAAE,GAAG,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC7G;IACA,0BAA0B;IAC1B,eAAe;QACb,UAAU,GAAG,aAAa,cAAc,CAAC;QACzC,gBAAgB,GAAG,aAAa,kCAAkC,CAAC;IACrE;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 1255, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/curation/hooks/useStatusPolling.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react';\nimport { API_ENDPOINTS } from '../../../../lib/api';\n\ninterface Article {\n  id: number;\n  filename: string;\n  pubmed_id: number | null;\n  created_on: string;\n  modified_on: string;\n  curation_status: 'pending' | 'processing' | 'completed' | 'failed';\n  curation_error: string | null;\n  curation_started_at: string | null;\n  transcription_status: string;\n  is_curated: boolean;\n  approximate_tokens: number;\n}\n\ninterface StatusResponse {\n  articles: Article[];\n  total_count: number;\n  processing_count: number;\n  completed_count: number;\n  failed_count: number;\n}\n\nexport function useStatusPolling(\n  initialArticles: Article[],\n  isPolling: boolean = false,\n  pollInterval: number = 3000\n) {\n  const [articles, setArticles] = useState<Article[]>(initialArticles);\n  const [status, setStatus] = useState<StatusResponse | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const pollingRef = useRef<NodeJS.Timeout | null>(null);\n  const abortControllerRef = useRef<AbortController | null>(null);\n\n  // Sync internal articles state when initialArticles changes\n  useEffect(() => {\n    setArticles(initialArticles);\n  }, [initialArticles]);\n\n  const fetchStatus = useCallback(async (showLoading: boolean = true) => {\n    try {\n      if (showLoading) {\n        setLoading(true);\n      }\n      setError(null);\n      \n      // Cancel previous request if still pending\n      if (abortControllerRef.current) {\n        abortControllerRef.current.abort();\n      }\n      \n      abortControllerRef.current = new AbortController();\n      \n      const response = await fetch(API_ENDPOINTS.CURATION.STATUS, {\n        signal: abortControllerRef.current.signal,\n        headers: {\n          'Cache-Control': 'no-cache',\n          'Pragma': 'no-cache'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data: StatusResponse = await response.json();\n      setArticles(data.articles);\n      setStatus(data);\n    } catch (err) {\n      if (err instanceof Error && err.name === 'AbortError') {\n        // Request was cancelled, ignore\n        return;\n      }\n      setError(err instanceof Error ? err.message : 'Failed to fetch status');\n    } finally {\n      if (showLoading) {\n        setLoading(false);\n      }\n    }\n  }, []);\n\n  // Background fetch without loading state for seamless updates\n  const fetchStatusSilent = useCallback(() => {\n    fetchStatus(false);\n  }, [fetchStatus]);\n\n  const startPolling = useCallback(() => {\n    if (pollingRef.current) {\n      clearInterval(pollingRef.current);\n    }\n    \n    // Initial fetch with loading indicator\n    fetchStatus();\n    \n    // Start silent polling for seamless updates\n    pollingRef.current = setInterval(fetchStatusSilent, pollInterval);\n  }, [fetchStatus, fetchStatusSilent, pollInterval]);\n\n  const stopPolling = useCallback(() => {\n    if (pollingRef.current) {\n      clearInterval(pollingRef.current);\n      pollingRef.current = null;\n    }\n    \n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isPolling) {\n      startPolling();\n    } else {\n      stopPolling();\n    }\n\n    return () => {\n      stopPolling();\n    };\n  }, [isPolling, startPolling, stopPolling]);\n\n  // Manual refresh function with loading indicator\n  const refresh = useCallback(() => {\n    fetchStatus(true);\n  }, [fetchStatus]);\n\n  return {\n    articles,\n    status,\n    loading,\n    error,\n    refresh,\n    startPolling,\n    stopPolling\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1398, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/hooks/useCellLineData.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { CellLineData, CellLineTemplate } from '../types/editor';\nimport { API_ENDPOINTS } from '../../../../lib/api';\n\nexport function useCellLineData() {\n  const [cellLines, setCellLines] = useState<CellLineTemplate[]>([]);\n  const [selectedCellLine, setSelectedCellLine] = useState<CellLineData | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Fetch list of available cell lines\n  const fetchCellLines = useCallback(async (curationSource?: string) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      let allCellLines: any[] = [];\n      let url: string | null = API_ENDPOINTS.EDITOR.CELLLINES;\n      \n      // Add curation source filter to URL if provided\n      if (curationSource) {\n        url += `?curation_source=${encodeURIComponent(curationSource)}`;\n      }\n      \n      // Fetch all pages of cell lines\n      while (url) {\n        const response: Response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch cell lines: ${response.statusText}`);\n        }\n        \n        const data: any = await response.json();\n        \n        // If it's a paginated response\n        if (data.results) {\n          allCellLines = [...allCellLines, ...data.results];\n          url = data.next; // Get next page URL\n        } else {\n          // If it's a direct array response\n          allCellLines = data;\n          url = null;\n        }\n      }\n      \n      setCellLines(allCellLines);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch cell lines');\n      console.error('Error fetching cell lines:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Fetch specific cell line by ID\n  const fetchCellLine = useCallback(async (id: string) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(API_ENDPOINTS.EDITOR.CELLLINE(id));\n      if (!response.ok) {\n        throw new Error(`Failed to fetch cell line: ${response.statusText}`);\n      }\n      \n      const responseData = await response.json();\n      // Extract the actual cell line data from the response\n      const cellLineData = responseData.data || responseData;\n      \n      // Ensure the id field is set for the frontend to use\n      if (cellLineData && !cellLineData.id && cellLineData.CellLine_hpscreg_id) {\n        cellLineData.id = cellLineData.CellLine_hpscreg_id;\n      }\n      \n      setSelectedCellLine(cellLineData);\n      return cellLineData;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch cell line');\n      console.error('Error fetching cell line:', err);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Save cell line changes\n  const saveCellLine = useCallback(async (id: string, data: Partial<CellLineData>) => {\n    setIsLoading(true);\n    // Don't set global error state here - let the component handle save errors\n    \n    try {\n      // Clean the data before sending - provide defaults for required fields that are empty\n      const cleanedData = { ...data };\n      \n      // Handle required fields that cannot be blank\n      const requiredFields = [\n        'CellLine_source_cell_type',\n        'CellLine_source_tissue', \n        'CellLine_source'\n      ];\n      \n      requiredFields.forEach(field => {\n        if (cleanedData[field] === '' || cleanedData[field] === null || cleanedData[field] === undefined) {\n          cleanedData[field] = 'Unknown'; // Provide a default value\n        }\n      });\n      \n      const response = await fetch(API_ENDPOINTS.EDITOR.CELLLINE(id), {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(cleanedData),\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to save cell line: ${response.statusText} - ${errorText}`);\n      }\n      \n      const responseData = await response.json();\n      // Extract the actual cell line data from the enhanced save response\n      const cellLineData = responseData.data || responseData;\n      \n      // Ensure the id field is set for the frontend to use\n      if (cellLineData && !cellLineData.id && cellLineData.CellLine_hpscreg_id) {\n        cellLineData.id = cellLineData.CellLine_hpscreg_id;\n      }\n      \n      setSelectedCellLine(cellLineData);\n      \n      // Return the full response data so components can access version_info, performance, etc.\n      return responseData;\n    } catch (err) {\n      // Don't set error state for save failures - let component handle them\n      console.error('Error saving cell line:', err);\n      throw err; // Re-throw so component can catch and handle\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Get new template\n  const getNewTemplate = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(API_ENDPOINTS.EDITOR.NEW_TEMPLATE);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch template: ${response.statusText}`);\n      }\n      \n      const responseData = await response.json();\n      // Extract the template data from the response\n      const templateData = responseData.template || responseData;\n      setSelectedCellLine(templateData);\n      return templateData;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch template');\n      console.error('Error fetching template:', err);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchCellLines();\n  }, [fetchCellLines]);\n\n  return {\n    cellLines,\n    selectedCellLine,\n    isLoading,\n    error,\n    fetchCellLine,\n    saveCellLine,\n    getNewTemplate,\n    refetch: fetchCellLines,\n    setSelectedCellLine, // Export the setter for local updates\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1588, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/hooks/useSchemaData.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { FieldSchema } from '../types/editor';\n\nexport function useSchemaData() {\n  const [schema, setSchema] = useState<FieldSchema | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchSchema = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch('http://localhost:8000/api/editor/cellline-schema/');\n      if (!response.ok) {\n        throw new Error(`Failed to fetch schema: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      // Extract the fields from the schema response\n      setSchema(data.schema?.fields || data);\n      return data;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch schema');\n      console.error('Error fetching schema:', err);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchSchema();\n  }, [fetchSchema]);\n\n  return {\n    schema,\n    isLoading,\n    error,\n    refetch: fetchSchema,\n  };\n} "],"names":[],"mappings":";;;AAEA;;AAFA;;AAKO,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IACzD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAAE;YAC9B,aAAa;YACb,SAAS;YAET,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,SAAS,UAAU,EAAE;gBAClE;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,8CAA8C;gBAC9C,UAAU,KAAK,MAAM,EAAE,UAAU;gBACjC,OAAO;YACT,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAC9C,QAAQ,KAAK,CAAC,0BAA0B;gBACxC,OAAO;YACT,SAAU;gBACR,aAAa;YACf;QACF;iDAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR;QACF;kCAAG;QAAC;KAAY;IAEhB,OAAO;QACL;QACA;QACA;QACA,SAAS;IACX;AACF;GAtCgB","debugId":null}},
    {"offset": {"line": 1646, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/ModalValueEditor.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\n\ninterface FieldSchema {\n  type: 'CharField' | 'JSONField' | 'IntegerField' | 'BooleanField';\n  required: boolean;\n  max_length?: number;\n  choices?: string[];\n  json_schema?: any;\n  help_text?: string;\n}\n\ninterface ModalValueEditorProps {\n  isOpen: boolean;\n  fieldName: string;\n  value: any;\n  fieldSchema?: FieldSchema;\n  onSave: (newValue: any) => void;\n  onCancel: () => void;\n}\n\nexport default function ModalValueEditor({\n  isOpen,\n  fieldName,\n  value,\n  fieldSchema,\n  onSave,\n  onCancel\n}: ModalValueEditorProps) {\n  const [editValue, setEditValue] = useState(value?.toString() || '');\n  const [error, setError] = useState<string | null>(null);\n  const inputRef = useRef<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>(null);\n\n  // Reset state when modal opens with new value\n  useEffect(() => {\n    if (isOpen) {\n      setEditValue(value?.toString() || '');\n      setError(null);\n    }\n  }, [isOpen, value]);\n\n  // Focus input when modal opens\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      // Small delay to ensure modal is fully rendered\n      const timer = setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n          // Position cursor at the end instead of selecting all text\n          if ('setSelectionRange' in inputRef.current) {\n            const length = inputRef.current.value.length;\n            inputRef.current.setSelectionRange(length, length);\n          }\n        }\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [isOpen]);\n\n  // Handle escape key\n  useEffect(() => {\n    if (!isOpen) return;\n\n    const handleEscapeKey = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onCancel();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKey);\n    return () => document.removeEventListener('keydown', handleEscapeKey);\n  }, [isOpen, onCancel]);\n\n  const validateValue = (val: string): string | null => {\n    if (!fieldSchema) return null;\n\n    if (fieldSchema.required && val.trim() === '') {\n      return 'This field is required';\n    }\n\n    if (fieldSchema.max_length && val.length > fieldSchema.max_length) {\n      return `Maximum length is ${fieldSchema.max_length} characters`;\n    }\n\n    if (fieldSchema.type === 'IntegerField') {\n      const num = parseInt(val, 10);\n      if (isNaN(num)) {\n        return 'Must be a valid integer';\n      }\n    }\n\n    return null;\n  };\n\n  const handleSave = () => {\n    const validationError = validateValue(editValue);\n    if (validationError) {\n      setError(validationError);\n      return;\n    }\n\n    let processedValue: any = editValue;\n\n    // Convert value based on field type\n    if (fieldSchema) {\n      switch (fieldSchema.type) {\n        case 'IntegerField':\n          processedValue = parseInt(editValue, 10);\n          break;\n        case 'BooleanField':\n          processedValue = editValue === 'true' || editValue === '1';\n          break;\n        case 'JSONField':\n          try {\n            processedValue = JSON.parse(editValue);\n          } catch {\n            setError('Invalid JSON format');\n            return;\n          }\n          break;\n        default:\n          processedValue = editValue;\n      }\n    }\n\n    onSave(processedValue);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSave();\n    }\n    // Escape is handled by the document listener\n  };\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onCancel();\n    }\n  };\n\n  const renderEditor = () => {\n    if (fieldSchema?.choices && fieldSchema.choices.length > 0) {\n      // Select dropdown for choice fields\n      return (\n        <select\n          ref={inputRef as React.RefObject<HTMLSelectElement>}\n          value={editValue}\n          onChange={(e) => setEditValue(e.target.value)}\n          onKeyDown={handleKeyDown}\n          className=\"w-full border border-gray-300 rounded-lg px-4 py-3 text-xs focus:outline-none\"\n        >\n          <option value=\"\">Select...</option>\n          {fieldSchema.choices.map((choice) => (\n            <option key={choice} value={choice}>\n              {choice}\n            </option>\n          ))}\n        </select>\n      );\n    }\n\n    if (fieldSchema?.type === 'BooleanField') {\n      // Boolean toggle\n      return (\n        <select\n          ref={inputRef as React.RefObject<HTMLSelectElement>}\n          value={editValue}\n          onChange={(e) => setEditValue(e.target.value)}\n          onKeyDown={handleKeyDown}\n          className=\"w-full border border-gray-300 rounded-lg px-4 py-3 text-xs focus:outline-none\"\n        >\n          <option value=\"true\">True</option>\n          <option value=\"false\">False</option>\n        </select>\n      );\n    }\n\n    if (fieldSchema?.type === 'JSONField' || (editValue && editValue.includes('\\n'))) {\n      // Textarea for multiline content\n      return (\n        <textarea\n          ref={inputRef as React.RefObject<HTMLTextAreaElement>}\n          value={editValue}\n          onChange={(e) => setEditValue(e.target.value)}\n          onKeyDown={handleKeyDown}\n          className=\"w-full border border-gray-300 rounded-lg px-4 py-3 text-xs focus:outline-none resize-none\"\n          rows={Math.min(Math.max(editValue.split('\\n').length + 1, 5), 12)}\n          placeholder=\"Enter value...\"\n        />\n      );\n    }\n\n    // Default text input - use textarea for better visibility of long content\n    return (\n      <textarea\n        ref={inputRef as React.RefObject<HTMLTextAreaElement>}\n        value={editValue}\n        onChange={(e) => setEditValue(e.target.value)}\n        onKeyDown={handleKeyDown}\n        className=\"w-full border border-gray-300 rounded-lg px-4 py-3 text-xs focus:outline-none resize-none\"\n        rows={3}\n        maxLength={fieldSchema?.max_length}\n        placeholder=\"Enter value...\"\n      />\n    );\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      className=\"fixed inset-0 flex items-center justify-center z-50\"\n      onClick={handleBackdropClick}\n    >\n      <div className=\"bg-white rounded-lg shadow-xl max-w-lg w-full mx-4\">\n        {/* Header */}\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">\n            {fieldName}\n          </h3>\n          {fieldSchema?.help_text && (\n            <p className=\"text-sm text-gray-600 mt-1\">{fieldSchema.help_text}</p>\n          )}\n        </div>\n\n        {/* Content */}\n        <div className=\"px-6 py-4\">\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Value\n              </label>\n              {renderEditor()}\n              {error && (\n                <div className=\"mt-2 text-sm text-red-600\">\n                  {error}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"px-6 py-4 border-t border-gray-200 bg-gray-50 rounded-b-lg\">\n          <div className=\"text-xs text-gray-500 text-center\">\n            Press <kbd className=\"bg-gray-200 px-1 rounded\">Enter</kbd> to save • <kbd className=\"bg-gray-200 px-1 rounded\">Esc</kbd> to cancel\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2003, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/EditorLine.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { DisplayLine, FieldSchema } from '../types/editor';\nimport ModalValueEditor from './ModalValueEditor';\n\ninterface EditorLineProps {\n  line: DisplayLine;\n  schema: FieldSchema;\n  isEditing: boolean;\n  onToggleCollapse: () => void;\n  onStartEdit: () => void;\n  onCancelEdit: () => void;\n  onUpdateValue: (fieldPath: string[], newValue: any) => void;\n  onAddItem?: () => void;\n}\n\nexport default function EditorLine({\n  line,\n  schema,\n  isEditing,\n  onToggleCollapse,\n  onStartEdit,\n  onCancelEdit,\n  onUpdateValue,\n  onAddItem\n}: EditorLineProps) {\n  const [hovering, setHovering] = useState(false);\n\n  const getFieldSchema = () => {\n    const fieldName = line.fieldPath[0];\n    return schema?.[fieldName] || null;\n  };\n\n  const getSyntaxHighlighting = () => {\n    const fieldSchema = getFieldSchema();\n    const value = line.value;\n\n    // Type-based highlighting\n    if (fieldSchema?.type === 'BooleanField') {\n      return 'text-purple-600 font-medium'; // Purple for booleans\n    }\n    \n    if (fieldSchema?.type === 'IntegerField') {\n      return 'text-orange-600 font-medium'; // Orange for numbers\n    }\n    \n    if (Array.isArray(value)) {\n      return 'text-green-600'; // Green for arrays\n    }\n    \n    if (typeof value === 'object' && value !== null) {\n      return 'text-indigo-600'; // Indigo for objects\n    }\n    \n    // Default for strings and other types\n    return 'text-gray-900';\n  };\n\n  const handleValueClick = () => {\n    if (line.isEditable && !isEditing) {\n      onStartEdit();\n    }\n  };\n\n  const handleCollapseClick = () => {\n    if (line.isCollapsible) {\n      onToggleCollapse();\n    }\n  };\n\n  const renderLineContent = () => {\n    const parts = line.displayText.split(': ');\n    const fieldPart = parts[0];\n    const valuePart = parts.slice(1).join(': ');\n\n    if (line.type === 'array_control') {\n      return (\n        <div \n          className=\"flex items-center text-green-600 cursor-pointer hover:text-green-800\"\n          title=\"Add new item to array\"\n          onClick={onAddItem}\n        >\n          <span>{line.displayText}</span>\n        </div>\n      );\n    }\n\n    if (line.isCollapsible) {\n      return (\n        <div className=\"flex items-center\">\n          <button\n            onClick={handleCollapseClick}\n            className=\"mr-2 text-gray-500 hover:text-gray-700 flex-shrink-0\"\n          >\n            {line.isCollapsed ? '▶' : '▼'}\n          </button>\n          <span className=\"text-blue-800 font-medium\">{fieldPart}:</span>\n        </div>\n      );\n    }\n\n    if (line.isEditable && valuePart !== undefined) {\n      return (\n        <div className=\"flex items-center\">\n          <span className=\"text-blue-800 font-medium mr-1\">{fieldPart}:</span>\n          <span\n            onClick={handleValueClick}\n            className={`cursor-pointer px-1 rounded border max-w-md truncate inline-block ${\n              hovering\n                ? 'bg-blue-50 border-blue-200 text-blue-900'\n                : 'hover:bg-gray-50 border-transparent'\n            } ${\n              valuePart.trim() === ''\n                ? 'text-gray-400 italic'\n                : getSyntaxHighlighting()\n            }`}\n            onMouseEnter={() => setHovering(true)}\n            onMouseLeave={() => setHovering(false)}\n            title={valuePart.trim() === '' ? '(empty)' : valuePart}\n          >\n            {valuePart.trim() === '' ? '(empty)' : valuePart}\n          </span>\n          <ModalValueEditor\n            isOpen={isEditing}\n            fieldName={fieldPart}\n            value={line.value}\n            fieldSchema={getFieldSchema()}\n            onSave={(newValue: any) => {\n              console.log('🟡 EditorLine onSave called, fieldPath:', line.fieldPath, 'newValue:', newValue);\n              onUpdateValue(line.fieldPath, newValue);\n            }}\n            onCancel={onCancelEdit}\n          />\n        </div>\n      );\n    }\n\n    return <span className=\"text-gray-800\">{line.displayText}</span>;\n  };\n\n  return (\n    <div className=\"flex items-center\">\n      {/* Line Number */}\n      <div className=\"w-12 text-right text-xs text-gray-500 bg-gray-50 border-r border-gray-200 py-1 px-2 select-none\">\n        {line.lineNumber}\n      </div>\n\n      {/* Line Content */}\n      <div className=\"flex-1 py-1 px-3 min-h-[28px] flex items-center hover:bg-gray-50 border-l-2 border-transparent hover:border-blue-200 transition-colors\">\n        <div style={{ paddingLeft: `${line.indentLevel * 32}px` }}>\n          {renderLineContent()}\n        </div>\n      </div>\n\n      {/* Validation Indicator */}\n      {line.validation && (\n        <div className=\"px-2\">\n          <span\n            className={`text-sm ${\n              line.validation.type === 'error' ? 'text-red-500' : 'text-yellow-500'\n            }`}\n            title={line.validation.message}\n          >\n            {line.validation.type === 'error' ? '🔴' : '⚠️'}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2225, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/CustomCellLineEditor.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useCellLineData } from '../hooks/useCellLineData';\nimport { useSchemaData } from '../hooks/useSchemaData';\nimport { ErrorBoundary } from './ErrorBoundary';\nimport { DisplayLine, CellLineData, FieldSchema } from '../types/editor';\nimport EditorLine from './EditorLine';\n// import EditorLine from './EditorLine';\n\n// Parse JSON data to display lines\nfunction parseDataToLines(data: any, schema: FieldSchema, path: string[] = [], indentLevel: number = 0, globalLineNumber: { current: number } = { current: 1 }): DisplayLine[] {\n  const lines: DisplayLine[] = [];\n\n  function addLine(\n    type: DisplayLine['type'],\n    fieldPath: string[],\n    displayText: string,\n    value: any,\n    isCollapsible: boolean = false,\n    isEditable: boolean = false,\n    customIndentLevel?: number\n  ): DisplayLine {\n    const line: DisplayLine = {\n      lineNumber: globalLineNumber.current++,\n      type,\n      fieldPath,\n      displayText,\n      isCollapsible,\n      isCollapsed: true,\n      isEditable,\n      value,\n      indentLevel: customIndentLevel !== undefined ? customIndentLevel : indentLevel,\n    };\n    lines.push(line);\n    return line;\n  }\n\n  if (typeof data === 'object' && data !== null) {\n    Object.entries(data).forEach(([key, value]) => {\n      const currentPath = [...path, key];\n      const indent = '  '.repeat(indentLevel);\n      const fieldSchema = schema[key];\n\n      if (Array.isArray(value)) {\n        // Array field - always expand arrays to show contents (even if empty)\n        const arrayLine = addLine('object', currentPath, `${key}`, value, true, false, indentLevel);\n        arrayLine.isCollapsed = false; // Always expand arrays to show their contents\n        value.forEach((item, index) => {\n          const itemPath = [...currentPath, index.toString()];\n          if (typeof item === 'object' && item !== null) {\n            addLine('array_item', itemPath, `${index}:`, item, true, false, indentLevel + 1);\n            lines.push(...parseDataToLines(item, schema, itemPath, indentLevel + 2, globalLineNumber));\n          } else {\n            addLine('array_item', itemPath, `${index}: ${item}`, item, false, true, indentLevel + 1);\n          }\n        });\n        // Add control to add new items\n        addLine('array_control', [...currentPath, 'add'], `➕ Add Item`, null, false, false, indentLevel + 1);\n      } else if (typeof value === 'object' && value !== null) {\n        // Nested object\n        addLine('object', currentPath, `${key}`, value, true, false, indentLevel);\n        lines.push(...parseDataToLines(value, schema, currentPath, indentLevel + 1, globalLineNumber));\n      } else {\n        // Simple field\n        const displayValue = value === null || value === undefined ? '' : String(value);\n        addLine('field', currentPath, `${key}: ${displayValue}`, value, false, true, indentLevel);\n      }\n    });\n  }\n\n  return lines;\n}\n\n// Helper function to get visible lines (handles collapsing)\nfunction getVisibleLines(lines: DisplayLine[]): DisplayLine[] {\n  const visible: DisplayLine[] = [];\n  let skipUntilIndent = -1;\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    \n    // If we're skipping and this line is still at a deeper indent level, skip it\n    if (skipUntilIndent >= 0 && line.indentLevel > skipUntilIndent) {\n      continue;\n    }\n    \n    // Reset skip mode if we've returned to the parent level or higher\n    if (skipUntilIndent >= 0 && line.indentLevel <= skipUntilIndent) {\n      skipUntilIndent = -1;\n    }\n    \n    // Always show the line itself\n    visible.push(line);\n    \n    // If this line is collapsed, start skipping its children\n    if (line.isCollapsed && line.isCollapsible) {\n      skipUntilIndent = line.indentLevel;\n    }\n  }\n\n  return visible;\n}\n\ninterface CustomCellLineEditorProps {\n  initialCellLineId?: string;\n  hideSelector?: boolean;\n  onSave?: (savedData: any) => void;\n  onError?: (error: string) => void;\n}\n\nexport default function CustomCellLineEditor({ initialCellLineId, hideSelector = false, onSave, onError }: CustomCellLineEditorProps = {}) {\n  const { cellLines, selectedCellLine, isLoading: cellLineLoading, error: cellLineError, fetchCellLine, saveCellLine, setSelectedCellLine, refetch } = useCellLineData();\n  const { schema, isLoading: schemaLoading, error: schemaError } = useSchemaData();\n  \n  const [selectedCellLineId, setSelectedCellLineId] = useState<string>(initialCellLineId || '');\n  const [displayLines, setDisplayLines] = useState<DisplayLine[]>([]);\n  const [editingLine, setEditingLine] = useState<number | null>(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveError, setSaveError] = useState<string | null>(null);\n  const [changeHistory, setChangeHistory] = useState<any[]>([]);\n  const [canUndo, setCanUndo] = useState(false);\n  const [originalCellLine, setOriginalCellLine] = useState<any>(null);\n  const [curationSourceFilter, setCurationSourceFilter] = useState<string>('');\n\n\n\n  // Generate display lines when data or schema changes\n  const lines = useMemo(() => {\n    if (!selectedCellLine || !schema) return [];\n    return parseDataToLines(selectedCellLine, schema);\n  }, [selectedCellLine, schema]);\n\n  useEffect(() => {\n    setDisplayLines(lines);\n  }, [lines]);\n\n  // Define handleCellLineSelect before it's used in useEffect\n  const handleCellLineSelect = useCallback(async (cellLineId: string) => {\n    \n    if (cellLineId) {\n      setSelectedCellLineId(cellLineId);\n      setChangeHistory([]);\n      setCanUndo(false);\n      setOriginalCellLine(null); // Reset original state when switching cell lines\n      setSaveError(null); // Clear any previous save errors\n      \n      // Find the cell line data from the list or fetch individual one\n      const existingCellLine = cellLines.find(cl => cl.CellLine_hpscreg_id === cellLineId);\n      \n      if (existingCellLine && schema) {\n        // Convert the flat structure to be compatible with selectedCellLine\n        const cellLineData = {\n          id: existingCellLine.CellLine_hpscreg_id,\n          ...existingCellLine,\n          template_name: existingCellLine.CellLine_hpscreg_id\n        };\n        \n        setSelectedCellLine(cellLineData);\n        setOriginalCellLine(JSON.parse(JSON.stringify(cellLineData))); // Deep copy for original state\n        \n        // Directly use the existing data\n        const lines = parseDataToLines(cellLineData, schema);\n        setDisplayLines(lines);\n      } else {\n        await fetchCellLine(cellLineId);\n      }\n    }\n  }, [cellLines, schema, fetchCellLine, setSelectedCellLine]);\n\n  // Refetch cell lines when curation source filter changes\n  useEffect(() => {\n    refetch(curationSourceFilter || undefined);\n  }, [curationSourceFilter, refetch]);\n\n  // Auto-select initial cell line when provided and data is ready\n  useEffect(() => {\n    if (initialCellLineId && schema) {\n      // Always update when initialCellLineId changes, regardless of current selection\n      if (!selectedCellLine || selectedCellLine.id !== initialCellLineId) {\n        handleCellLineSelect(initialCellLineId);\n      }\n    }\n  }, [initialCellLineId, schema, handleCellLineSelect]);\n\n  // Set original cell line when selectedCellLine changes (but not when it's being updated by edits)\n  useEffect(() => {\n    if (selectedCellLine && !originalCellLine) {\n      setOriginalCellLine(JSON.parse(JSON.stringify(selectedCellLine)));\n    }\n  }, [selectedCellLine, originalCellLine]);\n\n  const handleSave = async () => {\n    if (!selectedCellLine) return;\n    \n    setIsSaving(true);\n    setSaveError(null); // Clear any previous save errors\n    try {\n      const result = await saveCellLine(selectedCellLine.id, selectedCellLine);\n      console.log('✅ Save successful');\n      \n      // Call the onSave callback if provided (for curation workflow)\n      if (onSave) {\n        onSave(result.data || selectedCellLine);\n      }\n    } catch (error) {\n      console.error('❌ Save failed:', error);\n      const errorMessage = error instanceof Error ? error.message : 'Failed to save cell line';\n      setSaveError(errorMessage);\n      \n      // Call the onError callback if provided\n      if (onError) {\n        onError(errorMessage);\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const dismissSaveError = () => {\n    setSaveError(null);\n  };\n\n  const toggleCollapse = (lineNumber: number) => {\n    setDisplayLines(prev => prev.map(line => \n      line.lineNumber === lineNumber \n        ? { ...line, isCollapsed: !line.isCollapsed }\n        : line\n    ));\n  };\n\n  const startEditing = (lineNumber: number) => {\n    setEditingLine(lineNumber);\n  };\n\n  const cancelEditing = () => {\n    setEditingLine(null);\n  };\n\n  const handleUndo = () => {\n    if (changeHistory.length === 0) return;\n    \n    // Get the last state from history\n    const lastState = changeHistory[changeHistory.length - 1];\n    \n    // Remove the last state from history\n    setChangeHistory(prev => prev.slice(0, -1));\n    setCanUndo(changeHistory.length > 1);\n    \n    // Restore the state\n    setSelectedCellLine(lastState);\n    \n    // Regenerate display lines\n    if (schema) {\n      const newLines = parseDataToLines(lastState, schema);\n      setDisplayLines(newLines);\n    }\n    \n    console.log('🔄 Undo performed, remaining history items:', changeHistory.length - 1);\n  };\n\n  const handleRevertAll = () => {\n    if (!originalCellLine) return;\n    \n    // Restore the original state\n    setSelectedCellLine(JSON.parse(JSON.stringify(originalCellLine)));\n    \n    // Clear change history\n    setChangeHistory([]);\n    setCanUndo(false);\n    \n    // Regenerate display lines\n    if (schema) {\n      const newLines = parseDataToLines(originalCellLine, schema);\n      setDisplayLines(newLines);\n    }\n    \n    console.log('🔄 All changes reverted to original state');\n  };\n\n  const updateValue = (fieldPath: string[], newValue: any) => {\n    console.log('🟢 updateValue called with fieldPath:', fieldPath, 'newValue:', newValue);\n    console.log('🟢 Current selectedCellLine:', selectedCellLine ? 'EXISTS' : 'NULL');\n    console.log('🟢 selectedCellLine keys:', selectedCellLine ? Object.keys(selectedCellLine).slice(0, 5) : 'N/A');\n    \n    // Update the selectedCellLine data with proper deep cloning and state update\n    if (selectedCellLine) {\n      console.log('🟢 selectedCellLine exists, creating deep copy...');\n      \n      // Save current state to history before making changes\n      setChangeHistory(prev => [...prev, JSON.parse(JSON.stringify(selectedCellLine))]);\n      setCanUndo(true);\n      \n      // Create a deep copy of the selected cell line\n      const updated = JSON.parse(JSON.stringify(selectedCellLine));\n      let current = updated;\n      \n      console.log('🟢 Navigating to field path...');\n      // Navigate to the parent object\n      for (let i = 0; i < fieldPath.length - 1; i++) {\n        if (!current[fieldPath[i]]) {\n          current[fieldPath[i]] = {};\n        }\n        current = current[fieldPath[i]];\n      }\n      \n      // Set the new value\n      const fieldName = fieldPath[fieldPath.length - 1];\n      console.log('🟢 Setting field', fieldName, 'from', current[fieldName], 'to', newValue);\n      current[fieldName] = newValue;\n      \n      console.log('🟢 Updated object:', updated);\n      \n      // UPDATE: Actually update the selectedCellLine state - this was the missing piece!\n      console.log('🟢 Calling setSelectedCellLine...');\n      setSelectedCellLine(updated);\n      \n      // Regenerate display lines with updated data\n      if (schema) {\n        console.log('🟢 Regenerating display lines...');\n        const newLines = parseDataToLines(updated, schema);\n        setDisplayLines(newLines);\n        console.log('🟢 Display lines updated, count:', newLines.length);\n      }\n    } else {\n      console.log('❌ No selectedCellLine available');\n    }\n    \n    console.log('🟢 Setting editing line to null');\n    setEditingLine(null);\n  };\n\n  const createEmptyItemFromSchema = (fieldName: string): any => {\n    const fieldSchema = schema?.[fieldName];\n    \n    if (!fieldSchema?.json_schema) {\n      // Simple array - add empty string\n      return \"\";\n    }\n    \n    const jsonSchema = fieldSchema.json_schema;\n    \n    // For array items, look at the items schema\n    if (jsonSchema.type === 'array' && jsonSchema.items) {\n      const itemSchema = jsonSchema.items;\n      \n      if (itemSchema.type === 'object' && itemSchema.properties) {\n        // Complex array - create object with all fields as empty strings\n        const emptyObject: any = {};\n        Object.keys(itemSchema.properties).forEach(prop => {\n          emptyObject[prop] = \"\";\n        });\n        return emptyObject;\n      } else {\n        // Simple array item type\n        return \"\";\n      }\n    }\n    \n    // Fallback to empty string\n    return \"\";\n  };\n\n  const handleAddItem = (fieldPath: string[]) => {\n    if (!selectedCellLine || !schema) return;\n    \n    console.log('🟢 handleAddItem called with fieldPath:', fieldPath);\n    \n    // Save current state to history before making changes\n    setChangeHistory(prev => [...prev, JSON.parse(JSON.stringify(selectedCellLine))]);\n    setCanUndo(true);\n    \n    // Remove 'add' from the path to get the actual array field path\n    const arrayFieldPath = fieldPath.slice(0, -1);\n    const fieldName = arrayFieldPath[0];\n    \n    console.log('🟢 Array field name:', fieldName);\n    \n    // Create a deep copy of the selected cell line\n    const updated = JSON.parse(JSON.stringify(selectedCellLine));\n    let current = updated;\n    \n    // Navigate to the array\n    for (let i = 0; i < arrayFieldPath.length - 1; i++) {\n      current = current[arrayFieldPath[i]];\n    }\n    \n    const arrayField = arrayFieldPath[arrayFieldPath.length - 1];\n    if (!Array.isArray(current[arrayField])) {\n      current[arrayField] = [];\n    }\n    \n    // Create new item based on schema\n    const newItem = createEmptyItemFromSchema(fieldName);\n    console.log('🟢 Adding new item:', newItem);\n    \n    // Add the new item\n    current[arrayField].push(newItem);\n    \n    // Update state\n    setSelectedCellLine(updated);\n    \n    // Regenerate display lines\n    const newLines = parseDataToLines(updated, schema);\n    setDisplayLines(newLines);\n    \n    console.log('🟢 Array item added successfully');\n  };\n\n  if (schemaLoading || cellLineLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-800\"></div>\n        <span className=\"ml-3 text-gray-600\">Loading...</span>\n      </div>\n    );\n  }\n\n  // Only show blocking errors for schema/loading issues, not save errors\n  if (schemaError) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <h3 className=\"text-red-800 font-medium\">Schema Error</h3>\n        <p className=\"text-red-700 text-sm mt-1\">\n          {schemaError}\n        </p>\n      </div>\n    );\n  }\n\n  // Only show blocking error for cellLineError if it's NOT a save error\n  // (Save errors should be handled separately and not block the editor)\n  if (cellLineError && !selectedCellLine) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <h3 className=\"text-red-800 font-medium\">Loading Error</h3>\n        <p className=\"text-red-700 text-sm mt-1\">\n          {cellLineError}\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <div className=\"space-y-6\">\n        {/* Save Error Banner - Non-blocking */}\n        {saveError && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex items-start\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"h-5 w-5 text-red-400 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div className=\"ml-3\">\n                  <h3 className=\"text-red-800 font-medium text-sm\">Save Failed</h3>\n                  <p className=\"text-red-700 text-sm mt-1\">\n                    {saveError}\n                  </p>\n                  <p className=\"text-red-600 text-xs mt-2\">\n                    Please fix the issue and try saving again.\n                  </p>\n                </div>\n              </div>\n              <button\n                onClick={dismissSaveError}\n                className=\"ml-4 text-red-400 hover:text-red-600 transition-colors\"\n                title=\"Dismiss error\"\n              >\n                <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Cell Line Selection */}\n        {!hideSelector && (\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <label htmlFor=\"curation-source-filter\" className=\"text-sm font-medium text-gray-700\">\n              Curation Source:\n            </label>\n            <div className=\"relative\">\n              <select\n                id=\"curation-source-filter\"\n                value={curationSourceFilter}\n                onChange={(e) => setCurationSourceFilter(e.target.value)}\n                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-blue-600 min-w-[150px]\"\n              >\n                <option value=\"\">All Sources</option>\n                <option value=\"hpscreg\">HPSCREG</option>\n                <option value=\"LLM\">LLM Generated</option>\n                <option value=\"institution\">Institution</option>\n                <option value=\"manual\">Manual Entry</option>\n              </select>\n            </div>\n            \n            <label htmlFor=\"cellline-select\" className=\"text-sm font-medium text-gray-700\">\n              Select Cell Line:\n            </label>\n            <div className=\"relative\">\n              <select\n                id=\"cellline-select\"\n                value={selectedCellLineId}\n                onChange={(e) => handleCellLineSelect(e.target.value)}\n                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-blue-600 min-w-[200px]\"\n              >\n                <option value=\"\">Choose a cell line...</option>\n                {cellLines.map((cellLine) => (\n                  <option \n                    key={cellLine.CellLine_hpscreg_id || cellLine.template_name} \n                    value={cellLine.CellLine_hpscreg_id || cellLine.template_name}\n                  >\n                    {cellLine.CellLine_hpscreg_id || cellLine.template_name}\n                    {cellLine.curation_source && ` (${cellLine.curation_source})`}\n                  </option>\n                ))}\n              </select>\n              {cellLines.length > 0 && (\n                <div className=\"text-xs text-gray-500 mt-1\">\n                  {cellLines.length} cell lines available\n                </div>\n              )}\n            </div>\n            \n            {/* Add Cell Line Button */}\n            <button\n              onClick={() => {\n                // TODO: Implement add cell line functionality\n                console.log('Add cell line clicked');\n              }}\n              className=\"bg-green-600 hover:bg-green-700 text-white text-sm font-medium py-2 px-4 rounded-md transition-all shadow-sm hover:shadow flex items-center\"\n              title=\"Create a new cell line\"\n            >\n              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n              </svg>\n              Add Cell Line\n            </button>\n          </div>\n\n          {selectedCellLineId && (\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={handleUndo}\n                disabled={!canUndo}\n                className=\"bg-gray-600 hover:bg-gray-700 disabled:bg-gray-300 text-white text-sm font-medium py-2 px-4 rounded-md transition-all shadow-sm hover:shadow flex items-center\"\n                title={canUndo ? `Undo last change (${changeHistory.length} changes available)` : 'No changes to undo'}\n              >\n                Undo\n              </button>\n              <button\n                onClick={handleRevertAll}\n                disabled={changeHistory.length === 0}\n                className=\"bg-gray-600 hover:bg-gray-700 disabled:bg-gray-300 text-white text-sm font-medium py-2 px-4 rounded-md transition-all shadow-sm hover:shadow flex items-center\"\n                title={changeHistory.length > 0 ? 'Revert all changes back to original state' : 'No changes to revert'}\n              >\n                Revert All\n              </button>\n              <button\n                onClick={handleSave}\n                disabled={isSaving}\n                className=\"bg-blue-800 hover:bg-blue-900 disabled:bg-blue-300 text-white text-sm font-medium py-2 px-4 rounded-md transition-all shadow-sm hover:shadow flex items-center\"\n              >\n                {isSaving ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Saving...\n                  </>\n                ) : (\n                  'Save Changes'\n                )}\n              </button>\n            </div>\n          )}\n        </div>\n        )}\n\n\n        {/* Editor Interface */}\n        {(selectedCellLineId && displayLines.length > 0 && schema) ? (\n          <div className=\"border border-gray-200 rounded-lg overflow-hidden relative\">\n            <div className=\"bg-gray-50 px-4 py-2 border-b border-gray-200\">\n              <h3 className=\"text-sm font-medium text-gray-900\">\n                {selectedCellLineId}\n              </h3>\n              <p className=\"text-xs text-gray-600 mt-1\">\n                {displayLines.length} fields • Click values to edit\n              </p>\n            </div>\n            \n            <div className=\"custom-editor bg-white\">\n              {getVisibleLines(displayLines).map((line) => (\n                <EditorLine\n                  key={line.lineNumber}\n                  line={line}\n                  schema={schema}\n                  isEditing={editingLine === line.lineNumber}\n                  onToggleCollapse={() => toggleCollapse(line.lineNumber)}\n                  onStartEdit={() => startEditing(line.lineNumber)}\n                  onCancelEdit={cancelEditing}\n                  onUpdateValue={updateValue}\n                  onAddItem={() => handleAddItem(line.fieldPath)}\n                />\n              ))}\n            </div>\n            \n            {/* Floating Save Button */}\n            <button\n              onClick={handleSave}\n              disabled={isSaving}\n              className=\"absolute bottom-4 right-4 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-300 text-white p-3 rounded-full shadow-lg transition-all hover:shadow-xl flex items-center justify-center\"\n              title={isSaving ? 'Saving...' : 'Save Changes'}\n            >\n              {isSaving ? (\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white\"></div>\n              ) : (\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M17,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3M19,19H5V5H15V9H19V19Z\" />\n                  <path d=\"M7,5V9H13V5H7M6,14A2,2 0 0,1 8,12A2,2 0 0,1 10,14A2,2 0 0,1 8,16A2,2 0 0,1 6,14Z\" fill=\"white\" />\n                </svg>\n              )}\n            </button>\n          </div>\n        ) : (\n          <div className=\"text-center py-12 text-gray-500\">\n            <p>Select a cell line to begin editing</p>\n          </div>\n        )}\n      </div>\n\n      <style jsx>{`\n        .custom-editor {\n          font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif;\n          font-size: 14px;\n          line-height: 1.6;\n          max-height: 600px;\n          overflow-y: auto;\n          overscroll-behavior-y: contain;\n        }\n      `}</style>\n    </ErrorBoundary>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3197, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/curation/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { ArticlesTable } from './components/ArticlesTable';\nimport { ErrorModal } from './components/ErrorModal';\nimport { ErrorBoundary } from '../editor/components/ErrorBoundary';\nimport { useStatusPolling } from './hooks/useStatusPolling';\nimport { API_ENDPOINTS } from '../../../lib/api';\nimport CustomCellLineEditor from '../editor/components/CustomCellLineEditor';\n\ninterface Article {\n  id: number;\n  filename: string;\n  pubmed_id: number | null;\n  created_on: string;\n  modified_on: string;\n  curation_status: 'pending' | 'processing' | 'completed' | 'failed';\n  curation_error: string | null;\n  curation_started_at: string | null;\n  transcription_status: string;\n  is_curated: boolean;\n  approximate_tokens: number;\n}\n\ninterface ErrorDetails {\n  article_id: number;\n  error_message: string;\n  curation_status: string;\n  failed_at: string;\n  filename?: string;\n  pubmed_id?: number | null;\n}\n\ninterface CellLine {\n  CellLine_hpscreg_id: string;\n  CellLine_cell_line_type: string;\n  CellLine_source_cell_type: string;\n  work_status: string;\n  source_article: number;\n  created_on: string;\n  modified_on: string;\n  [key: string]: any;\n}\n\ninterface CurationResult {\n  article_id: number;\n  article_pubmed_id: number | null;\n  status: 'processing' | 'completed' | 'failed';\n  cell_lines: CellLine[];\n  total_found?: number;\n  error?: string;\n}\n\nexport default function CurationPage() {\n  const [selectedArticles, setSelectedArticles] = useState<number[]>([]);\n  const [isPolling, setIsPolling] = useState(false);\n  const [errorModalOpen, setErrorModalOpen] = useState(false);\n  const [errorDetails, setErrorDetails] = useState<ErrorDetails | null>(null);\n  const [errorDetailsLoading, setErrorDetailsLoading] = useState(false);\n  \n  // New state for three-section workflow\n  const [curationResults, setCurationResults] = useState<Map<number, CurationResult>>(new Map());\n  const [allCuratedCellLines, setAllCuratedCellLines] = useState<CellLine[]>([]);\n  const [selectedCellLineId, setSelectedCellLineId] = useState<string | null>(null);\n  const [selectedCellLineData, setSelectedCellLineData] = useState<CellLine | null>(null);\n  const [curationInProgress, setCurationInProgress] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [curationError, setCurationError] = useState<string | null>(null);\n  \n  // Track cell lines that have been reviewed and saved (persist across refreshes)\n  const [reviewedCellLineIds, setReviewedCellLineIds] = useState<Set<string>>(() => {\n    if (typeof window !== 'undefined') {\n      const saved = localStorage.getItem('curation-reviewed-cell-lines');\n      return saved ? new Set(JSON.parse(saved)) : new Set();\n    }\n    return new Set();\n  });\n\n  // Initial articles fetch\n  const [initialArticles, setInitialArticles] = useState<Article[]>([]);\n  const [initialLoading, setInitialLoading] = useState(true);\n  const [initialError, setInitialError] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetchInitialArticles();\n  }, []);\n\n  const fetchInitialArticles = async () => {\n    try {\n      setInitialLoading(true);\n      const response = await fetch(API_ENDPOINTS.CURATION.ARTICLES);\n      if (!response.ok) throw new Error('Failed to fetch articles');\n      const data = await response.json();\n      setInitialArticles(data.articles);\n    } catch (err) {\n      setInitialError(err instanceof Error ? err.message : 'Failed to load articles');\n    } finally {\n      setInitialLoading(false);\n    }\n  };\n\n  // Real-time status polling with seamless background updates\n  const {\n    articles,\n    status,\n    loading: pollingLoading,\n    error: pollingError,\n    refresh,\n    startPolling,\n    stopPolling\n  } = useStatusPolling(initialArticles, isPolling, 3000);\n\n  // Start polling when curation is initiated\n  const handleCurationStart = useCallback(() => {\n    setIsPolling(true);\n    setCurationInProgress(true);\n    setSelectedArticles([]);\n    setCurationResults(new Map());\n    setAllCuratedCellLines([]);\n    setSelectedCellLineId(null);\n    setSelectedCellLineData(null);\n    \n    // Clear reviewed cell lines for new curation session\n    setReviewedCellLineIds(new Set());\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('curation-reviewed-cell-lines');\n    }\n    \n    // Initial refresh to get updated status\n    refresh();\n  }, [refresh]);\n\n  // Fetch cell lines for completed articles\n  const fetchCellLinesForArticle = useCallback(async (articleId: number) => {\n    try {\n      const response = await fetch(`${API_ENDPOINTS.CURATION.BASE}/${articleId}/celllines/`);\n      if (!response.ok) throw new Error('Failed to fetch cell lines');\n      const data = await response.json();\n      \n      const result: CurationResult = {\n        article_id: data.article_id,\n        article_pubmed_id: data.article_pubmed_id,\n        status: 'completed',\n        cell_lines: data.cell_lines,\n        total_found: data.count\n      };\n      \n      return result;\n    } catch (error) {\n      console.error(`Failed to fetch cell lines for article ${articleId}:`, error);\n      return {\n        article_id: articleId,\n        article_pubmed_id: null,\n        status: 'failed' as const,\n        cell_lines: [],\n        error: error instanceof Error ? error.message : 'Failed to fetch cell lines'\n      };\n    }\n  }, []);\n\n  // Update curation results when articles complete (only for new completions)\n  useEffect(() => {\n    if (articles.length > 0) {\n      articles.forEach(async (article) => {\n        // Only fetch if article is completed AND we don't already have its results\n        if (article.curation_status === 'completed' && !curationResults.has(article.id)) {\n          const result = await fetchCellLinesForArticle(article.id);\n          setCurationResults(prev => new Map(prev.set(article.id, result)));\n        }\n      });\n    }\n  }, [articles, fetchCellLinesForArticle]); // Removed curationResults from dependencies to prevent re-fetching\n\n  // Update flattened cell lines list when curation results change, filtering out reviewed ones\n  useEffect(() => {\n    const flattenedCellLines: CellLine[] = [];\n    curationResults.forEach(result => {\n      // Only include cell lines that haven't been reviewed yet\n      const unreviewedCellLines = result.cell_lines.filter(\n        cellLine => !reviewedCellLineIds.has(cellLine.CellLine_hpscreg_id)\n      );\n      flattenedCellLines.push(...unreviewedCellLines);\n    });\n    setAllCuratedCellLines(flattenedCellLines);\n    \n    // Auto-select first cell line if none is currently selected and we have cell lines\n    if (flattenedCellLines.length > 0 && !selectedCellLineId) {\n      const firstCellLine = flattenedCellLines[0];\n      setSelectedCellLineId(firstCellLine.CellLine_hpscreg_id);\n      setSelectedCellLineData(firstCellLine);\n    }\n    \n    // Clear selection if no cell lines are left\n    if (flattenedCellLines.length === 0 && selectedCellLineId) {\n      setSelectedCellLineId(null);\n      setSelectedCellLineData(null);\n    }\n  }, [curationResults, reviewedCellLineIds, selectedCellLineId]);\n\n  // Stop polling when all processing is complete\n  useEffect(() => {\n    if (status && status.processing_count === 0 && isPolling) {\n      // Wait a bit to ensure all updates are processed\n      const timeout = setTimeout(() => {\n        setIsPolling(false);\n        setCurationInProgress(false);\n      }, 5000);\n      \n      return () => clearTimeout(timeout);\n    }\n  }, [status, isPolling]);\n\n  // Handle error modal\n  const handleErrorClick = useCallback(async (articleId: number) => {\n    setErrorDetailsLoading(true);\n    setErrorModalOpen(true);\n    \n    try {\n      const response = await fetch(API_ENDPOINTS.CURATION.ERROR_DETAILS(articleId));\n      if (!response.ok) throw new Error('Failed to fetch error details');\n      \n      const data = await response.json();\n      setErrorDetails(data);\n    } catch (err) {\n      setErrorDetails({\n        article_id: articleId,\n        error_message: 'Failed to load error details',\n        curation_status: 'failed',\n        failed_at: new Date().toISOString()\n      });\n    } finally {\n      setErrorDetailsLoading(false);\n    }\n  }, []);\n\n  const handleErrorModalClose = useCallback(() => {\n    setErrorModalOpen(false);\n    setErrorDetails(null);\n  }, []);\n\n  // Handle retry functionality\n  const handleRetryClick = useCallback(async (articleId: number) => {\n    try {\n      const response = await fetch(API_ENDPOINTS.CURATION.RETRY(articleId), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to retry curation');\n      }\n\n      // Start polling to track the retried article\n      setIsPolling(true);\n      \n      // Refresh immediately to show processing status\n      refresh();\n    } catch (err) {\n      console.error('Retry failed:', err);\n      throw err; // Re-throw so the table component can handle it\n    }\n  }, [refresh]);\n\n  // Handle cell line selection for editing\n  const handleCellLineSelect = useCallback((cellLineId: string) => {\n    setSelectedCellLineId(cellLineId);\n    const cellLine = allCuratedCellLines.find(cl => cl.CellLine_hpscreg_id === cellLineId);\n    setSelectedCellLineData(cellLine || null);\n  }, [allCuratedCellLines]);\n\n  // Handle cell line save success - mark as reviewed and auto-select next\n  const handleCellLineSave = useCallback((savedData: any) => {\n    const cellLineId = savedData.CellLine_hpscreg_id;\n    \n    // Find the next cell line to select before removing the current one\n    const currentIndex = allCuratedCellLines.findIndex(\n      cl => cl.CellLine_hpscreg_id === cellLineId\n    );\n    \n    const nextCellLine = allCuratedCellLines[currentIndex + 1] || allCuratedCellLines[currentIndex - 1];\n    \n    // Mark this cell line as reviewed and persist to localStorage\n    setReviewedCellLineIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(cellLineId);\n      // Persist to localStorage\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('curation-reviewed-cell-lines', JSON.stringify([...newSet]));\n      }\n      return newSet;\n    });\n    \n    // Auto-select the next cell line for smooth workflow, or clear if none left\n    if (nextCellLine) {\n      setSelectedCellLineId(nextCellLine.CellLine_hpscreg_id);\n      setSelectedCellLineData(nextCellLine);\n    } else {\n      setSelectedCellLineId(null);\n      setSelectedCellLineData(null);\n    }\n  }, [allCuratedCellLines]);\n\n  // Handle cell line save error\n  const handleCellLineError = useCallback((error: string) => {\n    console.error('Cell line save error:', error);\n    // The error is already displayed in the editor component\n  }, []);\n\n  // Handle curation start button click\n  const handleCurationStartClick = useCallback(() => {\n    if (selectedArticles.length === 0) {\n      setCurationError('Please select at least one article to curate.');\n      return;\n    }\n\n    if (selectedArticles.length > 20) {\n      setCurationError('Maximum 20 articles can be curated at once.');\n      return;\n    }\n\n    setShowConfirmation(true);\n  }, [selectedArticles]);\n\n  // Handle confirmed bulk curation start\n  const handleConfirmedCurationStart = useCallback(async () => {\n    setShowConfirmation(false);\n    setCurationError(null);\n\n    try {\n      const response = await fetch(API_ENDPOINTS.CURATION.BULK_CURATE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          article_ids: selectedArticles\n        }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to start curation');\n      }\n\n      // Start the curation workflow\n      handleCurationStart();\n    } catch (err) {\n      setCurationError(err instanceof Error ? err.message : 'Failed to start curation');\n    }\n  }, [selectedArticles, handleCurationStart]);\n\n  // Combine loading states\n  const isLoading = initialLoading || (isPolling && pollingLoading);\n  const error = initialError || pollingError;\n\n  return (\n    <ErrorBoundary>\n      <div className=\"p-6 max-w-7xl mx-auto\">\n\n        {error && (\n          <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <p className=\"text-red-700\">{error}</p>\n            <button \n              onClick={fetchInitialArticles}\n              className=\"mt-2 text-red-600 hover:text-red-800 underline\"\n            >\n              Retry\n            </button>\n          </div>\n        )}\n\n\n        {/* Article Selection */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Article Selection</h2>\n          \n          <ArticlesTable\n            articles={articles}\n            selectedArticles={selectedArticles}\n            onSelectionChange={setSelectedArticles}\n            loading={isLoading}\n            onStartCuration={handleCurationStartClick}\n            onErrorClick={handleErrorClick}\n            onRetryClick={handleRetryClick}\n            isPolling={isPolling}\n          />\n\n          {/* Error Display */}\n          {curationError && (\n            <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <p className=\"text-red-700 text-sm\">{curationError}</p>\n            </div>\n          )}\n        </div>\n\n        {/* Curation Results */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Curation Results</h2>\n          {curationInProgress || curationResults.size > 0 || articles.some(article => article.curation_status === 'completed') ? (\n            <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n              {/* Show failed results */}\n              {Array.from(curationResults.entries()).map(([articleId, result]) => {\n                return result.status === 'failed' ? (\n                  <div key={articleId} className=\"mb-4 last:mb-0\">\n                    <div className=\"text-red-600\">\n                      ✗ Failed to process article {result.article_pubmed_id || articleId}: {result.error}\n                    </div>\n                  </div>\n                ) : null;\n              }).filter(Boolean)}\n              \n              {/* Processing articles */}\n              {articles\n                .filter(article => \n                  selectedArticles.includes(article.id) && \n                  article.curation_status === 'processing' && \n                  !curationResults.has(article.id)\n                )\n                .map(article => (\n                  <div key={article.id} className=\"mb-4 text-blue-600\">\n                    Processing article {article.pubmed_id || article.id}...\n                  </div>\n                ))\n              }\n              \n              {/* Article cards with cell lines grouped by article */}\n              {curationResults.size > 0 && (\n                <div>\n                  <div className=\"max-h-96 overflow-y-auto space-y-4\">\n                    {Array.from(curationResults.entries()).map(([articleId, result]) => {\n                      if (result.status !== 'completed') return null;\n                      \n                      // Filter out reviewed cell lines for this article\n                      const unreviewedCellLines = result.cell_lines.filter(\n                        cellLine => !reviewedCellLineIds.has(cellLine.CellLine_hpscreg_id)\n                      );\n                      \n                      if (unreviewedCellLines.length === 0) return null;\n                      \n                      // Find the article to get its filename\n                      const article = articles.find(a => a.id === articleId);\n                      \n                      return (\n                        <div key={articleId} className=\"border border-gray-200 rounded-lg bg-white shadow-sm\">\n                          {/* Card header */}\n                          <div className=\"px-4 py-3 border-b border-gray-200 flex justify-between items-center\">\n                            <h4 className=\"text-sm text-gray-900 italic\">\n                              Title: {unreviewedCellLines[0]?.CellLine_publication_title || article?.filename || `Article ${articleId}`}\n                            </h4>\n                            <span className=\"text-xs text-gray-500\">\n                              PubMed: {result.article_pubmed_id || 'N/A'}\n                            </span>\n                          </div>\n                          \n                          {/* Cell lines table */}\n                          <div className=\"overflow-x-auto\">\n                            <table className=\"min-w-full divide-y divide-gray-200\">\n                              <thead className=\"bg-gray-50\">\n                                <tr>\n                                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    ID\n                                  </th>\n                                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Type\n                                  </th>\n                                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Source\n                                  </th>\n                                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Status\n                                  </th>\n                                </tr>\n                              </thead>\n                              <tbody className=\"bg-white divide-y divide-gray-200\">\n                                {unreviewedCellLines.map((cellLine) => (\n                                  <tr \n                                    key={cellLine.CellLine_hpscreg_id}\n                                    className={`cursor-pointer hover:bg-gray-50 ${\n                                      selectedCellLineId === cellLine.CellLine_hpscreg_id ? 'bg-blue-50' : ''\n                                    }`}\n                                    onClick={() => handleCellLineSelect(cellLine.CellLine_hpscreg_id)}\n                                  >\n                                    <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900\">\n                                      {cellLine.CellLine_hpscreg_id}\n                                    </td>\n                                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500\">\n                                      {cellLine.CellLine_cell_line_type}\n                                    </td>\n                                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500\">\n                                      {cellLine.CellLine_source_cell_type || 'Unknown'}\n                                    </td>\n                                    <td className=\"px-4 py-3 whitespace-nowrap\">\n                                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                                        cellLine.work_status === 'in progress' ? 'bg-yellow-100 text-yellow-800' :\n                                        cellLine.work_status === 'for review' ? 'bg-blue-100 text-blue-800' :\n                                        'bg-green-100 text-green-800'\n                                      }`}>\n                                        {cellLine.work_status}\n                                      </span>\n                                    </td>\n                                  </tr>\n                                ))}\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      );\n                    }).filter(Boolean)}\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"bg-gray-50 rounded-lg border border-gray-200 p-6 text-center text-gray-500\">\n              Results will appear here when curation is started\n            </div>\n          )}\n        </div>\n\n        {/* Cell Line Editor */}\n        {selectedCellLineId && selectedCellLineData && (\n          <div className=\"mb-8\">\n            <CustomCellLineEditor \n              initialCellLineId={selectedCellLineId} \n              hideSelector={true}\n              onSave={handleCellLineSave}\n              onError={handleCellLineError}\n            />\n          </div>\n        )}\n\n        <ErrorModal\n          isOpen={errorModalOpen}\n          onClose={handleErrorModalClose}\n          errorDetails={errorDetails}\n          loading={errorDetailsLoading}\n        />\n\n        {/* Confirmation Modal */}\n        {showConfirmation && (\n          <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n            <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n              <div className=\"mt-3 text-center\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Confirm Curation</h3>\n                <div className=\"mt-2 px-7 py-3\">\n                  <p className=\"text-sm text-gray-500\">\n                    Are you sure you want to start curation for {selectedArticles.length} article{selectedArticles.length !== 1 ? 's' : ''}?\n                    This process may take several minutes to complete.\n                  </p>\n                </div>\n                <div className=\"items-center px-4 py-3\">\n                  <button\n                    onClick={handleConfirmedCurationStart}\n                    className=\"px-4 py-2 bg-blue-600 text-white text-base font-medium rounded-md w-24 mr-2 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    Confirm\n                  </button>\n                  <button\n                    onClick={() => setShowConfirmation(false)}\n                    className=\"px-4 py-2 bg-gray-300 text-gray-700 text-base font-medium rounded-md w-24 hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </ErrorBoundary>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}