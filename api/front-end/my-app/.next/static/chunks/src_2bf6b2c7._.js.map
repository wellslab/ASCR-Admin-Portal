{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/VersionSelector.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\n\ninterface Option {\n  id: string;\n  label: string;\n  subtitle?: string;\n}\n\ninterface VersionSelectorProps {\n  label: string;\n  placeholder: string;\n  options: Option[];\n  value: string | null;\n  onChange: (value: string) => void;\n  isLoading?: boolean;\n  disabled?: boolean;\n  searchable?: boolean;\n}\n\nexport function VersionSelector({\n  label,\n  placeholder,\n  options,\n  value,\n  onChange,\n  isLoading = false,\n  disabled = false,\n  searchable = false\n}: VersionSelectorProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const filteredOptions = searchable && searchTerm\n    ? options.filter(option =>\n        option.label.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        option.subtitle?.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    : options;\n\n  const selectedOption = options.find(option => option.id === value);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n        setSearchTerm('');\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const handleSelect = (optionId: string) => {\n    onChange(optionId);\n    setIsOpen(false);\n    setSearchTerm('');\n  };\n\n  return (\n    <div className=\"relative\" ref={dropdownRef}>\n      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n        {label}\n      </label>\n      \n      <button\n        type=\"button\"\n        onClick={() => !disabled && !isLoading && setIsOpen(!isOpen)}\n        disabled={disabled || isLoading}\n        className={`relative w-full bg-white border border-gray-300 rounded-md pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm ${\n          disabled || isLoading ? 'bg-gray-50 text-gray-400 cursor-not-allowed' : 'hover:border-gray-400'\n        }`}\n      >\n        <span className=\"block truncate\">\n          {isLoading ? (\n            <span className=\"flex items-center\">\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\n              Loading...\n            </span>\n          ) : selectedOption ? (\n            <span>\n              {selectedOption.label}\n              {selectedOption.subtitle && (\n                <span className=\"text-gray-500 ml-1\">({selectedOption.subtitle})</span>\n              )}\n            </span>\n          ) : (\n            <span className=\"text-gray-400\">{placeholder}</span>\n          )}\n        </span>\n        <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n          <svg\n            className={`h-5 w-5 text-gray-400 transform transition-transform ${isOpen ? 'rotate-180' : ''}`}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </span>\n      </button>\n\n      {isOpen && !isLoading && (\n        <div className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n          {searchable && (\n            <div className=\"px-3 py-2 border-b border-gray-200\">\n              <input\n                type=\"text\"\n                className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Search...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                onClick={(e) => e.stopPropagation()}\n              />\n            </div>\n          )}\n          \n          {filteredOptions.length === 0 ? (\n            <div className=\"px-3 py-2 text-sm text-gray-500\">\n              {searchTerm ? 'No results found' : 'No options available'}\n            </div>\n          ) : (\n            filteredOptions.map((option) => (\n              <button\n                key={option.id}\n                onClick={() => handleSelect(option.id)}\n                className={`w-full text-left px-3 py-2 text-sm hover:bg-gray-100 focus:outline-none focus:bg-gray-100 ${\n                  value === option.id ? 'bg-blue-50 text-blue-900' : 'text-gray-900'\n                }`}\n              >\n                <div>\n                  <div>{option.label}</div>\n                  {option.subtitle && (\n                    <div className=\"text-xs text-gray-500\">{option.subtitle}</div>\n                  )}\n                </div>\n              </button>\n            ))\n          )}\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///app/src/lib/api.ts"],"sourcesContent":["const isDev = process.env.NODE_ENV === 'development';\n\nconst API_BASE_URL = isDev\n  ? 'http://localhost:8000'\n  : process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\nexport const API_ENDPOINTS = {\n  // Curation endpoints\n  CURATION: {\n    BASE: `${API_BASE_URL}/api/curation`,\n    ARTICLES: `${API_BASE_URL}/api/curation/articles/`,\n    STATUS: `${API_BASE_URL}/api/curation/status/`,\n    BULK_CURATE: `${API_BASE_URL}/api/curation/bulk_curate/`,\n    ERROR_DETAILS: (articleId: number) => `${API_BASE_URL}/api/curation/${articleId}/error_details/`,\n    RETRY: (articleId: number) => `${API_BASE_URL}/api/curation/${articleId}/retry/`,\n    CELLLINES: (articleId: number) => `${API_BASE_URL}/api/curation/${articleId}/celllines/`,\n    SAVE_CELLLINE: (celllineId: string) => `${API_BASE_URL}/api/curation/celllines/${celllineId}/`,\n  },\n  // Editor endpoints (for reference)\n  EDITOR: {\n    CELLLINES: `${API_BASE_URL}/api/editor/celllines/`,\n    CELLLINE: (id: string) => `${API_BASE_URL}/api/editor/celllines/${id}/`,\n    SCHEMA: `${API_BASE_URL}/api/editor/cellline-schema/`,\n    NEW_TEMPLATE: `${API_BASE_URL}/api/editor/celllines/new_template/`,\n    VERSIONS: (id: string) => `${API_BASE_URL}/api/editor/celllines/${id}/versions/`,\n    VERSION: (id: string, version: string) => `${API_BASE_URL}/api/editor/celllines/${id}/versions/${version}/`,\n  },\n  // Transcription endpoints\n  TRANSCRIPTION: {\n    ARTICLES: `${API_BASE_URL}/api/articles/`,\n    CREATE_ARTICLE: `${API_BASE_URL}/api/transcription/create_article/`,\n  },\n};\n\nexport default API_ENDPOINTS; "],"names":[],"mappings":";;;;AAAc;AAAd,MAAM,QAAQ,oDAAyB;AAEvC,MAAM,eAAe,uCACjB;AAGG,MAAM,gBAAgB;IAC3B,qBAAqB;IACrB,UAAU;QACR,MAAM,GAAG,aAAa,aAAa,CAAC;QACpC,UAAU,GAAG,aAAa,uBAAuB,CAAC;QAClD,QAAQ,GAAG,aAAa,qBAAqB,CAAC;QAC9C,aAAa,GAAG,aAAa,0BAA0B,CAAC;QACxD,eAAe,CAAC,YAAsB,GAAG,aAAa,cAAc,EAAE,UAAU,eAAe,CAAC;QAChG,OAAO,CAAC,YAAsB,GAAG,aAAa,cAAc,EAAE,UAAU,OAAO,CAAC;QAChF,WAAW,CAAC,YAAsB,GAAG,aAAa,cAAc,EAAE,UAAU,WAAW,CAAC;QACxF,eAAe,CAAC,aAAuB,GAAG,aAAa,wBAAwB,EAAE,WAAW,CAAC,CAAC;IAChG;IACA,mCAAmC;IACnC,QAAQ;QACN,WAAW,GAAG,aAAa,sBAAsB,CAAC;QAClD,UAAU,CAAC,KAAe,GAAG,aAAa,sBAAsB,EAAE,GAAG,CAAC,CAAC;QACvE,QAAQ,GAAG,aAAa,4BAA4B,CAAC;QACrD,cAAc,GAAG,aAAa,mCAAmC,CAAC;QAClE,UAAU,CAAC,KAAe,GAAG,aAAa,sBAAsB,EAAE,GAAG,UAAU,CAAC;QAChF,SAAS,CAAC,IAAY,UAAoB,GAAG,aAAa,sBAAsB,EAAE,GAAG,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC7G;IACA,0BAA0B;IAC1B,eAAe;QACb,UAAU,GAAG,aAAa,cAAc,CAAC;QACzC,gBAAgB,GAAG,aAAa,kCAAkC,CAAC;IACrE;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/hooks/useCellLineData.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { CellLineData, CellLineTemplate } from '../types/editor';\nimport { API_ENDPOINTS } from '../../../../lib/api';\n\nexport function useCellLineData() {\n  const [cellLines, setCellLines] = useState<CellLineTemplate[]>([]);\n  const [selectedCellLine, setSelectedCellLine] = useState<CellLineData | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Fetch list of available cell lines\n  const fetchCellLines = useCallback(async (curationSource?: string) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      let allCellLines: any[] = [];\n      let url: string | null = API_ENDPOINTS.EDITOR.CELLLINES;\n      \n      // Add curation source filter to URL if provided\n      if (curationSource) {\n        url += `?curation_source=${encodeURIComponent(curationSource)}`;\n      }\n      \n      // Fetch all pages of cell lines\n      while (url) {\n        const response: Response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch cell lines: ${response.statusText}`);\n        }\n        \n        const data: any = await response.json();\n        \n        // If it's a paginated response\n        if (data.results) {\n          allCellLines = [...allCellLines, ...data.results];\n          url = data.next; // Get next page URL\n        } else {\n          // If it's a direct array response\n          allCellLines = data;\n          url = null;\n        }\n      }\n      \n      setCellLines(allCellLines);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch cell lines');\n      console.error('Error fetching cell lines:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Fetch specific cell line by ID\n  const fetchCellLine = useCallback(async (id: string) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(API_ENDPOINTS.EDITOR.CELLLINE(id));\n      if (!response.ok) {\n        throw new Error(`Failed to fetch cell line: ${response.statusText}`);\n      }\n      \n      const responseData = await response.json();\n      // Extract the actual cell line data from the response\n      const cellLineData = responseData.data || responseData;\n      \n      // Ensure the id field is set for the frontend to use\n      if (cellLineData && !cellLineData.id && cellLineData.CellLine_hpscreg_id) {\n        cellLineData.id = cellLineData.CellLine_hpscreg_id;\n      }\n      \n      setSelectedCellLine(cellLineData);\n      return cellLineData;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch cell line');\n      console.error('Error fetching cell line:', err);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Save cell line changes\n  const saveCellLine = useCallback(async (id: string, data: Partial<CellLineData>) => {\n    setIsLoading(true);\n    // Don't set global error state here - let the component handle save errors\n    \n    try {\n      // Clean the data before sending - provide defaults for required fields that are empty\n      const cleanedData = { ...data };\n      \n      // Handle required fields that cannot be blank\n      const requiredFields = [\n        'CellLine_source_cell_type',\n        'CellLine_source_tissue', \n        'CellLine_source'\n      ];\n      \n      requiredFields.forEach(field => {\n        if (cleanedData[field] === '' || cleanedData[field] === null || cleanedData[field] === undefined) {\n          cleanedData[field] = 'Unknown'; // Provide a default value\n        }\n      });\n      \n      const response = await fetch(API_ENDPOINTS.EDITOR.CELLLINE(id), {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(cleanedData),\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to save cell line: ${response.statusText} - ${errorText}`);\n      }\n      \n      const responseData = await response.json();\n      // Extract the actual cell line data from the enhanced save response\n      const cellLineData = responseData.data || responseData;\n      \n      // Ensure the id field is set for the frontend to use\n      if (cellLineData && !cellLineData.id && cellLineData.CellLine_hpscreg_id) {\n        cellLineData.id = cellLineData.CellLine_hpscreg_id;\n      }\n      \n      setSelectedCellLine(cellLineData);\n      \n      // Return the full response data so components can access version_info, performance, etc.\n      return responseData;\n    } catch (err) {\n      // Don't set error state for save failures - let component handle them\n      console.error('Error saving cell line:', err);\n      throw err; // Re-throw so component can catch and handle\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Get new template\n  const getNewTemplate = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(API_ENDPOINTS.EDITOR.NEW_TEMPLATE);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch template: ${response.statusText}`);\n      }\n      \n      const responseData = await response.json();\n      // Extract the template data from the response\n      const templateData = responseData.template || responseData;\n      setSelectedCellLine(templateData);\n      return templateData;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch template');\n      console.error('Error fetching template:', err);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchCellLines();\n  }, [fetchCellLines]);\n\n  return {\n    cellLines,\n    selectedCellLine,\n    isLoading,\n    error,\n    fetchCellLine,\n    saveCellLine,\n    getNewTemplate,\n    refetch: fetchCellLines,\n    setSelectedCellLine, // Export the setter for local updates\n  };\n} "],"names":[],"mappings":";;;AAEA;AAEA;;AAJA;;;AAMO,SAAS;;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB,EAAE;IACjE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IAC9E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,qCAAqC;IACrC,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE,OAAO;YACxC,aAAa;YACb,SAAS;YAET,IAAI;gBACF,IAAI,eAAsB,EAAE;gBAC5B,IAAI,MAAqB,oHAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,SAAS;gBAEvD,gDAAgD;gBAChD,IAAI,gBAAgB;oBAClB,OAAO,CAAC,iBAAiB,EAAE,mBAAmB,iBAAiB;gBACjE;gBAEA,gCAAgC;gBAChC,MAAO,IAAK;oBACV,MAAM,WAAqB,MAAM,MAAM;oBACvC,IAAI,CAAC,SAAS,EAAE,EAAE;wBAChB,MAAM,IAAI,MAAM,CAAC,4BAA4B,EAAE,SAAS,UAAU,EAAE;oBACtE;oBAEA,MAAM,OAAY,MAAM,SAAS,IAAI;oBAErC,+BAA+B;oBAC/B,IAAI,KAAK,OAAO,EAAE;wBAChB,eAAe;+BAAI;+BAAiB,KAAK,OAAO;yBAAC;wBACjD,MAAM,KAAK,IAAI,EAAE,oBAAoB;oBACvC,OAAO;wBACL,kCAAkC;wBAClC,eAAe;wBACf,MAAM;oBACR;gBACF;gBAEA,aAAa;YACf,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAC9C,QAAQ,KAAK,CAAC,8BAA8B;YAC9C,SAAU;gBACR,aAAa;YACf;QACF;sDAAG,EAAE;IAEL,iCAAiC;IACjC,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;sDAAE,OAAO;YACvC,aAAa;YACb,SAAS;YAET,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,oHAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,QAAQ,CAAC;gBAC3D,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM,CAAC,2BAA2B,EAAE,SAAS,UAAU,EAAE;gBACrE;gBAEA,MAAM,eAAe,MAAM,SAAS,IAAI;gBACxC,sDAAsD;gBACtD,MAAM,eAAe,aAAa,IAAI,IAAI;gBAE1C,qDAAqD;gBACrD,IAAI,gBAAgB,CAAC,aAAa,EAAE,IAAI,aAAa,mBAAmB,EAAE;oBACxE,aAAa,EAAE,GAAG,aAAa,mBAAmB;gBACpD;gBAEA,oBAAoB;gBACpB,OAAO;YACT,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAC9C,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,OAAO;YACT,SAAU;gBACR,aAAa;YACf;QACF;qDAAG,EAAE;IAEL,yBAAyB;IACzB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;qDAAE,OAAO,IAAY;YAClD,aAAa;YACb,2EAA2E;YAE3E,IAAI;gBACF,sFAAsF;gBACtF,MAAM,cAAc;oBAAE,GAAG,IAAI;gBAAC;gBAE9B,8CAA8C;gBAC9C,MAAM,iBAAiB;oBACrB;oBACA;oBACA;iBACD;gBAED,eAAe,OAAO;iEAAC,CAAA;wBACrB,IAAI,WAAW,CAAC,MAAM,KAAK,MAAM,WAAW,CAAC,MAAM,KAAK,QAAQ,WAAW,CAAC,MAAM,KAAK,WAAW;4BAChG,WAAW,CAAC,MAAM,GAAG,WAAW,0BAA0B;wBAC5D;oBACF;;gBAEA,MAAM,WAAW,MAAM,MAAM,oHAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK;oBAC9D,QAAQ;oBACR,SAAS;wBACP,gBAAgB;oBAClB;oBACA,MAAM,KAAK,SAAS,CAAC;gBACvB;gBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;oBACrC,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,SAAS,UAAU,CAAC,GAAG,EAAE,WAAW;gBACnF;gBAEA,MAAM,eAAe,MAAM,SAAS,IAAI;gBACxC,oEAAoE;gBACpE,MAAM,eAAe,aAAa,IAAI,IAAI;gBAE1C,qDAAqD;gBACrD,IAAI,gBAAgB,CAAC,aAAa,EAAE,IAAI,aAAa,mBAAmB,EAAE;oBACxE,aAAa,EAAE,GAAG,aAAa,mBAAmB;gBACpD;gBAEA,oBAAoB;gBAEpB,yFAAyF;gBACzF,OAAO;YACT,EAAE,OAAO,KAAK;gBACZ,sEAAsE;gBACtE,QAAQ,KAAK,CAAC,2BAA2B;gBACzC,MAAM,KAAK,6CAA6C;YAC1D,SAAU;gBACR,aAAa;YACf;QACF;oDAAG,EAAE;IAEL,mBAAmB;IACnB,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE;YACjC,aAAa;YACb,SAAS;YAET,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,oHAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,YAAY;gBAC9D,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,SAAS,UAAU,EAAE;gBACpE;gBAEA,MAAM,eAAe,MAAM,SAAS,IAAI;gBACxC,8CAA8C;gBAC9C,MAAM,eAAe,aAAa,QAAQ,IAAI;gBAC9C,oBAAoB;gBACpB,OAAO;YACT,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAC9C,QAAQ,KAAK,CAAC,4BAA4B;gBAC1C,OAAO;YACT,SAAU;gBACR,aAAa;YACf;QACF;sDAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR;QACF;oCAAG;QAAC;KAAe;IAEnB,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA,SAAS;QACT;IACF;AACF;GAjLgB","debugId":null}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/utils/diffAlgorithm.ts"],"sourcesContent":["import { DiffResult, FieldSchema, ChangeType } from '../types/diff';\n\n/**\n * Core structured template diff algorithm\n * Handles nested objects, arrays, and maintains schema field ordering\n */\n\n/**\n * Determine the type of change between two values\n */\nexport function determineChangeType(leftValue: any, rightValue: any): ChangeType {\n  const leftEmpty = isEmptyValue(leftValue);\n  const rightEmpty = isEmptyValue(rightValue);\n  \n  if (leftEmpty && rightEmpty) return 'NOT_SET';\n  if (leftEmpty && !rightEmpty) return 'ADDED';\n  if (!leftEmpty && rightEmpty) return 'REMOVED';\n  if (deepEqual(leftValue, rightValue)) return 'UNCHANGED';\n  return 'MODIFIED';\n}\n\n/**\n * Check if a value is considered empty\n */\nexport function isEmptyValue(value: any): boolean {\n  return value === null || \n         value === undefined || \n         value === '' || \n         (Array.isArray(value) && value.length === 0) ||\n         (typeof value === 'object' && value !== null && Object.keys(value).length === 0);\n}\n\n/**\n * Deep equality comparison for values\n */\nexport function deepEqual(a: any, b: any): boolean {\n  if (a === b) return true;\n  \n  if (a == null || b == null) return a === b;\n  \n  if (typeof a !== typeof b) return false;\n  \n  if (typeof a === 'object') {\n    if (Array.isArray(a) !== Array.isArray(b)) return false;\n    \n    if (Array.isArray(a)) {\n      if (a.length !== b.length) return false;\n      return a.every((val, index) => deepEqual(val, b[index]));\n    }\n    \n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    \n    if (keysA.length !== keysB.length) return false;\n    \n    return keysA.every(key => keysB.includes(key) && deepEqual(a[key], b[key]));\n  }\n  \n  return false;\n}\n\n/**\n * Generate field schema from cell line data structure\n * Uses the actual data to infer field types and create consistent ordering\n */\nexport function generateFieldSchema(sampleData: any): FieldSchema[] {\n  const schema: FieldSchema[] = [];\n  \n  if (!sampleData || typeof sampleData !== 'object') {\n    return schema;\n  }\n  \n  // Extract all fields and sort them for consistent ordering\n  const fieldNames = Object.keys(sampleData).sort();\n  \n  for (const fieldName of fieldNames) {\n    // Skip metadata fields\n    if (['success', 'version_number', 'performance', 'created_on', 'created_by', 'change_summary'].includes(fieldName)) {\n      continue;\n    }\n    \n    const value = sampleData[fieldName];\n    const fieldSchema = createFieldSchema(fieldName, fieldName, value);\n    schema.push(fieldSchema);\n  }\n  \n  return schema;\n}\n\n/**\n * Create schema for a single field based on its value\n */\nfunction createFieldSchema(key: string, path: string, value: any): FieldSchema {\n  const schema: FieldSchema = {\n    key,\n    path,\n    type: inferFieldType(value),\n    label: formatFieldLabel(key)\n  };\n  \n  // Handle nested objects\n  if (schema.type === 'object' && value && typeof value === 'object' && !Array.isArray(value)) {\n    schema.children = Object.keys(value).sort().map(childKey => \n      createFieldSchema(childKey, `${path}.${childKey}`, value[childKey])\n    );\n  }\n  \n  // Handle arrays\n  if (schema.type === 'array' && Array.isArray(value) && value.length > 0) {\n    const firstItem = value[0];\n    if (typeof firstItem === 'object' && firstItem !== null) {\n      schema.itemSchema = Object.keys(firstItem).sort().map(itemKey =>\n        createFieldSchema(itemKey, `${path}[].${itemKey}`, firstItem[itemKey])\n      );\n    }\n  }\n  \n  return schema;\n}\n\n/**\n * Infer field type from value\n */\nfunction inferFieldType(value: any): 'string' | 'number' | 'boolean' | 'object' | 'array' {\n  if (value === null || value === undefined) return 'string'; // Default for empty values\n  if (typeof value === 'boolean') return 'boolean';\n  if (typeof value === 'number') return 'number';\n  if (Array.isArray(value)) return 'array';\n  if (typeof value === 'object') return 'object';\n  return 'string';\n}\n\n/**\n * Format field name for display\n */\nfunction formatFieldLabel(fieldName: string): string {\n  return fieldName\n    .replace(/([A-Z])/g, ' $1')\n    .replace(/^./, str => str.toUpperCase())\n    .replace(/_/g, ' ')\n    .trim();\n}\n\n/**\n * Main diff generation function\n * Compares two cell line versions and produces structured difference data\n */\nexport function generateStructuredDiff(\n  leftVersion: any,\n  rightVersion: any,\n  schema?: FieldSchema[]\n): DiffResult[] {\n  \n  // Extract metadata from version responses\n  const leftData = leftVersion?.metadata || leftVersion || {};\n  const rightData = rightVersion?.metadata || rightVersion || {};\n  \n  // Generate schema if not provided\n  const fieldSchema = schema || generateFieldSchema({ ...leftData, ...rightData });\n  \n  return processSchemaFields(leftData, rightData, fieldSchema);\n}\n\n/**\n * Process all schema fields to ensure complete visibility\n */\nfunction processSchemaFields(\n  leftData: any,\n  rightData: any,\n  schemaFields: FieldSchema[]\n): DiffResult[] {\n  return schemaFields.map(field => {\n    const leftValue = getFieldValue(leftData, field.path);\n    const rightValue = getFieldValue(rightData, field.path);\n    \n    return generateFieldDiff(field, leftValue, rightValue);\n  });\n}\n\n/**\n * Get field value using dot notation path\n */\nfunction getFieldValue(data: any, path: string): any {\n  if (!data || !path) return null;\n  \n  const keys = path.split('.');\n  let value = data;\n  \n  for (const key of keys) {\n    if (value && typeof value === 'object' && key in value) {\n      value = value[key];\n    } else {\n      return null;\n    }\n  }\n  \n  return value;\n}\n\n/**\n * Generate diff result for a single field\n */\nfunction generateFieldDiff(\n  field: FieldSchema,\n  leftValue: any,\n  rightValue: any\n): DiffResult {\n  const changeType = determineChangeType(leftValue, rightValue);\n  \n  if (field.type === 'object') {\n    return processNestedObject(field, leftValue, rightValue);\n  } else if (field.type === 'array') {\n    return processArrayField(field, leftValue, rightValue);\n  } else {\n    return processPrimitiveField(field, leftValue, rightValue, changeType);\n  }\n}\n\n/**\n * Process primitive field comparison\n */\nfunction processPrimitiveField(\n  field: FieldSchema,\n  leftValue: any,\n  rightValue: any,\n  changeType: ChangeType\n): DiffResult {\n  return {\n    fieldPath: field.path,\n    changeType,\n    leftValue,\n    rightValue\n  };\n}\n\n/**\n * Process nested object field comparison\n */\nfunction processNestedObject(\n  field: FieldSchema,\n  leftValue: any,\n  rightValue: any\n): DiffResult {\n  const children = field.children?.map(childField => {\n    const leftChild = leftValue?.[childField.key] ?? null;\n    const rightChild = rightValue?.[childField.key] ?? null;\n    return generateFieldDiff(childField, leftChild, rightChild);\n  }) || [];\n  \n  const hasNestedChanges = children.some(child => \n    child.changeType !== 'UNCHANGED' && child.changeType !== 'NOT_SET'\n  );\n  \n  const changeType = determineChangeType(leftValue, rightValue);\n  \n  return {\n    fieldPath: field.path,\n    changeType: hasNestedChanges ? 'MODIFIED' : changeType,\n    leftValue,\n    rightValue,\n    hasNestedChanges,\n    children\n  };\n}\n\n/**\n * Process array field comparison with index-based strategy\n */\nfunction processArrayField(\n  field: FieldSchema,\n  leftArray: any[],\n  rightArray: any[]\n): DiffResult {\n  const leftArr = leftArray || [];\n  const rightArr = rightArray || [];\n  const maxLength = Math.max(leftArr.length, rightArr.length);\n  \n  const children: DiffResult[] = [];\n  \n  for (let i = 0; i < maxLength; i++) {\n    const leftItem = i < leftArr.length ? leftArr[i] : null;\n    const rightItem = i < rightArr.length ? rightArr[i] : null;\n    \n    const itemDiff: DiffResult = {\n      fieldPath: `${field.path}[${i}]`,\n      changeType: determineChangeType(leftItem, rightItem),\n      leftValue: leftItem,\n      rightValue: rightItem\n    };\n    \n    // Process nested object properties within array items\n    if (field.itemSchema && (leftItem || rightItem)) {\n      itemDiff.children = field.itemSchema.map(itemFieldSchema => {\n        const leftProp = leftItem?.[itemFieldSchema.key] ?? null;\n        const rightProp = rightItem?.[itemFieldSchema.key] ?? null;\n        \n        return {\n          fieldPath: `${field.path}[${i}].${itemFieldSchema.key}`,\n          changeType: determineChangeType(leftProp, rightProp),\n          leftValue: leftProp,\n          rightValue: rightProp\n        };\n      });\n      \n      // Check if any nested properties changed\n      const hasNestedChanges = itemDiff.children.some(child => \n        child.changeType !== 'UNCHANGED' && child.changeType !== 'NOT_SET'\n      );\n      \n      if (hasNestedChanges && itemDiff.changeType === 'UNCHANGED') {\n        itemDiff.changeType = 'MODIFIED';\n        itemDiff.hasNestedChanges = true;\n      }\n    }\n    \n    children.push(itemDiff);\n  }\n  \n  const hasChanges = children.some(child => \n    child.changeType !== 'UNCHANGED' && child.changeType !== 'NOT_SET'\n  );\n  \n  return {\n    fieldPath: field.path,\n    changeType: hasChanges ? 'MODIFIED' : determineChangeType(leftArr, rightArr),\n    leftValue: leftArr,\n    rightValue: rightArr,\n    hasNestedChanges: hasChanges,\n    children\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/ArrayComparisonModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\n\ninterface ArrayComparisonModalProps {\n  isOpen: boolean;\n  fieldName: string;\n  fieldPath: string;\n  leftArray: any[];\n  rightArray: any[];\n  leftVersion: string;\n  rightVersion: string;\n  leftCellLine: string;\n  rightCellLine: string;\n  onClose: () => void;\n}\n\ninterface ArrayDiffAnalysis {\n  added: { index: number; item: any }[];\n  removed: { index: number; item: any }[];\n  modified: { leftIndex: number; rightIndex: number; leftItem: any; rightItem: any }[];\n  unchanged: { leftIndex: number; rightIndex: number; item: any }[];\n  summary: {\n    totalChanges: number;\n    addedCount: number;\n    removedCount: number;\n    modifiedCount: number;\n  };\n}\n\nexport function ArrayComparisonModal({\n  isOpen,\n  fieldName,\n  fieldPath,\n  leftArray,\n  rightArray,\n  leftVersion,\n  rightVersion,\n  leftCellLine,\n  rightCellLine,\n  onClose\n}: ArrayComparisonModalProps) {\n  // Handle escape key\n  useEffect(() => {\n    if (!isOpen) return;\n\n    const handleEscapeKey = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKey);\n    return () => document.removeEventListener('keydown', handleEscapeKey);\n  }, [isOpen, onClose]);\n\n  // Lock body scroll when modal is open\n  useEffect(() => {\n    if (!isOpen) return;\n\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.body.style.overflow = originalStyle;\n    };\n  }, [isOpen]);\n\n  // Handle backdrop click\n  const handleBackdropClick = useCallback((e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  }, [onClose]);\n\n  // Analyze array differences\n  const diffAnalysis = useCallback((): ArrayDiffAnalysis => {\n    return analyzeArrayDifferences(leftArray || [], rightArray || []);\n  }, [leftArray, rightArray]);\n\n  const analysis = diffAnalysis();\n\n  if (!isOpen) return null;\n\n  const modalContent = (\n    <div \n      className=\"fixed z-[9999] inset-0\"\n      role=\"dialog\" \n      tabIndex={-1} \n      aria-labelledby=\"array-comparison-modal-title\"\n      onClick={handleBackdropClick}\n      style={{ \n        position: 'fixed', \n        top: 0, \n        left: '280px', // Account for sidebar width\n        right: 0, \n        bottom: 0 \n      }}\n    >\n      {/* Modal Content - positioned absolutely to allow clicks around it */}\n      <div \n        className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white border border-gray-200 shadow-2xl rounded-xl w-full max-w-6xl max-h-[90vh] flex flex-col\"\n        onClick={(e) => e.stopPropagation()}\n        style={{ backgroundColor: 'white' }}\n      >\n        {/* Simplified Modal Header - just field name */}\n        <div className=\"py-4 px-6 border-b border-gray-200\">\n          <h3 id=\"array-comparison-modal-title\" className=\"text-lg text-gray-800\">\n            {fieldName}\n          </h3>\n        </div>\n        \n        {/* Modal Body - just the array comparison */}\n        <div className=\"flex-1 p-6 overflow-hidden\">\n          <ArrayDiffViewer \n            leftArray={leftArray || []}\n            rightArray={rightArray || []}\n            leftCellLine={leftCellLine}\n            leftVersion={leftVersion}\n            rightCellLine={rightCellLine}\n            rightVersion={rightVersion}\n            analysis={analysis}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  // Use Portal to render the modal directly to document.body\n  return typeof window !== 'undefined' ? createPortal(modalContent, document.body) : null;\n}\n\n/**\n * Array Diff Viewer Component - Side-by-side comparison\n */\ninterface ArrayDiffViewerProps {\n  leftArray: any[];\n  rightArray: any[];\n  leftCellLine: string;\n  leftVersion: string;\n  rightCellLine: string;\n  rightVersion: string;\n  analysis: ArrayDiffAnalysis;\n}\n\nfunction ArrayDiffViewer({ leftArray, rightArray, leftCellLine, leftVersion, rightCellLine, rightVersion, analysis }: ArrayDiffViewerProps) {\n  const maxLength = Math.max(leftArray.length, rightArray.length);\n\n  return (\n    <div className=\"array-diff-viewer h-full flex flex-col\">\n      {/* Simplified Array Comparison Grid - no summary */}\n      <div className=\"flex-1 grid grid-cols-2 gap-6 overflow-hidden\">\n        {/* Left Panel */}\n        <div className=\"flex flex-col border border-gray-200 rounded-lg\">\n          <div className=\"px-4 py-3 bg-gray-50 border-b border-gray-200 rounded-t-lg\">\n            <h4 className=\"text-sm font-semibold text-gray-700\">\n              {leftCellLine} (v{leftVersion})\n            </h4>\n          </div>\n          <div className=\"flex-1 overflow-y-auto\">\n            <ArrayItemList \n              items={leftArray}\n              analysis={analysis}\n              side=\"left\"\n              maxLength={maxLength}\n            />\n          </div>\n        </div>\n        \n        {/* Right Panel */}\n        <div className=\"flex flex-col border border-gray-200 rounded-lg\">\n          <div className=\"px-4 py-3 bg-gray-50 border-b border-gray-200 rounded-t-lg\">\n            <h4 className=\"text-sm font-semibold text-gray-700\">\n              {rightCellLine} (v{rightVersion})\n            </h4>\n          </div>\n          <div className=\"flex-1 overflow-y-auto\">\n            <ArrayItemList \n              items={rightArray}\n              analysis={analysis}\n              side=\"right\"\n              maxLength={maxLength}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Array Item List Component\n */\ninterface ArrayItemListProps {\n  items: any[];\n  analysis: ArrayDiffAnalysis;\n  side: 'left' | 'right';\n  maxLength: number;\n}\n\nfunction ArrayItemList({ items, analysis, side, maxLength }: ArrayItemListProps) {\n  const getDifferenceType = (index: number): string => {\n    // Check if item was added\n    const isAdded = analysis.added.some(a => a.index === index);\n    if (isAdded && side === 'right') return 'added';\n    \n    // Check if item was removed\n    const isRemoved = analysis.removed.some(r => r.index === index);\n    if (isRemoved && side === 'left') return 'removed';\n    \n    // Check if item was modified\n    const isModified = side === 'left' \n      ? analysis.modified.some(m => m.leftIndex === index)\n      : analysis.modified.some(m => m.rightIndex === index);\n    if (isModified) return 'modified';\n    \n    // Check if item is unchanged\n    const isUnchanged = side === 'left'\n      ? analysis.unchanged.some(u => u.leftIndex === index)\n      : analysis.unchanged.some(u => u.rightIndex === index);\n    if (isUnchanged) return 'unchanged';\n    \n    return 'unchanged';\n  };\n\n  return (\n    <div className=\"array-item-list p-2\">\n      {Array.from({ length: maxLength }, (_, index) => {\n        const item = items[index];\n        const diffType = getDifferenceType(index);\n        const isEmpty = item === undefined;\n        \n        return (\n          <div \n            key={index} \n            className={`array-item flex items-start gap-3 p-3 mb-2 rounded-md border ${getItemStyling(diffType, isEmpty)}`}\n          >\n            <span className=\"item-index text-xs font-mono text-gray-500 flex-shrink-0 min-w-[40px]\">\n              [{index}]:\n            </span>\n            <div className=\"item-content flex-1 text-sm\">\n              {isEmpty ? (\n                <span className=\"text-gray-400 italic\">[Not present]</span>\n              ) : (\n                <ItemRenderer item={item} />\n              )}\n            </div>\n            {diffType !== 'unchanged' && !isEmpty && (\n              <DifferenceLabel type={diffType} />\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n/**\n * Item Renderer Component\n */\ninterface ItemRendererProps {\n  item: any;\n}\n\nfunction ItemRenderer({ item }: ItemRendererProps) {\n  const renderValue = (value: any): string => {\n    if (value === null || value === undefined) {\n      return '[NOT SET]';\n    }\n    \n    if (typeof value === 'string') {\n      return value;\n    }\n    \n    if (typeof value === 'object') {\n      return JSON.stringify(value, null, 2);\n    }\n    \n    return String(value);\n  };\n\n  return (\n    <pre className=\"whitespace-pre-wrap font-mono text-xs leading-relaxed\">\n      {renderValue(item)}\n    </pre>\n  );\n}\n\n/**\n * Difference Label Component\n */\ninterface DifferenceLabelProps {\n  type: string;\n}\n\nfunction DifferenceLabel({ type }: DifferenceLabelProps) {\n  const labels = {\n    added: { text: 'Added', class: 'bg-green-100 text-green-800' },\n    removed: { text: 'Removed', class: 'bg-red-100 text-red-800' },\n    modified: { text: 'Modified', class: 'bg-orange-100 text-orange-800' },\n    unchanged: { text: 'Unchanged', class: 'bg-gray-100 text-gray-600' }\n  };\n\n  const label = labels[type as keyof typeof labels] || labels.unchanged;\n\n  return (\n    <span className={`px-2 py-1 text-xs rounded-full ${label.class}`}>\n      {label.text}\n    </span>\n  );\n}\n\n/**\n * Helper Functions\n */\n\nfunction analyzeArrayDifferences(leftArray: any[], rightArray: any[]): ArrayDiffAnalysis {\n  const analysis: ArrayDiffAnalysis = {\n    added: [],\n    removed: [],\n    modified: [],\n    unchanged: [],\n    summary: { totalChanges: 0, addedCount: 0, removedCount: 0, modifiedCount: 0 }\n  };\n\n  const maxLength = Math.max(leftArray.length, rightArray.length);\n\n  for (let i = 0; i < maxLength; i++) {\n    const leftItem = leftArray[i];\n    const rightItem = rightArray[i];\n    \n    const leftExists = i < leftArray.length;\n    const rightExists = i < rightArray.length;\n\n    if (!leftExists && rightExists) {\n      // Item added in right\n      analysis.added.push({ index: i, item: rightItem });\n      analysis.summary.addedCount++;\n    } else if (leftExists && !rightExists) {\n      // Item removed from left\n      analysis.removed.push({ index: i, item: leftItem });\n      analysis.summary.removedCount++;\n    } else if (leftExists && rightExists) {\n      // Both exist, check if modified\n      if (!deepEqual(leftItem, rightItem)) {\n        analysis.modified.push({ \n          leftIndex: i, \n          rightIndex: i, \n          leftItem, \n          rightItem \n        });\n        analysis.summary.modifiedCount++;\n      } else {\n        analysis.unchanged.push({ \n          leftIndex: i, \n          rightIndex: i, \n          item: leftItem \n        });\n      }\n    }\n  }\n\n  analysis.summary.totalChanges = \n    analysis.summary.addedCount + \n    analysis.summary.removedCount + \n    analysis.summary.modifiedCount;\n\n  return analysis;\n}\n\nfunction deepEqual(a: any, b: any): boolean {\n  if (a === b) return true;\n  \n  if (a == null || b == null) return a === b;\n  \n  if (typeof a !== typeof b) return false;\n  \n  if (typeof a === 'object') {\n    if (Array.isArray(a) !== Array.isArray(b)) return false;\n    \n    if (Array.isArray(a)) {\n      if (a.length !== b.length) return false;\n      return a.every((item, index) => deepEqual(item, b[index]));\n    }\n    \n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    \n    if (keysA.length !== keysB.length) return false;\n    \n    return keysA.every(key => deepEqual(a[key], b[key]));\n  }\n  \n  return false;\n}\n\nfunction getItemStyling(diffType: string, isEmpty: boolean): string {\n  if (isEmpty) {\n    return 'border-gray-200 bg-gray-50';\n  }\n  \n  switch (diffType) {\n    case 'added':\n      return 'border-green-200 bg-green-50';\n    case 'removed':\n      return 'border-red-200 bg-red-50';\n    case 'modified':\n      return 'border-orange-200 bg-orange-50';\n    default:\n      return 'border-gray-200 bg-white';\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1186, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/hooks/useArrayModal.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\n\ninterface ArrayModalState {\n  isOpen: boolean;\n  fieldName: string;\n  fieldPath: string;\n  leftArray: any[];\n  rightArray: any[];\n  leftVersion: string;\n  rightVersion: string;\n  leftCellLine: string;\n  rightCellLine: string;\n}\n\ninterface ArrayModalContextData {\n  leftVersionId?: string;\n  rightVersionId?: string;\n  leftCellLineId?: string;\n  rightCellLineId?: string;\n}\n\nexport function useArrayModal(contextData?: ArrayModalContextData) {\n  const [modalState, setModalState] = useState<ArrayModalState>({\n    isOpen: false,\n    fieldName: '',\n    fieldPath: '',\n    leftArray: [],\n    rightArray: [],\n    leftVersion: '',\n    rightVersion: '',\n    leftCellLine: '',\n    rightCellLine: ''\n  });\n\n  const openModal = useCallback((\n    fieldPath: string,\n    leftArray: any[],\n    rightArray: any[],\n    fieldName: string,\n    additionalContext?: Partial<ArrayModalState>\n  ) => {\n    setModalState({\n      isOpen: true,\n      fieldPath,\n      fieldName,\n      leftArray: leftArray || [],\n      rightArray: rightArray || [],\n      leftVersion: additionalContext?.leftVersion || contextData?.leftVersionId || 'Unknown',\n      rightVersion: additionalContext?.rightVersion || contextData?.rightVersionId || 'Unknown',\n      leftCellLine: additionalContext?.leftCellLine || contextData?.leftCellLineId || 'Unknown',\n      rightCellLine: additionalContext?.rightCellLine || contextData?.rightCellLineId || 'Unknown'\n    });\n  }, [contextData]);\n\n  const closeModal = useCallback(() => {\n    setModalState(prev => ({ ...prev, isOpen: false }));\n  }, []);\n\n  return { \n    modalState, \n    openModal, \n    closeModal \n  };\n} "],"names":[],"mappings":";;;AAEA;;AAFA;;AAuBO,SAAS,cAAc,WAAmC;;IAC/D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB;QAC5D,QAAQ;QACR,WAAW;QACX,WAAW;QACX,WAAW,EAAE;QACb,YAAY,EAAE;QACd,aAAa;QACb,cAAc;QACd,cAAc;QACd,eAAe;IACjB;IAEA,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;gDAAE,CAC5B,WACA,WACA,YACA,WACA;YAEA,cAAc;gBACZ,QAAQ;gBACR;gBACA;gBACA,WAAW,aAAa,EAAE;gBAC1B,YAAY,cAAc,EAAE;gBAC5B,aAAa,mBAAmB,eAAe,aAAa,iBAAiB;gBAC7E,cAAc,mBAAmB,gBAAgB,aAAa,kBAAkB;gBAChF,cAAc,mBAAmB,gBAAgB,aAAa,kBAAkB;gBAChF,eAAe,mBAAmB,iBAAiB,aAAa,mBAAmB;YACrF;QACF;+CAAG;QAAC;KAAY;IAEhB,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;iDAAE;YAC7B;yDAAc,CAAA,OAAQ,CAAC;wBAAE,GAAG,IAAI;wBAAE,QAAQ;oBAAM,CAAC;;QACnD;gDAAG,EAAE;IAEL,OAAO;QACL;QACA;QACA;IACF;AACF;GA1CgB","debugId":null}},
    {"offset": {"line": 1249, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/DiffField.tsx"],"sourcesContent":["'use client';\n\nimport React, { useMemo } from 'react';\nimport { DiffResult } from '../types/diff';\nimport { ArrayComparisonModal } from './ArrayComparisonModal';\nimport { useArrayModal } from '../hooks/useArrayModal';\n\ninterface DiffFieldProps {\n  diffResult: DiffResult;\n  isExpanded?: boolean;\n  onToggleExpansion?: () => void;\n  indentLevel?: number;\n  showDifferencesOnly?: boolean;\n  isVirtualized?: boolean;\n  leftCellLine?: string | null;\n  leftVersion?: string | null;\n  rightCellLine?: string | null;\n  rightVersion?: string | null;\n}\n\nexport function DiffField({ \n  diffResult, \n  isExpanded = false, \n  onToggleExpansion,\n  indentLevel = 0, \n  showDifferencesOnly,\n  isVirtualized = false,\n  leftCellLine,\n  leftVersion,\n  rightCellLine,\n  rightVersion\n}: DiffFieldProps) {\n  const { fieldPath, changeType, leftValue, rightValue, children } = diffResult;\n  \n  // Get the field name (last part of the path)\n  const fieldName = fieldPath.split('.').pop() || fieldPath;\n  \n  // Check if this is an array field\n  const isArray = Array.isArray(leftValue) || Array.isArray(rightValue);\n  \n  // Check if this is a nested object (has children)\n  const isNested = children && children.length > 0;\n  \n  // Check if field is incomplete (both values are empty/null/undefined)\n  const isFieldEmpty = (value: any) => value === null || value === undefined || value === '';\n  const isIncomplete = isFieldEmpty(leftValue) && isFieldEmpty(rightValue);\n  \n  // Get highlight class based on change type, but override for incomplete fields\n  const highlightClass = isIncomplete ? 'diff-incomplete' : getHighlightClass(changeType);\n  \n  // Create context data for array modal\n  const contextData = useMemo(() => ({\n    leftVersionId: leftVersion || undefined,\n    rightVersionId: rightVersion || undefined,\n    leftCellLineId: leftCellLine || undefined,\n    rightCellLineId: rightCellLine || undefined,\n  }), [leftVersion, rightVersion, leftCellLine, rightCellLine]);\n\n  const { modalState, openModal, closeModal } = useArrayModal(contextData);\n\n  // Handle array fields with modal-based comparison\n  if (isArray) {\n    const leftArray = Array.isArray(leftValue) ? leftValue : [];\n    const rightArray = Array.isArray(rightValue) ? rightValue : [];\n    const hasChanges = !arraysEqual(leftArray, rightArray);\n    \n    return (\n      <>\n        <div className={`diff-field ${highlightClass} ${isVirtualized ? 'virtualized-item' : ''}`} \n             style={{ marginLeft: `${indentLevel * 12}px` }}>\n          <div className=\"field-row p-2\">\n            <div className=\"field-layout\">\n              <div className=\"field-content\">\n                <div className=\"field-name-row\">\n                  <span className=\"field-name\">{fieldName} (Array)</span>\n                </div>\n                <div className=\"field-values-row\">\n                  {/* Empty left column */}\n                  <div></div>\n                  {/* Empty middle column */}\n                  <div></div>\n                  {/* Button in right column - fills entire container */}\n                  <button \n                    onClick={() => openModal(fieldPath, leftArray, rightArray, fieldName)}\n                    className=\"field-value-container right-value w-full h-full flex justify-end items-center text-sm font-medium text-gray-900 hover:text-black hover:bg-blue-100 transition-all duration-150 focus:outline-none cursor-pointer\"\n                  >\n                    View comparison →\n                    {hasChanges && (\n                      <span className=\"ml-2 inline-flex items-center gap-1\">\n                        <div className=\"w-2 h-2 bg-orange-400 rounded-full\"></div>\n                        <span className=\"text-xs text-orange-600 font-medium\">Changes</span>\n                      </span>\n                    )}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Array Comparison Modal */}\n        <ArrayComparisonModal\n          isOpen={modalState.isOpen}\n          fieldName={modalState.fieldName}\n          fieldPath={modalState.fieldPath}\n          leftArray={modalState.leftArray}\n          rightArray={modalState.rightArray}\n          leftVersion={modalState.leftVersion}\n          rightVersion={modalState.rightVersion}\n          leftCellLine={modalState.leftCellLine}\n          rightCellLine={modalState.rightCellLine}\n          onClose={closeModal}\n        />\n      </>\n    );\n  }\n  \n  return (\n    <div className={`diff-field ${highlightClass} ${isVirtualized ? 'virtualized-item' : ''} ${isIncomplete ? 'incomplete-field' : ''}`} \n         style={{ marginLeft: `${indentLevel * 12}px` }}>\n      {/* Field row with improved layout */}\n      <div className=\"field-row p-2\">\n        <div className=\"field-layout\">\n          {/* Expansion indicator for nested objects */}\n          {isNested && (\n            <div className=\"expansion-section\">\n              <button\n                onClick={onToggleExpansion}\n                className=\"expansion-indicator text-gray-600 hover:text-gray-800 focus:outline-none p-1\"\n                aria-label={isExpanded ? `Collapse ${fieldName}` : `Expand ${fieldName}`}\n              >\n                <span className={`transform transition-transform duration-200 ${isExpanded ? 'rotate-90' : ''}`}>\n                  ▶\n                </span>\n              </button>\n            </div>\n          )}\n          \n          {/* Field name and values side by side */}\n          <div className=\"field-content\">\n            <div className=\"field-name-row\">\n              <span className={`field-name ${isIncomplete ? 'text-gray-400' : ''}`}>{fieldName}</span>\n            </div>\n            <div className=\"field-values-row\">\n              {/* Spacer column */}\n              <div></div>\n              \n              {/* Left value */}\n              <div className=\"field-value-container left-value\">\n                <span className=\"field-value field-text-content\">\n                  {formatFieldValue(leftValue)}\n                </span>\n              </div>\n              \n              {/* Right value */}\n              <div className=\"field-value-container right-value\">\n                <span className=\"field-value field-text-content\">\n                  {formatFieldValue(rightValue)}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Nested children */}\n      {isNested && isExpanded && !isVirtualized && (\n        <div className=\"nested-children ml-6 border-l border-gray-200 pl-3\">\n          {children!.map((childDiff) => (\n            <DiffField\n              key={childDiff.fieldPath}\n              diffResult={childDiff}\n              indentLevel={indentLevel + 1}\n              showDifferencesOnly={showDifferencesOnly}\n              isVirtualized={isVirtualized}\n              leftCellLine={leftCellLine}\n              leftVersion={leftVersion}\n              rightCellLine={rightCellLine}\n              rightVersion={rightVersion}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n/**\n * Format a value for display - Enhanced for full content visibility\n */\nfunction formatFieldValue(value: any): string {\n  if (value === null || value === undefined || value === '') {\n    return ''; // Empty cell instead of [NOT SET]\n  }\n  \n  if (typeof value === 'string') {\n    return value; // No truncation - show full string content\n  }\n  \n  if (typeof value === 'number') {\n    return value.toString();\n  }\n  \n  if (typeof value === 'boolean') {\n    return value ? 'true' : 'false';\n  }\n  \n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      return '[]';\n    }\n    // Note: Array content will be handled by dedicated array display logic\n    return `[${value.length} items]`;\n  }\n  \n  if (typeof value === 'object') {\n    const keys = Object.keys(value);\n    if (keys.length === 0) {\n      return '{}';\n    }\n    // Show full object content for simple objects with few fields\n    if (keys.length <= 3) {\n      const summary = keys.map(key => {\n        const fieldValue = value[key];\n        const displayValue = typeof fieldValue === 'string' \n          ? fieldValue // No truncation for string values\n          : String(fieldValue);\n        return `${key}: ${displayValue}`;\n      }).join(', ');\n      return `{ ${summary} }`;\n    }\n    return `{${keys.length} fields}`;\n  }\n  \n  return String(value); // No truncation - show full content\n}\n\n/**\n * Helper function to compare arrays for equality\n */\nfunction arraysEqual(a: any[], b: any[]): boolean {\n  if (!Array.isArray(a) || !Array.isArray(b)) return false;\n  if (a.length !== b.length) return false;\n  \n  return a.every((item, index) => deepEqual(item, b[index]));\n}\n\nfunction deepEqual(a: any, b: any): boolean {\n  if (a === b) return true;\n  \n  if (a == null || b == null) return a === b;\n  \n  if (typeof a !== typeof b) return false;\n  \n  if (typeof a === 'object') {\n    if (Array.isArray(a) !== Array.isArray(b)) return false;\n    \n    if (Array.isArray(a)) {\n      if (a.length !== b.length) return false;\n      return a.every((item, index) => deepEqual(item, b[index]));\n    }\n    \n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    \n    if (keysA.length !== keysB.length) return false;\n    \n    return keysA.every(key => deepEqual(a[key], b[key]));\n  }\n  \n  return false;\n}\n\n/**\n * Get CSS class for highlighting based on change type\n */\nfunction getHighlightClass(changeType: string): string {\n  switch (changeType) {\n    case 'MODIFIED':\n      return 'diff-modified';\n    case 'ADDED':\n      return 'diff-added';\n    case 'REMOVED':\n      return 'diff-removed';\n    case 'NOT_SET':\n      return 'diff-not-set';\n    case 'UNCHANGED':\n    default:\n      return 'diff-unchanged';\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1663, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/hooks/useNestedObjectState.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\n\ninterface NestedObjectState {\n  expandedFields: Set<string>;\n  toggleExpansion: (fieldPath: string) => void;\n  isExpanded: (fieldPath: string) => boolean;\n  expandAll: () => void;\n  collapseAll: () => void;\n  setExpanded: (fieldPath: string, expanded: boolean) => void;\n}\n\nexport const useNestedObjectState = (defaultExpanded?: string[]): NestedObjectState => {\n  const [expandedFields, setExpandedFields] = useState<Set<string>>(\n    new Set(defaultExpanded || [])\n  );\n  \n  const toggleExpansion = useCallback((fieldPath: string) => {\n    setExpandedFields(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(fieldPath)) {\n        newSet.delete(fieldPath);\n      } else {\n        newSet.add(fieldPath);\n      }\n      return newSet;\n    });\n  }, []);\n  \n  const isExpanded = useCallback((fieldPath: string) => {\n    return expandedFields.has(fieldPath);\n  }, [expandedFields]);\n  \n  const expandAll = useCallback(() => {\n    // This would need to be called with all available field paths\n    // For now, we'll implement a simple version\n    setExpandedFields(new Set());\n  }, []);\n  \n  const collapseAll = useCallback(() => {\n    setExpandedFields(new Set());\n  }, []);\n  \n  const setExpanded = useCallback((fieldPath: string, expanded: boolean) => {\n    setExpandedFields(prev => {\n      const newSet = new Set(prev);\n      if (expanded) {\n        newSet.add(fieldPath);\n      } else {\n        newSet.delete(fieldPath);\n      }\n      return newSet;\n    });\n  }, []);\n  \n  return { \n    expandedFields, \n    toggleExpansion, \n    isExpanded, \n    expandAll, \n    collapseAll, \n    setExpanded \n  };\n}; "],"names":[],"mappings":";;;AAEA;;AAFA;;AAaO,MAAM,uBAAuB,CAAC;;IACnC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EACjD,IAAI,IAAI,mBAAmB,EAAE;IAG/B,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;6DAAE,CAAC;YACnC;qEAAkB,CAAA;oBAChB,MAAM,SAAS,IAAI,IAAI;oBACvB,IAAI,OAAO,GAAG,CAAC,YAAY;wBACzB,OAAO,MAAM,CAAC;oBAChB,OAAO;wBACL,OAAO,GAAG,CAAC;oBACb;oBACA,OAAO;gBACT;;QACF;4DAAG,EAAE;IAEL,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;wDAAE,CAAC;YAC9B,OAAO,eAAe,GAAG,CAAC;QAC5B;uDAAG;QAAC;KAAe;IAEnB,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE;YAC5B,8DAA8D;YAC9D,4CAA4C;YAC5C,kBAAkB,IAAI;QACxB;sDAAG,EAAE;IAEL,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;yDAAE;YAC9B,kBAAkB,IAAI;QACxB;wDAAG,EAAE;IAEL,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;yDAAE,CAAC,WAAmB;YAClD;iEAAkB,CAAA;oBAChB,MAAM,SAAS,IAAI,IAAI;oBACvB,IAAI,UAAU;wBACZ,OAAO,GAAG,CAAC;oBACb,OAAO;wBACL,OAAO,MAAM,CAAC;oBAChB;oBACA,OAAO;gBACT;;QACF;wDAAG,EAAE;IAEL,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GAnDa","debugId":null}},
    {"offset": {"line": 1741, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/utils/cacheManager.ts"],"sourcesContent":["// @ts-ignore - LRU cache types may not be fully compatible\nimport LRUCache from 'lru-cache';\nimport { DiffResult } from '../types/diff';\nimport { CellLineData } from '../types/editor';\n\nexport interface VersionCacheEntry {\n  data: CellLineData;\n  timestamp: number;\n}\n\nexport interface DiffCacheEntry {\n  diff: DiffResult[];\n  timestamp: number;\n}\n\nexport interface SchemaEntry {\n  schema: any[];\n  timestamp: number;\n}\n\nexport interface CacheStats {\n  versionCache: {\n    size: number;\n    maxSize: number;\n    hitCount: number;\n    missCount: number;\n    hitRate: number;\n  };\n  diffCache: {\n    size: number;\n    maxSize: number;\n    hitCount: number;\n    missCount: number;\n    hitRate: number;\n  };\n  totalMemoryUsage: number;\n}\n\n/**\n * High-performance multi-level cache manager for version control data\n * Targets: Version cache hit rate >80%, Diff cache hit rate >90%\n */\nexport class CacheManager {\n  private versionCache: LRUCache<string, VersionCacheEntry>;\n  private diffCache: LRUCache<string, DiffCacheEntry>;\n  private schemaCache: Map<string, SchemaEntry>;\n  private fetchPromises: Map<string, Promise<CellLineData>>;\n  \n  // Performance tracking\n  private versionHits = 0;\n  private versionMisses = 0;\n  private diffHits = 0;\n  private diffMisses = 0;\n\n  constructor(\n    versionCacheSize: number = 50,\n    diffCacheSize: number = 30,\n    cacheTTL: number = 600000 // 10 minutes\n  ) {\n    this.versionCache = new LRUCache({\n      max: versionCacheSize,\n      ttl: cacheTTL,\n      sizeCalculation: (entry: VersionCacheEntry) => {\n        // Estimate memory usage\n        return JSON.stringify(entry.data).length * 2; // UTF-16 factor\n      },\n      maxSize: 100 * 1024 * 1024, // 100MB max\n    });\n\n    this.diffCache = new LRUCache({\n      max: diffCacheSize,\n      ttl: cacheTTL,\n      sizeCalculation: (entry: DiffCacheEntry) => {\n        return JSON.stringify(entry.diff).length * 2;\n      },\n      maxSize: 50 * 1024 * 1024, // 50MB max\n    });\n\n    this.schemaCache = new Map();\n    this.fetchPromises = new Map();\n\n    // Cleanup interval\n    if (typeof window !== 'undefined') {\n      setInterval(() => this.cleanup(), 60000); // Every minute\n    }\n  }\n\n  /**\n   * Get version data with caching and deduplication\n   */\n  async getVersion(cellLineId: string, versionId: string): Promise<CellLineData> {\n    const cacheKey = `${cellLineId}:${versionId}`;\n    \n    // Check cache first\n    const cached = this.versionCache.get(cacheKey);\n    if (cached) {\n      this.versionHits++;\n      return cached.data;\n    }\n\n    this.versionMisses++;\n\n    // Check for in-flight request to prevent duplicate fetches\n    const existingPromise = this.fetchPromises.get(cacheKey);\n    if (existingPromise) {\n      return existingPromise;\n    }\n\n    // Create fetch promise\n    const fetchPromise = this.fetchVersionFromAPI(cellLineId, versionId)\n      .then(data => {\n        // Cache the result\n        this.versionCache.set(cacheKey, {\n          data,\n          timestamp: Date.now()\n        });\n        \n        // Remove from in-flight promises\n        this.fetchPromises.delete(cacheKey);\n        \n        return data;\n      })\n      .catch(error => {\n        // Remove from in-flight promises on error\n        this.fetchPromises.delete(cacheKey);\n        throw error;\n      });\n\n    this.fetchPromises.set(cacheKey, fetchPromise);\n    return fetchPromise;\n  }\n\n  /**\n   * Get diff result with bidirectional caching\n   */\n  getDiff(leftVersionId: string, rightVersionId: string): DiffResult[] | null {\n    const cacheKey = this.getDiffCacheKey(leftVersionId, rightVersionId);\n    const cached = this.diffCache.get(cacheKey);\n    \n    if (cached) {\n      this.diffHits++;\n      return cached.diff;\n    }\n    \n    this.diffMisses++;\n    return null;\n  }\n\n  /**\n   * Store diff result in cache\n   */\n  setDiff(leftVersionId: string, rightVersionId: string, diff: DiffResult[]): void {\n    const cacheKey = this.getDiffCacheKey(leftVersionId, rightVersionId);\n    this.diffCache.set(cacheKey, {\n      diff,\n      timestamp: Date.now()\n    });\n  }\n\n  /**\n   * Get or set schema data\n   */\n  getSchema(schemaKey: string): any[] | null {\n    const entry = this.schemaCache.get(schemaKey);\n    if (entry && Date.now() - entry.timestamp < 3600000) { // 1 hour TTL\n      return entry.schema;\n    }\n    return null;\n  }\n\n  setSchema(schemaKey: string, schema: any[]): void {\n    this.schemaCache.set(schemaKey, {\n      schema,\n      timestamp: Date.now()\n    });\n  }\n\n  /**\n   * Invalidate cache entries\n   */\n  invalidateVersion(cellLineId?: string, versionId?: string): void {\n    if (!cellLineId) {\n      this.versionCache.clear();\n      return;\n    }\n\n    if (versionId) {\n      const key = `${cellLineId}:${versionId}`;\n      this.versionCache.delete(key);\n      this.fetchPromises.delete(key);\n    } else {\n      // Invalidate all versions for this cell line\n      const keysToDelete: string[] = [];\n      for (const key of this.versionCache.keys()) {\n        if (key.startsWith(`${cellLineId}:`)) {\n          keysToDelete.push(key);\n        }\n      }\n      keysToDelete.forEach(key => {\n        this.versionCache.delete(key);\n        this.fetchPromises.delete(key);\n      });\n    }\n\n    // Also invalidate related diffs\n    this.invalidateDiffByVersion(versionId || cellLineId);\n  }\n\n  /**\n   * Invalidate diff cache entries involving a specific version\n   */\n  invalidateDiffByVersion(versionId: string): void {\n    const keysToDelete: string[] = [];\n    for (const key of this.diffCache.keys()) {\n      if (key.includes(versionId)) {\n        keysToDelete.push(key);\n      }\n    }\n    keysToDelete.forEach(key => this.diffCache.delete(key));\n  }\n\n  /**\n   * Get comprehensive cache statistics\n   */\n  getStats(): CacheStats {\n    const versionTotal = this.versionHits + this.versionMisses;\n    const diffTotal = this.diffHits + this.diffMisses;\n\n    return {\n      versionCache: {\n        size: this.versionCache.size,\n        maxSize: this.versionCache.max,\n        hitCount: this.versionHits,\n        missCount: this.versionMisses,\n        hitRate: versionTotal > 0 ? this.versionHits / versionTotal : 0\n      },\n      diffCache: {\n        size: this.diffCache.size,\n        maxSize: this.diffCache.max,\n        hitCount: this.diffHits,\n        missCount: this.diffMisses,\n        hitRate: diffTotal > 0 ? this.diffHits / diffTotal : 0\n      },\n      totalMemoryUsage: this.versionCache.calculatedSize + this.diffCache.calculatedSize\n    };\n  }\n\n  /**\n   * Clear all caches\n   */\n  clearAll(): void {\n    this.versionCache.clear();\n    this.diffCache.clear();\n    this.schemaCache.clear();\n    this.fetchPromises.clear();\n    \n    // Reset statistics\n    this.versionHits = 0;\n    this.versionMisses = 0;\n    this.diffHits = 0;\n    this.diffMisses = 0;\n  }\n\n  /**\n   * Generate normalized cache key for diff results\n   */\n  private getDiffCacheKey(leftVersionId: string, rightVersionId: string): string {\n    // Normalize order for bidirectional lookups\n    return [leftVersionId, rightVersionId].sort().join(':');\n  }\n\n  /**\n   * Fetch version data from API\n   */\n  private async fetchVersionFromAPI(cellLineId: string, versionId: string): Promise<CellLineData> {\n    const response = await fetch(\n      `http://localhost:8000/api/editor/celllines/${cellLineId}/versions/${versionId}/`\n    );\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch version: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    return data.metadata || data;\n  }\n\n  /**\n   * Cleanup expired entries and reset counters periodically\n   */\n  private cleanup(): void {\n    // Clean expired schema entries\n    const now = Date.now();\n    for (const [key, entry] of this.schemaCache.entries()) {\n      if (now - entry.timestamp > 3600000) { // 1 hour\n        this.schemaCache.delete(key);\n      }\n    }\n\n    // Reset hit/miss counters every 10 minutes to prevent overflow\n    if (Math.random() < 0.1) { // 10% chance each cleanup\n      this.versionHits = Math.floor(this.versionHits * 0.9);\n      this.versionMisses = Math.floor(this.versionMisses * 0.9);\n      this.diffHits = Math.floor(this.diffHits * 0.9);\n      this.diffMisses = Math.floor(this.diffMisses * 0.9);\n    }\n  }\n}\n\n// Global cache manager instance\nexport const cacheManager = new CacheManager(); "],"names":[],"mappings":"AAAA,2DAA2D;;;;;AAC3D;;AAyCO,MAAM;IACH,aAAkD;IAClD,UAA4C;IAC5C,YAAsC;IACtC,cAAkD;IAE1D,uBAAuB;IACf,cAAc,EAAE;IAChB,gBAAgB,EAAE;IAClB,WAAW,EAAE;IACb,aAAa,EAAE;IAEvB,YACE,mBAA2B,EAAE,EAC7B,gBAAwB,EAAE,EAC1B,WAAmB,OAAO,aAAa;IAAd,CACzB;QACA,IAAI,CAAC,YAAY,GAAG,IAAI,yIAAA,CAAA,UAAQ,CAAC;YAC/B,KAAK;YACL,KAAK;YACL,iBAAiB,CAAC;gBAChB,wBAAwB;gBACxB,OAAO,KAAK,SAAS,CAAC,MAAM,IAAI,EAAE,MAAM,GAAG,GAAG,gBAAgB;YAChE;YACA,SAAS,MAAM,OAAO;QACxB;QAEA,IAAI,CAAC,SAAS,GAAG,IAAI,yIAAA,CAAA,UAAQ,CAAC;YAC5B,KAAK;YACL,KAAK;YACL,iBAAiB,CAAC;gBAChB,OAAO,KAAK,SAAS,CAAC,MAAM,IAAI,EAAE,MAAM,GAAG;YAC7C;YACA,SAAS,KAAK,OAAO;QACvB;QAEA,IAAI,CAAC,WAAW,GAAG,IAAI;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI;QAEzB,mBAAmB;QACnB,wCAAmC;YACjC,YAAY,IAAM,IAAI,CAAC,OAAO,IAAI,QAAQ,eAAe;QAC3D;IACF;IAEA;;GAEC,GACD,MAAM,WAAW,UAAkB,EAAE,SAAiB,EAAyB;QAC7E,MAAM,WAAW,GAAG,WAAW,CAAC,EAAE,WAAW;QAE7C,oBAAoB;QACpB,MAAM,SAAS,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;QACrC,IAAI,QAAQ;YACV,IAAI,CAAC,WAAW;YAChB,OAAO,OAAO,IAAI;QACpB;QAEA,IAAI,CAAC,aAAa;QAElB,2DAA2D;QAC3D,MAAM,kBAAkB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC;QAC/C,IAAI,iBAAiB;YACnB,OAAO;QACT;QAEA,uBAAuB;QACvB,MAAM,eAAe,IAAI,CAAC,mBAAmB,CAAC,YAAY,WACvD,IAAI,CAAC,CAAA;YACJ,mBAAmB;YACnB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU;gBAC9B;gBACA,WAAW,KAAK,GAAG;YACrB;YAEA,iCAAiC;YACjC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YAE1B,OAAO;QACT,GACC,KAAK,CAAC,CAAA;YACL,0CAA0C;YAC1C,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YAC1B,MAAM;QACR;QAEF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU;QACjC,OAAO;IACT;IAEA;;GAEC,GACD,QAAQ,aAAqB,EAAE,cAAsB,EAAuB;QAC1E,MAAM,WAAW,IAAI,CAAC,eAAe,CAAC,eAAe;QACrD,MAAM,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;QAElC,IAAI,QAAQ;YACV,IAAI,CAAC,QAAQ;YACb,OAAO,OAAO,IAAI;QACpB;QAEA,IAAI,CAAC,UAAU;QACf,OAAO;IACT;IAEA;;GAEC,GACD,QAAQ,aAAqB,EAAE,cAAsB,EAAE,IAAkB,EAAQ;QAC/E,MAAM,WAAW,IAAI,CAAC,eAAe,CAAC,eAAe;QACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU;YAC3B;YACA,WAAW,KAAK,GAAG;QACrB;IACF;IAEA;;GAEC,GACD,UAAU,SAAiB,EAAgB;QACzC,MAAM,QAAQ,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;QACnC,IAAI,SAAS,KAAK,GAAG,KAAK,MAAM,SAAS,GAAG,SAAS;YACnD,OAAO,MAAM,MAAM;QACrB;QACA,OAAO;IACT;IAEA,UAAU,SAAiB,EAAE,MAAa,EAAQ;QAChD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW;YAC9B;YACA,WAAW,KAAK,GAAG;QACrB;IACF;IAEA;;GAEC,GACD,kBAAkB,UAAmB,EAAE,SAAkB,EAAQ;QAC/D,IAAI,CAAC,YAAY;YACf,IAAI,CAAC,YAAY,CAAC,KAAK;YACvB;QACF;QAEA,IAAI,WAAW;YACb,MAAM,MAAM,GAAG,WAAW,CAAC,EAAE,WAAW;YACxC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YACzB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QAC5B,OAAO;YACL,6CAA6C;YAC7C,MAAM,eAAyB,EAAE;YACjC,KAAK,MAAM,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,GAAI;gBAC1C,IAAI,IAAI,UAAU,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG;oBACpC,aAAa,IAAI,CAAC;gBACpB;YACF;YACA,aAAa,OAAO,CAAC,CAAA;gBACnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;gBACzB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YAC5B;QACF;QAEA,gCAAgC;QAChC,IAAI,CAAC,uBAAuB,CAAC,aAAa;IAC5C;IAEA;;GAEC,GACD,wBAAwB,SAAiB,EAAQ;QAC/C,MAAM,eAAyB,EAAE;QACjC,KAAK,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,GAAI;YACvC,IAAI,IAAI,QAAQ,CAAC,YAAY;gBAC3B,aAAa,IAAI,CAAC;YACpB;QACF;QACA,aAAa,OAAO,CAAC,CAAA,MAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IACpD;IAEA;;GAEC,GACD,WAAuB;QACrB,MAAM,eAAe,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa;QAC1D,MAAM,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU;QAEjD,OAAO;YACL,cAAc;gBACZ,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI;gBAC5B,SAAS,IAAI,CAAC,YAAY,CAAC,GAAG;gBAC9B,UAAU,IAAI,CAAC,WAAW;gBAC1B,WAAW,IAAI,CAAC,aAAa;gBAC7B,SAAS,eAAe,IAAI,IAAI,CAAC,WAAW,GAAG,eAAe;YAChE;YACA,WAAW;gBACT,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI;gBACzB,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG;gBAC3B,UAAU,IAAI,CAAC,QAAQ;gBACvB,WAAW,IAAI,CAAC,UAAU;gBAC1B,SAAS,YAAY,IAAI,IAAI,CAAC,QAAQ,GAAG,YAAY;YACvD;YACA,kBAAkB,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc;QACpF;IACF;IAEA;;GAEC,GACD,WAAiB;QACf,IAAI,CAAC,YAAY,CAAC,KAAK;QACvB,IAAI,CAAC,SAAS,CAAC,KAAK;QACpB,IAAI,CAAC,WAAW,CAAC,KAAK;QACtB,IAAI,CAAC,aAAa,CAAC,KAAK;QAExB,mBAAmB;QACnB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,UAAU,GAAG;IACpB;IAEA;;GAEC,GACD,AAAQ,gBAAgB,aAAqB,EAAE,cAAsB,EAAU;QAC7E,4CAA4C;QAC5C,OAAO;YAAC;YAAe;SAAe,CAAC,IAAI,GAAG,IAAI,CAAC;IACrD;IAEA;;GAEC,GACD,MAAc,oBAAoB,UAAkB,EAAE,SAAiB,EAAyB;QAC9F,MAAM,WAAW,MAAM,MACrB,CAAC,2CAA2C,EAAE,WAAW,UAAU,EAAE,UAAU,CAAC,CAAC;QAGnF,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE,SAAS,UAAU,EAAE;QACnE;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,KAAK,QAAQ,IAAI;IAC1B;IAEA;;GAEC,GACD,AAAQ,UAAgB;QACtB,+BAA+B;QAC/B,MAAM,MAAM,KAAK,GAAG;QACpB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,GAAI;YACrD,IAAI,MAAM,MAAM,SAAS,GAAG,SAAS;gBACnC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAC1B;QACF;QAEA,+DAA+D;QAC/D,IAAI,KAAK,MAAM,KAAK,KAAK;YACvB,IAAI,CAAC,WAAW,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG;YACjD,IAAI,CAAC,aAAa,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,aAAa,GAAG;YACrD,IAAI,CAAC,QAAQ,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG;YAC3C,IAAI,CAAC,UAAU,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG;QACjD;IACF;AACF;AAGO,MAAM,eAAe,IAAI","debugId":null}},
    {"offset": {"line": 1976, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/utils/performanceMonitor.ts"],"sourcesContent":["export interface PerformanceMetrics {\n  versionLoadTime: number;\n  diffComputeTime: number;\n  renderTime: number;\n  memoryUsage: number;\n  cacheHitRate: number;\n  scrollPerformance: number;\n  filterTime: number;\n  componentMountTime: number;\n}\n\nexport interface PerformanceEntry {\n  timestamp: number;\n  operation: string;\n  duration: number;\n  metadata?: Record<string, any>;\n}\n\nexport interface PerformanceBenchmark {\n  name: string;\n  target: number; // Target time in ms\n  current: number; // Current average time\n  status: 'pass' | 'warning' | 'fail';\n}\n\n/**\n * Real-time performance monitoring system for the CellLine Editor\n * Tracks response times, memory usage, and cache performance\n */\nexport class PerformanceMonitor {\n  private entries: PerformanceEntry[] = [];\n  private readonly maxEntries = 1000;\n  private timingStack = new Map<string, number>();\n  private operationCounts = new Map<string, number>();\n  private isEnabled: boolean;\n\n  // Performance targets from task requirements\n  private readonly benchmarks: Record<string, number> = {\n    versionLoadTime: 500,     // < 500ms per version fetch\n    diffComputeTime: 200,     // < 200ms client-side processing\n    renderTime: 300,          // < 300ms for complete field display\n    versionSwitching: 200,    // < 200ms transition between cached versions\n    scrollPerformance: 16,    // 60fps = 16ms per frame\n    filterTime: 100,          // < 100ms for show differences toggle\n  };\n\n  constructor(enabled: boolean = process.env.NODE_ENV === 'development') {\n    this.isEnabled = enabled;\n    \n    if (this.isEnabled && typeof window !== 'undefined') {\n      // Setup performance observer for paint timing\n      this.setupPerformanceObserver();\n      \n      // Periodic memory monitoring\n      setInterval(() => this.recordMemoryUsage(), 5000);\n    }\n  }\n\n  /**\n   * Start timing an operation\n   */\n  startTiming(operation: string, metadata?: Record<string, any>): () => number {\n    if (!this.isEnabled) {\n      return () => 0;\n    }\n\n    const startTime = performance.now();\n    const stackKey = `${operation}_${Date.now()}_${Math.random()}`;\n    this.timingStack.set(stackKey, startTime);\n\n    return () => {\n      const endTime = performance.now();\n      const duration = endTime - startTime;\n      \n      this.timingStack.delete(stackKey);\n      this.recordTiming(operation, duration, metadata);\n      \n      return duration;\n    };\n  }\n\n  /**\n   * Record a timing measurement\n   */\n  recordTiming(operation: string, duration: number, metadata?: Record<string, any>): void {\n    if (!this.isEnabled) return;\n\n    this.entries.push({\n      timestamp: Date.now(),\n      operation,\n      duration,\n      metadata\n    });\n\n    // Increment operation count\n    this.operationCounts.set(operation, (this.operationCounts.get(operation) || 0) + 1);\n\n    // Maintain max entries limit\n    if (this.entries.length > this.maxEntries) {\n      this.entries = this.entries.slice(-this.maxEntries);\n    }\n\n    // Log performance warnings\n    this.checkPerformanceWarnings(operation, duration);\n\n    // Development logging\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`⚡ Performance: ${operation} = ${duration.toFixed(2)}ms`, metadata);\n    }\n  }\n\n  /**\n   * Get average timing for an operation\n   */\n  getAverageTiming(operation: string, timeWindow?: number): number {\n    const cutoff = timeWindow ? Date.now() - timeWindow : 0;\n    const relevantEntries = this.entries.filter(\n      entry => entry.operation === operation && entry.timestamp > cutoff\n    );\n\n    if (relevantEntries.length === 0) return 0;\n\n    const total = relevantEntries.reduce((sum, entry) => sum + entry.duration, 0);\n    return total / relevantEntries.length;\n  }\n\n  /**\n   * Get performance percentiles for an operation\n   */\n  getPercentiles(operation: string, percentiles: number[] = [50, 90, 95, 99]): Record<number, number> {\n    const durations = this.entries\n      .filter(entry => entry.operation === operation)\n      .map(entry => entry.duration)\n      .sort((a, b) => a - b);\n\n    const result: Record<number, number> = {};\n    \n    percentiles.forEach(p => {\n      const index = Math.ceil((p / 100) * durations.length) - 1;\n      result[p] = durations[index] || 0;\n    });\n\n    return result;\n  }\n\n  /**\n   * Get current performance metrics\n   */\n  getCurrentMetrics(): PerformanceMetrics {\n    const now = Date.now();\n    const recentWindow = 60000; // Last minute\n    \n    return {\n      versionLoadTime: this.getAverageTiming('versionLoad', recentWindow),\n      diffComputeTime: this.getAverageTiming('diffCompute', recentWindow),\n      renderTime: this.getAverageTiming('render', recentWindow),\n      memoryUsage: this.getCurrentMemoryUsage(),\n      cacheHitRate: this.getCacheHitRate(),\n      scrollPerformance: this.getAverageTiming('scroll', recentWindow),\n      filterTime: this.getAverageTiming('filter', recentWindow),\n      componentMountTime: this.getAverageTiming('componentMount', recentWindow)\n    };\n  }\n\n  /**\n   * Get performance benchmarks with status\n   */\n  getBenchmarks(): PerformanceBenchmark[] {\n    const metrics = this.getCurrentMetrics();\n    \n    return Object.entries(this.benchmarks).map(([name, target]) => {\n      const current = metrics[name as keyof PerformanceMetrics] || 0;\n      let status: 'pass' | 'warning' | 'fail' = 'pass';\n      \n      if (current > target * 1.5) {\n        status = 'fail';\n      } else if (current > target) {\n        status = 'warning';\n      }\n\n      return {\n        name,\n        target,\n        current,\n        status\n      };\n    });\n  }\n\n  /**\n   * Record memory usage\n   */\n  recordMemoryUsage(): void {\n    if (!this.isEnabled || typeof window === 'undefined') return;\n\n    const memory = (performance as any).memory;\n    if (memory) {\n      this.recordTiming('memoryUsage', memory.usedJSHeapSize / 1024 / 1024, {\n        totalHeapSize: memory.totalJSHeapSize / 1024 / 1024,\n        heapSizeLimit: memory.jsHeapSizeLimit / 1024 / 1024\n      });\n    }\n  }\n\n  /**\n   * Get current memory usage in MB\n   */\n  getCurrentMemoryUsage(): number {\n    if (typeof window === 'undefined') return 0;\n    \n    const memory = (performance as any).memory;\n    return memory ? memory.usedJSHeapSize / 1024 / 1024 : 0;\n  }\n\n  /**\n   * Mark performance milestones\n   */\n  mark(name: string): void {\n    if (!this.isEnabled) return;\n    \n    if (typeof performance !== 'undefined' && performance.mark) {\n      performance.mark(name);\n    }\n  }\n\n  /**\n   * Measure between two marks\n   */\n  measure(name: string, startMark: string, endMark?: string): number {\n    if (!this.isEnabled) return 0;\n\n    try {\n      if (typeof performance !== 'undefined' && performance.measure) {\n        performance.measure(name, startMark, endMark);\n        \n        const entries = performance.getEntriesByName(name, 'measure');\n        const latestEntry = entries[entries.length - 1];\n        \n        if (latestEntry) {\n          this.recordTiming(name, latestEntry.duration);\n          return latestEntry.duration;\n        }\n      }\n    } catch (error) {\n      console.warn('Performance measurement failed:', error);\n    }\n\n    return 0;\n  }\n\n  /**\n   * Get performance summary for reporting\n   */\n  getSummary(timeWindow?: number): {\n    totalOperations: number;\n    averageResponseTime: number;\n    worstPerformers: { operation: string; avgTime: number }[];\n    memoryTrend: number[];\n    cacheEfficiency: number;\n  } {\n    const cutoff = timeWindow ? Date.now() - timeWindow : 0;\n    const relevantEntries = this.entries.filter(entry => entry.timestamp > cutoff);\n    \n    // Calculate averages by operation\n    const operationStats = new Map<string, { total: number; count: number }>();\n    \n    relevantEntries.forEach(entry => {\n      const stats = operationStats.get(entry.operation) || { total: 0, count: 0 };\n      stats.total += entry.duration;\n      stats.count += 1;\n      operationStats.set(entry.operation, stats);\n    });\n\n    // Find worst performers\n    const worstPerformers = Array.from(operationStats.entries())\n      .map(([operation, stats]) => ({\n        operation,\n        avgTime: stats.total / stats.count\n      }))\n      .sort((a, b) => b.avgTime - a.avgTime)\n      .slice(0, 5);\n\n    // Memory trend (last 10 measurements)\n    const memoryEntries = relevantEntries\n      .filter(entry => entry.operation === 'memoryUsage')\n      .slice(-10)\n      .map(entry => entry.duration);\n\n    return {\n      totalOperations: relevantEntries.length,\n      averageResponseTime: relevantEntries.reduce((sum, e) => sum + e.duration, 0) / relevantEntries.length || 0,\n      worstPerformers,\n      memoryTrend: memoryEntries,\n      cacheEfficiency: this.getCacheHitRate()\n    };\n  }\n\n  /**\n   * Clear all performance data\n   */\n  clear(): void {\n    this.entries = [];\n    this.operationCounts.clear();\n    this.timingStack.clear();\n  }\n\n  /**\n   * Export performance data for analysis\n   */\n  exportData(): PerformanceEntry[] {\n    return [...this.entries];\n  }\n\n  /**\n   * Check for performance warnings and log them\n   */\n  private checkPerformanceWarnings(operation: string, duration: number): void {\n    const target = this.benchmarks[operation];\n    if (target && duration > target * 1.5) {\n      console.warn(`🚨 Performance Warning: ${operation} took ${duration.toFixed(2)}ms (target: ${target}ms)`);\n    }\n  }\n\n  /**\n   * Get cache hit rate from cache manager\n   */\n  private getCacheHitRate(): number {\n    try {\n      // This will be injected by the component using the cache manager\n      return (globalThis as any).__CACHE_HIT_RATE__ || 0;\n    } catch {\n      return 0;\n    }\n  }\n\n  /**\n   * Setup performance observer for paint timing\n   */\n  private setupPerformanceObserver(): void {\n    if (typeof PerformanceObserver === 'undefined') return;\n\n    try {\n      const observer = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (entry.entryType === 'paint') {\n            this.recordTiming(`paint_${entry.name}`, entry.startTime);\n          }\n        }\n      });\n\n      observer.observe({ entryTypes: ['paint'] });\n    } catch (error) {\n      console.warn('Performance observer setup failed:', error);\n    }\n  }\n}\n\n// Global performance monitor instance\nexport const performanceMonitor = new PerformanceMonitor(); "],"names":[],"mappings":";;;;AA8CiC;AAjB1B,MAAM;IACH,UAA8B,EAAE,CAAC;IACxB,aAAa,KAAK;IAC3B,cAAc,IAAI,MAAsB;IACxC,kBAAkB,IAAI,MAAsB;IAC5C,UAAmB;IAE3B,6CAA6C;IAC5B,aAAqC;QACpD,iBAAiB;QACjB,iBAAiB;QACjB,YAAY;QACZ,kBAAkB;QAClB,mBAAmB;QACnB,YAAY;IACd,EAAE;IAEF,YAAY,UAAmB,oDAAyB,aAAa,CAAE;QACrE,IAAI,CAAC,SAAS,GAAG;QAEjB,IAAI,IAAI,CAAC,SAAS,IAAI,aAAkB,aAAa;YACnD,8CAA8C;YAC9C,IAAI,CAAC,wBAAwB;YAE7B,6BAA6B;YAC7B,YAAY,IAAM,IAAI,CAAC,iBAAiB,IAAI;QAC9C;IACF;IAEA;;GAEC,GACD,YAAY,SAAiB,EAAE,QAA8B,EAAgB;QAC3E,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,IAAM;QACf;QAEA,MAAM,YAAY,YAAY,GAAG;QACjC,MAAM,WAAW,GAAG,UAAU,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,IAAI;QAC9D,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU;QAE/B,OAAO;YACL,MAAM,UAAU,YAAY,GAAG;YAC/B,MAAM,WAAW,UAAU;YAE3B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,WAAW,UAAU;YAEvC,OAAO;QACT;IACF;IAEA;;GAEC,GACD,aAAa,SAAiB,EAAE,QAAgB,EAAE,QAA8B,EAAQ;QACtF,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;QAErB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAChB,WAAW,KAAK,GAAG;YACnB;YACA;YACA;QACF;QAEA,4BAA4B;QAC5B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI;QAEjF,6BAA6B;QAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE;YACzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU;QACpD;QAEA,2BAA2B;QAC3B,IAAI,CAAC,wBAAwB,CAAC,WAAW;QAEzC,sBAAsB;QACtB,wCAA4C;YAC1C,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,UAAU,GAAG,EAAE,SAAS,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;QACxE;IACF;IAEA;;GAEC,GACD,iBAAiB,SAAiB,EAAE,UAAmB,EAAU;QAC/D,MAAM,SAAS,aAAa,KAAK,GAAG,KAAK,aAAa;QACtD,MAAM,kBAAkB,IAAI,CAAC,OAAO,CAAC,MAAM,CACzC,CAAA,QAAS,MAAM,SAAS,KAAK,aAAa,MAAM,SAAS,GAAG;QAG9D,IAAI,gBAAgB,MAAM,KAAK,GAAG,OAAO;QAEzC,MAAM,QAAQ,gBAAgB,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,MAAM,QAAQ,EAAE;QAC3E,OAAO,QAAQ,gBAAgB,MAAM;IACvC;IAEA;;GAEC,GACD,eAAe,SAAiB,EAAE,cAAwB;QAAC;QAAI;QAAI;QAAI;KAAG,EAA0B;QAClG,MAAM,YAAY,IAAI,CAAC,OAAO,CAC3B,MAAM,CAAC,CAAA,QAAS,MAAM,SAAS,KAAK,WACpC,GAAG,CAAC,CAAA,QAAS,MAAM,QAAQ,EAC3B,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI;QAEtB,MAAM,SAAiC,CAAC;QAExC,YAAY,OAAO,CAAC,CAAA;YAClB,MAAM,QAAQ,KAAK,IAAI,CAAC,AAAC,IAAI,MAAO,UAAU,MAAM,IAAI;YACxD,MAAM,CAAC,EAAE,GAAG,SAAS,CAAC,MAAM,IAAI;QAClC;QAEA,OAAO;IACT;IAEA;;GAEC,GACD,oBAAwC;QACtC,MAAM,MAAM,KAAK,GAAG;QACpB,MAAM,eAAe,OAAO,cAAc;QAE1C,OAAO;YACL,iBAAiB,IAAI,CAAC,gBAAgB,CAAC,eAAe;YACtD,iBAAiB,IAAI,CAAC,gBAAgB,CAAC,eAAe;YACtD,YAAY,IAAI,CAAC,gBAAgB,CAAC,UAAU;YAC5C,aAAa,IAAI,CAAC,qBAAqB;YACvC,cAAc,IAAI,CAAC,eAAe;YAClC,mBAAmB,IAAI,CAAC,gBAAgB,CAAC,UAAU;YACnD,YAAY,IAAI,CAAC,gBAAgB,CAAC,UAAU;YAC5C,oBAAoB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB;QAC9D;IACF;IAEA;;GAEC,GACD,gBAAwC;QACtC,MAAM,UAAU,IAAI,CAAC,iBAAiB;QAEtC,OAAO,OAAO,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC,MAAM,OAAO;YACxD,MAAM,UAAU,OAAO,CAAC,KAAiC,IAAI;YAC7D,IAAI,SAAsC;YAE1C,IAAI,UAAU,SAAS,KAAK;gBAC1B,SAAS;YACX,OAAO,IAAI,UAAU,QAAQ;gBAC3B,SAAS;YACX;YAEA,OAAO;gBACL;gBACA;gBACA;gBACA;YACF;QACF;IACF;IAEA;;GAEC,GACD,oBAA0B;QACxB,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,aAAkB,aAAa;QAEtD,MAAM,SAAS,AAAC,YAAoB,MAAM;QAC1C,IAAI,QAAQ;YACV,IAAI,CAAC,YAAY,CAAC,eAAe,OAAO,cAAc,GAAG,OAAO,MAAM;gBACpE,eAAe,OAAO,eAAe,GAAG,OAAO;gBAC/C,eAAe,OAAO,eAAe,GAAG,OAAO;YACjD;QACF;IACF;IAEA;;GAEC,GACD,wBAAgC;QAC9B,uCAAmC;;QAAQ;QAE3C,MAAM,SAAS,AAAC,YAAoB,MAAM;QAC1C,OAAO,SAAS,OAAO,cAAc,GAAG,OAAO,OAAO;IACxD;IAEA;;GAEC,GACD,KAAK,IAAY,EAAQ;QACvB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;QAErB,IAAI,OAAO,gBAAgB,eAAe,YAAY,IAAI,EAAE;YAC1D,YAAY,IAAI,CAAC;QACnB;IACF;IAEA;;GAEC,GACD,QAAQ,IAAY,EAAE,SAAiB,EAAE,OAAgB,EAAU;QACjE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO;QAE5B,IAAI;YACF,IAAI,OAAO,gBAAgB,eAAe,YAAY,OAAO,EAAE;gBAC7D,YAAY,OAAO,CAAC,MAAM,WAAW;gBAErC,MAAM,UAAU,YAAY,gBAAgB,CAAC,MAAM;gBACnD,MAAM,cAAc,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE;gBAE/C,IAAI,aAAa;oBACf,IAAI,CAAC,YAAY,CAAC,MAAM,YAAY,QAAQ;oBAC5C,OAAO,YAAY,QAAQ;gBAC7B;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,IAAI,CAAC,mCAAmC;QAClD;QAEA,OAAO;IACT;IAEA;;GAEC,GACD,WAAW,UAAmB,EAM5B;QACA,MAAM,SAAS,aAAa,KAAK,GAAG,KAAK,aAAa;QACtD,MAAM,kBAAkB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,SAAS,GAAG;QAEvE,kCAAkC;QAClC,MAAM,iBAAiB,IAAI;QAE3B,gBAAgB,OAAO,CAAC,CAAA;YACtB,MAAM,QAAQ,eAAe,GAAG,CAAC,MAAM,SAAS,KAAK;gBAAE,OAAO;gBAAG,OAAO;YAAE;YAC1E,MAAM,KAAK,IAAI,MAAM,QAAQ;YAC7B,MAAM,KAAK,IAAI;YACf,eAAe,GAAG,CAAC,MAAM,SAAS,EAAE;QACtC;QAEA,wBAAwB;QACxB,MAAM,kBAAkB,MAAM,IAAI,CAAC,eAAe,OAAO,IACtD,GAAG,CAAC,CAAC,CAAC,WAAW,MAAM,GAAK,CAAC;gBAC5B;gBACA,SAAS,MAAM,KAAK,GAAG,MAAM,KAAK;YACpC,CAAC,GACA,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,OAAO,GAAG,EAAE,OAAO,EACpC,KAAK,CAAC,GAAG;QAEZ,sCAAsC;QACtC,MAAM,gBAAgB,gBACnB,MAAM,CAAC,CAAA,QAAS,MAAM,SAAS,KAAK,eACpC,KAAK,CAAC,CAAC,IACP,GAAG,CAAC,CAAA,QAAS,MAAM,QAAQ;QAE9B,OAAO;YACL,iBAAiB,gBAAgB,MAAM;YACvC,qBAAqB,gBAAgB,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,QAAQ,EAAE,KAAK,gBAAgB,MAAM,IAAI;YACzG;YACA,aAAa;YACb,iBAAiB,IAAI,CAAC,eAAe;QACvC;IACF;IAEA;;GAEC,GACD,QAAc;QACZ,IAAI,CAAC,OAAO,GAAG,EAAE;QACjB,IAAI,CAAC,eAAe,CAAC,KAAK;QAC1B,IAAI,CAAC,WAAW,CAAC,KAAK;IACxB;IAEA;;GAEC,GACD,aAAiC;QAC/B,OAAO;eAAI,IAAI,CAAC,OAAO;SAAC;IAC1B;IAEA;;GAEC,GACD,AAAQ,yBAAyB,SAAiB,EAAE,QAAgB,EAAQ;QAC1E,MAAM,SAAS,IAAI,CAAC,UAAU,CAAC,UAAU;QACzC,IAAI,UAAU,WAAW,SAAS,KAAK;YACrC,QAAQ,IAAI,CAAC,CAAC,wBAAwB,EAAE,UAAU,MAAM,EAAE,SAAS,OAAO,CAAC,GAAG,YAAY,EAAE,OAAO,GAAG,CAAC;QACzG;IACF;IAEA;;GAEC,GACD,AAAQ,kBAA0B;QAChC,IAAI;YACF,iEAAiE;YACjE,OAAO,AAAC,WAAmB,kBAAkB,IAAI;QACnD,EAAE,OAAM;YACN,OAAO;QACT;IACF;IAEA;;GAEC,GACD,AAAQ,2BAAiC;QACvC,IAAI,OAAO,wBAAwB,aAAa;QAEhD,IAAI;YACF,MAAM,WAAW,IAAI,oBAAoB,CAAC;gBACxC,KAAK,MAAM,SAAS,KAAK,UAAU,GAAI;oBACrC,IAAI,MAAM,SAAS,KAAK,SAAS;wBAC/B,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,MAAM,IAAI,EAAE,EAAE,MAAM,SAAS;oBAC1D;gBACF;YACF;YAEA,SAAS,OAAO,CAAC;gBAAE,YAAY;oBAAC;iBAAQ;YAAC;QAC3C,EAAE,OAAO,OAAO;YACd,QAAQ,IAAI,CAAC,sCAAsC;QACrD;IACF;AACF;AAGO,MAAM,qBAAqB,IAAI","debugId":null}},
    {"offset": {"line": 2249, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/config/performanceConfig.ts"],"sourcesContent":["export interface PerformanceConfig {\n  cacheSettings: {\n    versionCacheSize: number;\n    diffCacheSize: number;\n    cacheTTL: number;\n    maxMemoryUsage: number;\n  };\n  virtualScrolling: {\n    enabled: boolean;\n    itemHeight: number;\n    overscan: number;\n    bufferSize: number;\n  };\n  debouncing: {\n    versionSelectionDelay: number;\n    filterDelay: number;\n    searchDelay: number;\n    scrollDelay: number;\n  };\n  performance: {\n    enableMonitoring: boolean;\n    enablePerfWarnings: boolean;\n    maxPerformanceEntries: number;\n    memoryCheckInterval: number;\n  };\n  targets: {\n    versionLoadTime: number;\n    diffComputeTime: number;\n    renderTime: number;\n    versionSwitching: number;\n    scrollPerformance: number;\n    filterTime: number;\n    memoryUsage: number;\n  };\n}\n\nexport const defaultPerformanceConfig: PerformanceConfig = {\n  cacheSettings: {\n    versionCacheSize: 50,           // Number of versions to cache\n    diffCacheSize: 30,              // Number of diff results to cache\n    cacheTTL: 600000,               // 10 minutes TTL\n    maxMemoryUsage: 150 * 1024 * 1024 // 150MB total cache limit\n  },\n  virtualScrolling: {\n    enabled: true,\n    itemHeight: 60,                 // Default row height for virtual list\n    overscan: 5,                    // Extra items to render outside viewport\n    bufferSize: 10                  // Buffer size for dynamic height\n  },\n  debouncing: {\n    versionSelectionDelay: 300,     // Delay version API calls\n    filterDelay: 150,               // Delay filter operations\n    searchDelay: 200,               // Delay search operations\n    scrollDelay: 16                 // Throttle scroll events for 60fps\n  },\n  performance: {\n    enableMonitoring: process.env.NODE_ENV === 'development',\n    enablePerfWarnings: true,\n    maxPerformanceEntries: 1000,\n    memoryCheckInterval: 5000       // Check memory every 5 seconds\n  },\n  targets: {\n    versionLoadTime: 500,           // < 500ms per version fetch from API\n    diffComputeTime: 200,           // < 200ms client-side processing\n    renderTime: 300,                // < 300ms for complete field display\n    versionSwitching: 200,          // < 200ms transition between cached versions\n    scrollPerformance: 16,          // 60fps = 16ms per frame\n    filterTime: 100,                // < 100ms for show differences toggle\n    memoryUsage: 200                // < 200MB total browser memory usage\n  }\n};\n\n/**\n * Production-optimized configuration with stricter limits\n */\nexport const productionPerformanceConfig: PerformanceConfig = {\n  ...defaultPerformanceConfig,\n  cacheSettings: {\n    ...defaultPerformanceConfig.cacheSettings,\n    versionCacheSize: 30,           // Smaller cache in production\n    diffCacheSize: 20,\n    maxMemoryUsage: 100 * 1024 * 1024 // 100MB limit\n  },\n  performance: {\n    ...defaultPerformanceConfig.performance,\n    enableMonitoring: false,        // Disable detailed monitoring in production\n    enablePerfWarnings: false,\n    maxPerformanceEntries: 500\n  },\n  virtualScrolling: {\n    ...defaultPerformanceConfig.virtualScrolling,\n    overscan: 3,                    // Smaller overscan in production\n    bufferSize: 5\n  }\n};\n\n/**\n * Development configuration with enhanced debugging\n */\nexport const developmentPerformanceConfig: PerformanceConfig = {\n  ...defaultPerformanceConfig,\n  cacheSettings: {\n    ...defaultPerformanceConfig.cacheSettings,\n    versionCacheSize: 100,          // Larger cache for development\n    diffCacheSize: 50\n  },\n  performance: {\n    ...defaultPerformanceConfig.performance,\n    enableMonitoring: true,\n    enablePerfWarnings: true,\n    maxPerformanceEntries: 2000     // More detailed tracking\n  },\n  targets: {\n    ...defaultPerformanceConfig.targets,\n    versionLoadTime: 1000,          // More lenient targets for dev\n    diffComputeTime: 500,\n    renderTime: 500\n  }\n};\n\n/**\n * Get configuration based on environment\n */\nexport function getPerformanceConfig(): PerformanceConfig {\n  const env = process.env.NODE_ENV;\n  \n  switch (env) {\n    case 'production':\n      return productionPerformanceConfig;\n    case 'development':\n      return developmentPerformanceConfig;\n    default:\n      return defaultPerformanceConfig;\n  }\n}\n\n/**\n * Custom configuration builder\n */\nexport class PerformanceConfigBuilder {\n  private config: PerformanceConfig;\n\n  constructor(baseConfig: PerformanceConfig = defaultPerformanceConfig) {\n    this.config = { ...baseConfig };\n  }\n\n  setCacheSize(versionCacheSize: number, diffCacheSize: number): this {\n    this.config.cacheSettings.versionCacheSize = versionCacheSize;\n    this.config.cacheSettings.diffCacheSize = diffCacheSize;\n    return this;\n  }\n\n  setCacheTTL(ttl: number): this {\n    this.config.cacheSettings.cacheTTL = ttl;\n    return this;\n  }\n\n  setVirtualScrolling(enabled: boolean, itemHeight?: number, overscan?: number): this {\n    this.config.virtualScrolling.enabled = enabled;\n    if (itemHeight !== undefined) this.config.virtualScrolling.itemHeight = itemHeight;\n    if (overscan !== undefined) this.config.virtualScrolling.overscan = overscan;\n    return this;\n  }\n\n  setDebounceDelays(\n    versionDelay?: number,\n    filterDelay?: number,\n    searchDelay?: number\n  ): this {\n    if (versionDelay !== undefined) this.config.debouncing.versionSelectionDelay = versionDelay;\n    if (filterDelay !== undefined) this.config.debouncing.filterDelay = filterDelay;\n    if (searchDelay !== undefined) this.config.debouncing.searchDelay = searchDelay;\n    return this;\n  }\n\n  setPerformanceTargets(targets: Partial<PerformanceConfig['targets']>): this {\n    this.config.targets = { ...this.config.targets, ...targets };\n    return this;\n  }\n\n  enableMonitoring(enabled: boolean): this {\n    this.config.performance.enableMonitoring = enabled;\n    return this;\n  }\n\n  build(): PerformanceConfig {\n    return { ...this.config };\n  }\n}\n\n/**\n * Runtime performance configuration adjustments\n */\nexport class RuntimePerformanceAdjuster {\n  private config: PerformanceConfig;\n  private memoryPressureDetected = false;\n\n  constructor(config: PerformanceConfig) {\n    this.config = { ...config };\n    this.setupMemoryPressureDetection();\n  }\n\n  adjustForMemoryPressure(): PerformanceConfig {\n    if (!this.memoryPressureDetected) {\n      return this.config;\n    }\n\n    // Reduce cache sizes under memory pressure\n    return {\n      ...this.config,\n      cacheSettings: {\n        ...this.config.cacheSettings,\n        versionCacheSize: Math.floor(this.config.cacheSettings.versionCacheSize * 0.7),\n        diffCacheSize: Math.floor(this.config.cacheSettings.diffCacheSize * 0.7),\n        maxMemoryUsage: Math.floor(this.config.cacheSettings.maxMemoryUsage * 0.8)\n      },\n      virtualScrolling: {\n        ...this.config.virtualScrolling,\n        overscan: Math.max(1, this.config.virtualScrolling.overscan - 2)\n      }\n    };\n  }\n\n  adjustForPerformance(averageRenderTime: number): PerformanceConfig {\n    // If rendering is slow, reduce visual complexity\n    if (averageRenderTime > this.config.targets.renderTime * 1.5) {\n      return {\n        ...this.config,\n        virtualScrolling: {\n          ...this.config.virtualScrolling,\n          overscan: Math.max(1, this.config.virtualScrolling.overscan - 1),\n          bufferSize: Math.max(3, this.config.virtualScrolling.bufferSize - 2)\n        },\n        debouncing: {\n          ...this.config.debouncing,\n          filterDelay: this.config.debouncing.filterDelay + 50,\n          searchDelay: this.config.debouncing.searchDelay + 50\n        }\n      };\n    }\n\n    return this.config;\n  }\n\n  private setupMemoryPressureDetection(): void {\n    if (typeof window === 'undefined') return;\n\n    // Monitor memory usage\n    setInterval(() => {\n      const memory = (performance as any).memory;\n      if (memory) {\n        const usedMB = memory.usedJSHeapSize / 1024 / 1024;\n        const limitMB = memory.jsHeapSizeLimit / 1024 / 1024;\n        \n        // Detect memory pressure at 80% of limit\n        this.memoryPressureDetected = usedMB > limitMB * 0.8;\n      }\n    }, 10000); // Check every 10 seconds\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2461, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/hooks/usePerformanceOptimization.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport { cacheManager, CacheStats } from '../utils/cacheManager';\nimport { performanceMonitor, PerformanceMetrics } from '../utils/performanceMonitor';\nimport { getPerformanceConfig, PerformanceConfig } from '../config/performanceConfig';\nimport { DiffResult } from '../types/diff';\nimport { CellLineData } from '../types/editor';\n\nexport interface PerformanceOptimizationState {\n  isOptimized: boolean;\n  cacheStats: CacheStats;\n  performanceMetrics: PerformanceMetrics;\n  memoryUsage: number;\n  recommendations: string[];\n}\n\nexport interface PerformanceOptimizationActions {\n  clearCache: () => void;\n  invalidateVersion: (cellLineId?: string, versionId?: string) => void;\n  optimizeMemory: () => void;\n  getCachedVersion: (cellLineId: string, versionId: string) => Promise<CellLineData>;\n  getCachedDiff: (leftVersionId: string, rightVersionId: string) => DiffResult[] | null;\n  setCachedDiff: (leftVersionId: string, rightVersionId: string, diff: DiffResult[]) => void;\n}\n\n/**\n * Main performance optimization hook that coordinates caching, monitoring, and memory management\n */\nexport function usePerformanceOptimization(): [\n  PerformanceOptimizationState,\n  PerformanceOptimizationActions\n] {\n  const [cacheStats, setCacheStats] = useState<CacheStats>(() => cacheManager.getStats());\n  const [performanceMetrics, setPerformanceMetrics] = useState<PerformanceMetrics>(() => \n    performanceMonitor.getCurrentMetrics()\n  );\n  const [recommendations, setRecommendations] = useState<string[]>([]);\n  \n  const config = useRef<PerformanceConfig>(getPerformanceConfig());\n  const statsUpdateInterval = useRef<NodeJS.Timeout>();\n  const memoryPressureThreshold = config.current.targets.memoryUsage;\n\n  // Update stats periodically\n  useEffect(() => {\n    const updateStats = () => {\n      const newCacheStats = cacheManager.getStats();\n      const newPerfMetrics = performanceMonitor.getCurrentMetrics();\n      \n      setCacheStats(newCacheStats);\n      setPerformanceMetrics(newPerfMetrics);\n      \n      // Update global cache hit rate for performance monitor\n      const avgHitRate = (newCacheStats.versionCache.hitRate + newCacheStats.diffCache.hitRate) / 2;\n      (globalThis as any).__CACHE_HIT_RATE__ = avgHitRate;\n      \n      // Generate performance recommendations\n      setRecommendations(generateRecommendations(newCacheStats, newPerfMetrics));\n    };\n\n    // Initial update\n    updateStats();\n    \n    // Regular updates - reduced frequency to prevent constant reloading\n    statsUpdateInterval.current = setInterval(updateStats, 30000); // Changed from 5s to 30s\n    \n    return () => {\n      if (statsUpdateInterval.current) {\n        clearInterval(statsUpdateInterval.current);\n      }\n    };\n  }, []);\n\n  // Memory optimization\n  const optimizeMemory = useCallback(() => {\n    const currentMemory = performanceMetrics.memoryUsage;\n    \n    if (currentMemory > memoryPressureThreshold) {\n      // Clear oldest cache entries\n      cacheManager.clearAll();\n      \n      // Force garbage collection if available\n      if ((window as any).gc) {\n        (window as any).gc();\n      }\n      \n      console.log(`🧹 Memory optimization: Cleared caches (was ${currentMemory.toFixed(1)}MB)`);\n    }\n  }, [performanceMetrics.memoryUsage, memoryPressureThreshold]);\n\n  // Cache management actions\n  const actions: PerformanceOptimizationActions = useMemo(() => ({\n    clearCache: () => {\n      cacheManager.clearAll();\n      setCacheStats(cacheManager.getStats());\n    },\n    \n    invalidateVersion: (cellLineId?: string, versionId?: string) => {\n      cacheManager.invalidateVersion(cellLineId, versionId);\n      setCacheStats(cacheManager.getStats());\n    },\n    \n    optimizeMemory,\n    \n    getCachedVersion: async (cellLineId: string, versionId: string) => {\n      const startTiming = performanceMonitor.startTiming('versionLoad', {\n        cellLineId,\n        versionId,\n        source: 'cache'\n      });\n      \n      try {\n        const result = await cacheManager.getVersion(cellLineId, versionId);\n        startTiming();\n        return result;\n      } catch (error) {\n        startTiming();\n        throw error;\n      }\n    },\n    \n    getCachedDiff: (leftVersionId: string, rightVersionId: string) => {\n      const startTiming = performanceMonitor.startTiming('diffLoad', {\n        leftVersionId,\n        rightVersionId,\n        source: 'cache'\n      });\n      \n      const result = cacheManager.getDiff(leftVersionId, rightVersionId);\n      startTiming();\n      return result;\n    },\n    \n    setCachedDiff: (leftVersionId: string, rightVersionId: string, diff: DiffResult[]) => {\n      cacheManager.setDiff(leftVersionId, rightVersionId, diff);\n      setCacheStats(cacheManager.getStats());\n    }\n  }), [optimizeMemory]);\n\n  // Calculate optimization status\n  const isOptimized = useMemo(() => {\n    const versionHitRate = cacheStats.versionCache.hitRate;\n    const diffHitRate = cacheStats.diffCache.hitRate;\n    const memoryWithinLimits = performanceMetrics.memoryUsage < memoryPressureThreshold;\n    const performanceWithinTargets = \n      performanceMetrics.versionLoadTime < config.current.targets.versionLoadTime &&\n      performanceMetrics.diffComputeTime < config.current.targets.diffComputeTime &&\n      performanceMetrics.renderTime < config.current.targets.renderTime;\n\n    return versionHitRate > 0.8 && diffHitRate > 0.9 && memoryWithinLimits && performanceWithinTargets;\n  }, [cacheStats, performanceMetrics, memoryPressureThreshold]);\n\n  const state: PerformanceOptimizationState = {\n    isOptimized,\n    cacheStats,\n    performanceMetrics,\n    memoryUsage: performanceMetrics.memoryUsage,\n    recommendations\n  };\n\n  return [state, actions];\n}\n\n/**\n * Generate performance recommendations based on current metrics\n */\nfunction generateRecommendations(\n  cacheStats: CacheStats,\n  performanceMetrics: PerformanceMetrics\n): string[] {\n  const recommendations: string[] = [];\n  const config = getPerformanceConfig();\n\n  // Cache efficiency recommendations\n  if (cacheStats.versionCache.hitRate < 0.8) {\n    recommendations.push('Version cache hit rate is low. Consider pre-loading frequently accessed versions.');\n  }\n  \n  if (cacheStats.diffCache.hitRate < 0.9) {\n    recommendations.push('Diff cache hit rate is low. Users may be comparing many unique version pairs.');\n  }\n\n  // Performance recommendations\n  if (performanceMetrics.versionLoadTime > config.targets.versionLoadTime) {\n    recommendations.push('Version loading is slow. Check network conditions or API performance.');\n  }\n  \n  if (performanceMetrics.diffComputeTime > config.targets.diffComputeTime) {\n    recommendations.push('Diff computation is slow. Consider optimizing diff algorithm or reducing field count.');\n  }\n  \n  if (performanceMetrics.renderTime > config.targets.renderTime) {\n    recommendations.push('Rendering is slow. Consider enabling virtualization or reducing DOM complexity.');\n  }\n\n  // Memory recommendations\n  if (performanceMetrics.memoryUsage > config.targets.memoryUsage) {\n    recommendations.push('Memory usage is high. Consider clearing caches or reducing cache sizes.');\n  }\n\n  // Cache size recommendations\n  if (cacheStats.totalMemoryUsage > 100 * 1024 * 1024) { // 100MB\n    recommendations.push('Cache memory usage is high. Consider reducing cache sizes or TTL.');\n  }\n\n  return recommendations;\n}\n\n/**\n * Performance optimization for diff operations\n */\nexport function useOptimizedDiff() {\n  const [, { getCachedDiff, setCachedDiff }] = usePerformanceOptimization();\n\n  const computeOptimizedDiff = useCallback(async (\n    leftVersion: CellLineData,\n    rightVersion: CellLineData,\n    leftVersionId: string,\n    rightVersionId: string,\n    diffFunction: (left: CellLineData, right: CellLineData) => DiffResult[]\n  ): Promise<DiffResult[]> => {\n    // Try cache first\n    const cached = getCachedDiff(leftVersionId, rightVersionId);\n    if (cached) {\n      return cached;\n    }\n\n    // Compute diff with performance monitoring\n    const startTiming = performanceMonitor.startTiming('diffCompute', {\n      leftVersionId,\n      rightVersionId,\n      fieldCount: Object.keys(leftVersion).length\n    });\n\n    try {\n      const diff = diffFunction(leftVersion, rightVersion);\n      \n      // Cache the result\n      setCachedDiff(leftVersionId, rightVersionId, diff);\n      \n      const duration = startTiming();\n      console.log(`📊 Diff computed in ${duration.toFixed(2)}ms for ${Object.keys(leftVersion).length} fields`);\n      \n      return diff;\n    } catch (error) {\n      startTiming();\n      throw error;\n    }\n  }, [getCachedDiff, setCachedDiff]);\n\n  return { computeOptimizedDiff };\n}\n\n/**\n * Hook for tracking component render performance\n */\nexport function useRenderPerformance(componentName: string) {\n  const renderCount = useRef(0);\n  const lastRenderTime = useRef(0);\n\n     useEffect(() => {\n     const startTime = performance.now();\n     \n     return () => {\n       const endTime = performance.now();\n       const renderTime = endTime - startTime;\n       \n       renderCount.current++;\n       lastRenderTime.current = renderTime;\n       \n       performanceMonitor.recordTiming(`render_${componentName}`, renderTime, {\n         renderCount: renderCount.current\n       });\n     };\n   }, [componentName]);\n\n  return {\n    renderCount: renderCount.current,\n    lastRenderTime: lastRenderTime.current\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2727, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/VirtualizedDiffViewer.tsx"],"sourcesContent":["'use client';\n\nimport React, { useMemo, useCallback, useRef, useEffect } from 'react';\n// @ts-expect-error - react-window types may not be fully compatible\nimport { FixedSizeList as List, VariableSizeList } from 'react-window';\nimport { DiffResult } from '../types/diff';\nimport { DiffField } from './DiffField';\nimport { useNestedObjectState } from '../hooks/useNestedObjectState';\nimport { useRenderPerformance } from '../hooks/usePerformanceOptimization';\nimport { performanceMonitor } from '../utils/performanceMonitor';\nimport { getPerformanceConfig } from '../config/performanceConfig';\n\ninterface VirtualizedDiffViewerProps {\n  diffResults: DiffResult[];\n  showDifferencesOnly: boolean;\n  height?: number;\n  itemHeight?: number;\n  onFieldExpand?: (fieldPath: string) => void;\n  onFieldCollapse?: (fieldPath: string) => void;\n  isScrollLocked?: boolean;\n  onScroll?: (scrollTop: number) => void;\n  scrollTop?: number;\n  leftCellLine?: string | null;\n  leftVersion?: string | null;\n  rightCellLine?: string | null;\n  rightVersion?: string | null;\n}\n\nexport function VirtualizedDiffViewer({ \n  diffResults, \n  showDifferencesOnly, \n  itemHeight = 64,\n  onFieldExpand, \n  onFieldCollapse,\n  isScrollLocked = false,\n  onScroll,\n  scrollTop = 0,\n  leftCellLine,\n  leftVersion,\n  rightCellLine,\n  rightVersion\n}: VirtualizedDiffViewerProps) {\n  const { toggleExpansion, isExpanded } = useNestedObjectState();\n  const { renderCount } = useRenderPerformance('VirtualizedDiffViewer');\n  \n  const listRef = useRef<VariableSizeList>(null);\n  const config = getPerformanceConfig();\n\n  // Filter diff results with memoization and performance tracking\n  const filteredResults = useMemo(() => {\n    const startTiming = performanceMonitor.startTiming('filter', {\n      totalResults: diffResults.length,\n      showDifferencesOnly\n    });\n\n    try {\n      const filtered = filterDiffResults(diffResults, showDifferencesOnly);\n      const duration = startTiming();\n      \n      if (duration > config.targets.filterTime) {\n        console.warn(`🐌 Slow filter: ${duration.toFixed(2)}ms for ${diffResults.length} items`);\n      }\n      \n      return filtered;\n    } catch (error) {\n      startTiming();\n      throw error;\n    }\n  }, [diffResults, showDifferencesOnly, config.targets.filterTime]);\n\n\n\n  // Maintain scroll position during updates and state changes\n  const scrollTopRef = useRef(scrollTop);\n  const lastScrollTop = useRef(0);\n  \n  useEffect(() => {\n    scrollTopRef.current = scrollTop;\n  }, [scrollTop]);\n  \n\n\n  // Handle field expansion with performance tracking\n  const handleFieldToggle = useCallback((fieldPath: string) => {\n    const startTiming = performanceMonitor.startTiming('fieldToggle', { fieldPath });\n    \n    try {\n      const wasExpanded = isExpanded(fieldPath);\n      toggleExpansion(fieldPath);\n      \n      if (wasExpanded && onFieldCollapse) {\n        onFieldCollapse(fieldPath);\n      } else if (!wasExpanded && onFieldExpand) {\n        onFieldExpand(fieldPath);\n      }\n      \n      startTiming();\n    } catch (error) {\n      startTiming();\n      throw error;\n    }\n  }, [isExpanded, toggleExpansion, onFieldCollapse, onFieldExpand]);\n\n  // Optimized scroll handler with scroll position preservation\n  const handleScroll = useCallback(({ scrollTop: newScrollTop }: { scrollTop: number }) => {\n    // Save current scroll position for restoration\n    lastScrollTop.current = newScrollTop;\n    \n    // Only call scroll handler, avoid performance monitoring during scroll for stability\n    if (onScroll && !isScrollLocked) {\n      onScroll(newScrollTop);\n    }\n  }, [onScroll, isScrollLocked]);\n\n  // Simplified Row renderer - no array expansion complexity\n  const Row = useCallback(({ index, style }: { index: number; style: React.CSSProperties }) => {\n    const diffResult = filteredResults[index];\n    if (!diffResult) return null;\n\n    return (\n      <div style={style} className=\"virtual-row-container\">\n        <MemoizedDiffField\n          diffResult={diffResult}\n          isExpanded={isExpanded(diffResult.fieldPath)}\n          onToggleExpansion={() => handleFieldToggle(diffResult.fieldPath)}\n          showDifferencesOnly={showDifferencesOnly}\n          indentLevel={0}\n          isVirtualized={true}\n          leftCellLine={leftCellLine}\n          leftVersion={leftVersion}\n          rightCellLine={rightCellLine}\n          rightVersion={rightVersion}\n        />\n      </div>\n    );\n  }, [filteredResults, isExpanded, handleFieldToggle, showDifferencesOnly, leftCellLine, leftVersion, rightCellLine, rightVersion]);\n\n  // Helper function to check if field has significant text content\n  const hasSignificantTextContent = useCallback((diffResult: DiffResult): boolean => {\n    const leftText = String(diffResult.leftValue || '');\n    const rightText = String(diffResult.rightValue || '');\n    const maxLength = Math.max(leftText.length, rightText.length);\n    \n    // Consider text significant if it's longer than 50 characters\n    return maxLength > 50;\n  }, []);\n\n  // Simplified content-aware height calculation - no array expansion complexity\n  const getItemSize = useCallback((index: number) => {\n    const diffResult = filteredResults[index];\n    if (!diffResult) return 48; // Reduced default height for simple fields\n    \n    const isFieldExpanded = isExpanded(diffResult.fieldPath);\n    \n    // Start with base height - reduced for more compact layout\n    let calculatedHeight = 48;\n    \n    // Check if this field contains arrays - now use fixed height since arrays use modal\n    const hasArrays = Array.isArray(diffResult.leftValue) || Array.isArray(diffResult.rightValue);\n    if (hasArrays) {\n      // Fixed height for all array summaries - reduced for compact layout\n      return 60; // Consistent height for array summary components\n    }\n    \n    // Enhanced text content height calculation (for non-array fields)\n    const leftText = String(diffResult.leftValue || '');\n    const rightText = String(diffResult.rightValue || '');\n    \n    // Only calculate text height for significant text content\n    if (hasSignificantTextContent(diffResult)) {\n      const textHeight = calculateTextHeight(leftText, rightText);\n      calculatedHeight = Math.max(calculatedHeight, textHeight);\n    }\n    \n    // Check if this field contains complex object content (non-array)\n    const hasComplexContent = (value: any) => {\n      return value && typeof value === 'object' && !Array.isArray(value) && \n             Object.keys(value).length > 0;\n    };\n    \n    const leftIsComplex = hasComplexContent(diffResult.leftValue);\n    const rightIsComplex = hasComplexContent(diffResult.rightValue);\n    \n    // If field has complex object content that's not an array\n    if (leftIsComplex || rightIsComplex) {\n      // Base height for object content - reduced\n      let objectHeight = 60;\n      \n      // Add height for expanded state\n      if (isFieldExpanded) {\n        const childrenCount = diffResult.children?.length || 0;\n        const extraHeight = Math.min(childrenCount * 30, 160); // Reduced spacing\n        objectHeight += extraHeight;\n      }\n      \n      calculatedHeight = Math.max(calculatedHeight, objectHeight);\n    }\n    \n    // Reduced professional padding\n    return calculatedHeight + 8; // 4px top + 4px bottom padding\n  }, [filteredResults, isExpanded, hasSignificantTextContent]);\n\n  // Helper function for text height calculation\n  const calculateTextHeight = (leftText: string, rightText: string): number => {\n    // Estimate wrapped lines (assuming 60 chars per line in diff view)\n    const leftLines = Math.ceil(leftText.length / 60);\n    const rightLines = Math.ceil(rightText.length / 60);\n    const maxLines = Math.max(leftLines, rightLines);\n    \n    // 24px per line + 8px line spacing, minimum 64px\n    return Math.max(64, maxLines * 32);\n  };\n\n  // Very stable key for virtual list to preserve scroll position\n  const listKey = useMemo(() => {\n    // Use a consistent key since we always use VariableSizeList\n    return 'diff-list-variable';\n  }, []);\n\n  // Empty state with performance info\n  if (filteredResults.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-full bg-gray-50 rounded-lg border border-gray-200\">\n        <div className=\"text-center text-gray-500\">\n          <svg className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n          </svg>\n          <p className=\"text-sm font-medium\">\n            {showDifferencesOnly ? 'No differences found' : 'No data to display'}\n          </p>\n          <p className=\"text-xs text-gray-400 mt-1\">\n            {showDifferencesOnly ? 'All fields are identical' : 'Select versions to compare'}\n          </p>\n          {process.env.NODE_ENV === 'development' && (\n            <p className=\"text-xs text-blue-400 mt-2\">\n              Renders: {renderCount} | Items processed: {diffResults.length} | Filtered: {filteredResults.length}\n            </p>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  // Simplified virtualized list - no global expansion controls needed\n  return (\n    <div className=\"virtualized-diff-viewer bg-white relative pr-6\" style={{ width: '100%', height: '700px' }}>\n      {/* Virtual List Container - Full height since no controls needed */}\n      <div style={{ height: '100%' }}>\n        <VariableSizeList\n          key={listKey}\n          ref={listRef}\n          height={700} // Increased height for better viewing\n          width=\"100%\"\n          itemCount={filteredResults.length}\n          itemSize={getItemSize}\n          onScroll={handleScroll}\n          className=\"diff-virtual-list\"\n          overscanCount={config.virtualScrolling.overscan}\n        >\n          {Row}\n        </VariableSizeList>\n      </div>\n    </div>\n  );\n}\n\n\n\n// Memoized DiffField component for better performance\nconst MemoizedDiffField = React.memo(DiffField, (prevProps, nextProps) => {\n  // Quick shallow checks first\n  if (\n    prevProps.diffResult.fieldPath !== nextProps.diffResult.fieldPath ||\n    prevProps.diffResult.changeType !== nextProps.diffResult.changeType ||\n    prevProps.isExpanded !== nextProps.isExpanded ||\n    prevProps.showDifferencesOnly !== nextProps.showDifferencesOnly\n  ) {\n    return false;\n  }\n  \n  // More efficient value comparison - avoid JSON.stringify\n  const prevLeft = prevProps.diffResult.leftValue;\n  const nextLeft = nextProps.diffResult.leftValue;\n  const prevRight = prevProps.diffResult.rightValue;\n  const nextRight = nextProps.diffResult.rightValue;\n  \n  // Simple equality check for primitives, shallow check for objects\n  if (prevLeft !== nextLeft || prevRight !== nextRight) {\n    // For arrays and objects, do a shallow comparison\n    if (Array.isArray(prevLeft) && Array.isArray(nextLeft)) {\n      if (prevLeft.length !== nextLeft.length) return false;\n    }\n    if (Array.isArray(prevRight) && Array.isArray(nextRight)) {\n      if (prevRight.length !== nextRight.length) return false;\n    }\n    // If values changed, let it re-render (better than expensive deep comparison)\n    return false;\n  }\n  \n  return true;\n});\n\n/**\n * Filter diff results based on showDifferencesOnly toggle\n */\nfunction filterDiffResults(\n  diffResults: DiffResult[], \n  showDifferencesOnly: boolean\n): DiffResult[] {\n  if (!showDifferencesOnly) return diffResults;\n  \n  return diffResults.filter(result => {\n    if (result.changeType === 'UNCHANGED' || result.changeType === 'NOT_SET') {\n      return false;\n    }\n    \n    // For nested objects, check if any children have changes\n    if (result.children) {\n      const hasChangedChildren = hasNestedChanges(result);\n      return hasChangedChildren;\n    }\n    \n    return true;\n  });\n}\n\n/**\n * Recursively check if a diff result has any changed children\n */\nfunction hasNestedChanges(diffResult: DiffResult): boolean {\n  if (diffResult.changeType !== 'UNCHANGED' && diffResult.changeType !== 'NOT_SET') {\n    return true;\n  }\n  \n  if (diffResult.children) {\n    return diffResult.children.some(child => hasNestedChanges(child));\n  }\n  \n  return false;\n} "],"names":[],"mappings":";;;AAyOW;;AAvOX;AACA,oEAAoE;AACpE;AAEA;AACA;AACA;AACA;AACA;;;AAVA;;;;;;;;AA4BO,SAAS,sBAAsB,EACpC,WAAW,EACX,mBAAmB,EACnB,aAAa,EAAE,EACf,aAAa,EACb,eAAe,EACf,iBAAiB,KAAK,EACtB,QAAQ,EACR,YAAY,CAAC,EACb,YAAY,EACZ,WAAW,EACX,aAAa,EACb,YAAY,EACe;;IAC3B,MAAM,EAAE,eAAe,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,kKAAA,CAAA,uBAAoB,AAAD;IAC3D,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,wKAAA,CAAA,uBAAoB,AAAD,EAAE;IAE7C,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IACzC,MAAM,SAAS,CAAA,GAAA,+JAAA,CAAA,uBAAoB,AAAD;IAElC,gEAAgE;IAChE,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;0DAAE;YAC9B,MAAM,cAAc,+JAAA,CAAA,qBAAkB,CAAC,WAAW,CAAC,UAAU;gBAC3D,cAAc,YAAY,MAAM;gBAChC;YACF;YAEA,IAAI;gBACF,MAAM,WAAW,kBAAkB,aAAa;gBAChD,MAAM,WAAW;gBAEjB,IAAI,WAAW,OAAO,OAAO,CAAC,UAAU,EAAE;oBACxC,QAAQ,IAAI,CAAC,CAAC,gBAAgB,EAAE,SAAS,OAAO,CAAC,GAAG,OAAO,EAAE,YAAY,MAAM,CAAC,MAAM,CAAC;gBACzF;gBAEA,OAAO;YACT,EAAE,OAAO,OAAO;gBACd;gBACA,MAAM;YACR;QACF;yDAAG;QAAC;QAAa;QAAqB,OAAO,OAAO,CAAC,UAAU;KAAC;IAIhE,4DAA4D;IAC5D,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAC5B,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAE7B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2CAAE;YACR,aAAa,OAAO,GAAG;QACzB;0CAAG;QAAC;KAAU;IAId,mDAAmD;IACnD,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;gEAAE,CAAC;YACrC,MAAM,cAAc,+JAAA,CAAA,qBAAkB,CAAC,WAAW,CAAC,eAAe;gBAAE;YAAU;YAE9E,IAAI;gBACF,MAAM,cAAc,WAAW;gBAC/B,gBAAgB;gBAEhB,IAAI,eAAe,iBAAiB;oBAClC,gBAAgB;gBAClB,OAAO,IAAI,CAAC,eAAe,eAAe;oBACxC,cAAc;gBAChB;gBAEA;YACF,EAAE,OAAO,OAAO;gBACd;gBACA,MAAM;YACR;QACF;+DAAG;QAAC;QAAY;QAAiB;QAAiB;KAAc;IAEhE,6DAA6D;IAC7D,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2DAAE,CAAC,EAAE,WAAW,YAAY,EAAyB;YAClF,+CAA+C;YAC/C,cAAc,OAAO,GAAG;YAExB,qFAAqF;YACrF,IAAI,YAAY,CAAC,gBAAgB;gBAC/B,SAAS;YACX;QACF;0DAAG;QAAC;QAAU;KAAe;IAE7B,0DAA0D;IAC1D,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAiD;YACtF,MAAM,aAAa,eAAe,CAAC,MAAM;YACzC,IAAI,CAAC,YAAY,OAAO;YAExB,qBACE,6LAAC;gBAAI,OAAO;gBAAO,WAAU;0BAC3B,cAAA,6LAAC;oBACC,YAAY;oBACZ,YAAY,WAAW,WAAW,SAAS;oBAC3C,iBAAiB;kEAAE,IAAM,kBAAkB,WAAW,SAAS;;oBAC/D,qBAAqB;oBACrB,aAAa;oBACb,eAAe;oBACf,cAAc;oBACd,aAAa;oBACb,eAAe;oBACf,cAAc;;;;;;;;;;;QAItB;iDAAG;QAAC;QAAiB;QAAY;QAAmB;QAAqB;QAAc;QAAa;QAAe;KAAa;IAEhI,iEAAiE;IACjE,MAAM,4BAA4B,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;wEAAE,CAAC;YAC7C,MAAM,WAAW,OAAO,WAAW,SAAS,IAAI;YAChD,MAAM,YAAY,OAAO,WAAW,UAAU,IAAI;YAClD,MAAM,YAAY,KAAK,GAAG,CAAC,SAAS,MAAM,EAAE,UAAU,MAAM;YAE5D,8DAA8D;YAC9D,OAAO,YAAY;QACrB;uEAAG,EAAE;IAEL,8EAA8E;IAC9E,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;0DAAE,CAAC;YAC/B,MAAM,aAAa,eAAe,CAAC,MAAM;YACzC,IAAI,CAAC,YAAY,OAAO,IAAI,2CAA2C;YAEvE,MAAM,kBAAkB,WAAW,WAAW,SAAS;YAEvD,2DAA2D;YAC3D,IAAI,mBAAmB;YAEvB,oFAAoF;YACpF,MAAM,YAAY,MAAM,OAAO,CAAC,WAAW,SAAS,KAAK,MAAM,OAAO,CAAC,WAAW,UAAU;YAC5F,IAAI,WAAW;gBACb,oEAAoE;gBACpE,OAAO,IAAI,iDAAiD;YAC9D;YAEA,kEAAkE;YAClE,MAAM,WAAW,OAAO,WAAW,SAAS,IAAI;YAChD,MAAM,YAAY,OAAO,WAAW,UAAU,IAAI;YAElD,0DAA0D;YAC1D,IAAI,0BAA0B,aAAa;gBACzC,MAAM,aAAa,oBAAoB,UAAU;gBACjD,mBAAmB,KAAK,GAAG,CAAC,kBAAkB;YAChD;YAEA,kEAAkE;YAClE,MAAM;oFAAoB,CAAC;oBACzB,OAAO,SAAS,OAAO,UAAU,YAAY,CAAC,MAAM,OAAO,CAAC,UACrD,OAAO,IAAI,CAAC,OAAO,MAAM,GAAG;gBACrC;;YAEA,MAAM,gBAAgB,kBAAkB,WAAW,SAAS;YAC5D,MAAM,iBAAiB,kBAAkB,WAAW,UAAU;YAE9D,0DAA0D;YAC1D,IAAI,iBAAiB,gBAAgB;gBACnC,2CAA2C;gBAC3C,IAAI,eAAe;gBAEnB,gCAAgC;gBAChC,IAAI,iBAAiB;oBACnB,MAAM,gBAAgB,WAAW,QAAQ,EAAE,UAAU;oBACrD,MAAM,cAAc,KAAK,GAAG,CAAC,gBAAgB,IAAI,MAAM,kBAAkB;oBACzE,gBAAgB;gBAClB;gBAEA,mBAAmB,KAAK,GAAG,CAAC,kBAAkB;YAChD;YAEA,+BAA+B;YAC/B,OAAO,mBAAmB,GAAG,+BAA+B;QAC9D;yDAAG;QAAC;QAAiB;QAAY;KAA0B;IAE3D,8CAA8C;IAC9C,MAAM,sBAAsB,CAAC,UAAkB;QAC7C,mEAAmE;QACnE,MAAM,YAAY,KAAK,IAAI,CAAC,SAAS,MAAM,GAAG;QAC9C,MAAM,aAAa,KAAK,IAAI,CAAC,UAAU,MAAM,GAAG;QAChD,MAAM,WAAW,KAAK,GAAG,CAAC,WAAW;QAErC,iDAAiD;QACjD,OAAO,KAAK,GAAG,CAAC,IAAI,WAAW;IACjC;IAEA,+DAA+D;IAC/D,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;kDAAE;YACtB,4DAA4D;YAC5D,OAAO;QACT;iDAAG,EAAE;IAEL,oCAAoC;IACpC,IAAI,gBAAgB,MAAM,KAAK,GAAG;QAChC,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;wBAAuC,MAAK;wBAAO,SAAQ;wBAAY,QAAO;kCAC3F,cAAA,6LAAC;4BAAK,eAAc;4BAAQ,gBAAe;4BAAQ,aAAa;4BAAG,GAAE;;;;;;;;;;;kCAEvE,6LAAC;wBAAE,WAAU;kCACV,sBAAsB,yBAAyB;;;;;;kCAElD,6LAAC;wBAAE,WAAU;kCACV,sBAAsB,6BAA6B;;;;;;oBAErD,oDAAyB,+BACxB,6LAAC;wBAAE,WAAU;;4BAA6B;4BAC9B;4BAAY;4BAAqB,YAAY,MAAM;4BAAC;4BAAc,gBAAgB,MAAM;;;;;;;;;;;;;;;;;;IAM9G;IAEA,oEAAoE;IACpE,qBACE,6LAAC;QAAI,WAAU;QAAiD,OAAO;YAAE,OAAO;YAAQ,QAAQ;QAAQ;kBAEtG,cAAA,6LAAC;YAAI,OAAO;gBAAE,QAAQ;YAAO;sBAC3B,cAAA,6LAAC,0JAAA,CAAA,mBAAgB;gBAEf,KAAK;gBACL,QAAQ;gBACR,OAAM;gBACN,WAAW,gBAAgB,MAAM;gBACjC,UAAU;gBACV,UAAU;gBACV,WAAU;gBACV,eAAe,OAAO,gBAAgB,CAAC,QAAQ;0BAE9C;eAVI;;;;;;;;;;;;;;;AAef;GA5OgB;;QAc0B,kKAAA,CAAA,uBAAoB;QACpC,wKAAA,CAAA,uBAAoB;;;KAf9B;AAgPhB,sDAAsD;AACtD,MAAM,kCAAoB,6JAAA,CAAA,UAAK,CAAC,IAAI,CAAC,4JAAA,CAAA,YAAS,EAAE,CAAC,WAAW;IAC1D,6BAA6B;IAC7B,IACE,UAAU,UAAU,CAAC,SAAS,KAAK,UAAU,UAAU,CAAC,SAAS,IACjE,UAAU,UAAU,CAAC,UAAU,KAAK,UAAU,UAAU,CAAC,UAAU,IACnE,UAAU,UAAU,KAAK,UAAU,UAAU,IAC7C,UAAU,mBAAmB,KAAK,UAAU,mBAAmB,EAC/D;QACA,OAAO;IACT;IAEA,yDAAyD;IACzD,MAAM,WAAW,UAAU,UAAU,CAAC,SAAS;IAC/C,MAAM,WAAW,UAAU,UAAU,CAAC,SAAS;IAC/C,MAAM,YAAY,UAAU,UAAU,CAAC,UAAU;IACjD,MAAM,YAAY,UAAU,UAAU,CAAC,UAAU;IAEjD,kEAAkE;IAClE,IAAI,aAAa,YAAY,cAAc,WAAW;QACpD,kDAAkD;QAClD,IAAI,MAAM,OAAO,CAAC,aAAa,MAAM,OAAO,CAAC,WAAW;YACtD,IAAI,SAAS,MAAM,KAAK,SAAS,MAAM,EAAE,OAAO;QAClD;QACA,IAAI,MAAM,OAAO,CAAC,cAAc,MAAM,OAAO,CAAC,YAAY;YACxD,IAAI,UAAU,MAAM,KAAK,UAAU,MAAM,EAAE,OAAO;QACpD;QACA,8EAA8E;QAC9E,OAAO;IACT;IAEA,OAAO;AACT;MA/BM;AAiCN;;CAEC,GACD,SAAS,kBACP,WAAyB,EACzB,mBAA4B;IAE5B,IAAI,CAAC,qBAAqB,OAAO;IAEjC,OAAO,YAAY,MAAM,CAAC,CAAA;QACxB,IAAI,OAAO,UAAU,KAAK,eAAe,OAAO,UAAU,KAAK,WAAW;YACxE,OAAO;QACT;QAEA,yDAAyD;QACzD,IAAI,OAAO,QAAQ,EAAE;YACnB,MAAM,qBAAqB,iBAAiB;YAC5C,OAAO;QACT;QAEA,OAAO;IACT;AACF;AAEA;;CAEC,GACD,SAAS,iBAAiB,UAAsB;IAC9C,IAAI,WAAW,UAAU,KAAK,eAAe,WAAW,UAAU,KAAK,WAAW;QAChF,OAAO;IACT;IAEA,IAAI,WAAW,QAAQ,EAAE;QACvB,OAAO,WAAW,QAAQ,CAAC,IAAI,CAAC,CAAA,QAAS,iBAAiB;IAC5D;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 3127, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/hooks/useDebouncedOperations.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback, useMemo, useRef, useEffect } from 'react';\n// @ts-ignore - lodash types may not be fully compatible\nimport { debounce, throttle } from 'lodash';\nimport { getPerformanceConfig } from '../config/performanceConfig';\nimport { performanceMonitor } from '../utils/performanceMonitor';\n\nexport interface DebouncedOperationsState {\n  isVersionSelectionPending: boolean;\n  isFilterPending: boolean;\n  isSearchPending: boolean;\n  pendingOperations: number;\n}\n\nexport interface DebouncedOperationsActions {\n  debouncedVersionSelect: (cellLineId: string, versionId: string, panel: 'left' | 'right') => void;\n  debouncedFilter: (showDifferencesOnly: boolean) => void;\n  debouncedSearch: (searchTerm: string) => void;\n  throttledScroll: (scrollHandler: () => void) => () => void;\n  cancelPendingOperations: () => void;\n}\n\n/**\n * Hook for managing debounced operations to improve performance and UX\n */\nexport function useDebouncedOperations(\n  onVersionSelect?: (cellLineId: string, versionId: string, panel: 'left' | 'right') => void,\n  onFilter?: (showDifferencesOnly: boolean) => void,\n  onSearch?: (searchTerm: string) => void\n): [DebouncedOperationsState, DebouncedOperationsActions] {\n  \n  const [isVersionSelectionPending, setIsVersionSelectionPending] = useState(false);\n  const [isFilterPending, setIsFilterPending] = useState(false);\n  const [isSearchPending, setIsSearchPending] = useState(false);\n  \n  const config = getPerformanceConfig();\n  const abortControllers = useRef<Map<string, AbortController>>(new Map());\n\n  // Cleanup abort controllers on unmount\n  useEffect(() => {\n    return () => {\n      abortControllers.current.forEach(controller => controller.abort());\n      abortControllers.current.clear();\n    };\n  }, []);\n\n  // Version selection with deduplication and performance tracking\n  const debouncedVersionSelect = useMemo(\n    () => debounce(\n      (cellLineId: string, versionId: string, panel: 'left' | 'right') => {\n        if (!onVersionSelect) return;\n\n        const startTiming = performanceMonitor.startTiming('versionSwitching', {\n          cellLineId,\n          versionId,\n          panel\n        });\n\n        // Cancel any existing request for this panel\n        const requestKey = `version_${panel}`;\n        const existingController = abortControllers.current.get(requestKey);\n        if (existingController) {\n          existingController.abort();\n        }\n\n        // Create new abort controller\n        const controller = new AbortController();\n        abortControllers.current.set(requestKey, controller);\n\n        try {\n          setIsVersionSelectionPending(false);\n          onVersionSelect(cellLineId, versionId, panel);\n          \n          const duration = startTiming();\n          console.log(`⚡ Version switch completed in ${duration.toFixed(2)}ms`);\n          \n          // Clean up controller\n          abortControllers.current.delete(requestKey);\n        } catch (error) {\n          startTiming();\n          console.error('Version selection failed:', error);\n          abortControllers.current.delete(requestKey);\n        }\n      },\n      config.debouncing.versionSelectionDelay\n    ),\n    [onVersionSelect, config.debouncing.versionSelectionDelay]\n  );\n\n  // Filter operations with performance tracking\n  const debouncedFilter = useMemo(\n    () => debounce(\n      (showDifferencesOnly: boolean) => {\n        if (!onFilter) return;\n\n        const startTiming = performanceMonitor.startTiming('filter', {\n          showDifferencesOnly\n        });\n\n        try {\n          setIsFilterPending(false);\n          onFilter(showDifferencesOnly);\n          \n          const duration = startTiming();\n          console.log(`🔍 Filter applied in ${duration.toFixed(2)}ms`);\n        } catch (error) {\n          startTiming();\n          console.error('Filter operation failed:', error);\n        }\n      },\n      config.debouncing.filterDelay\n    ),\n    [onFilter, config.debouncing.filterDelay]\n  );\n\n  // Search operations with abort capability\n  const debouncedSearch = useMemo(\n    () => debounce(\n      (searchTerm: string) => {\n        if (!onSearch) return;\n\n        const startTiming = performanceMonitor.startTiming('search', {\n          searchLength: searchTerm.length,\n          hasQuery: searchTerm.length > 0\n        });\n\n        // Cancel previous search\n        const existingController = abortControllers.current.get('search');\n        if (existingController) {\n          existingController.abort();\n        }\n\n        if (searchTerm.length === 0) {\n          setIsSearchPending(false);\n          onSearch(searchTerm);\n          startTiming();\n          return;\n        }\n\n        // Create new search controller\n        const controller = new AbortController();\n        abortControllers.current.set('search', controller);\n\n        try {\n          setIsSearchPending(false);\n          onSearch(searchTerm);\n          \n          const duration = startTiming();\n          console.log(`🔎 Search completed in ${duration.toFixed(2)}ms`);\n          \n          abortControllers.current.delete('search');\n        } catch (error) {\n          startTiming();\n          console.error('Search operation failed:', error);\n          abortControllers.current.delete('search');\n        }\n      },\n      config.debouncing.searchDelay\n    ),\n    [onSearch, config.debouncing.searchDelay]\n  );\n\n  // Throttled scroll handler for 60fps performance\n  const throttledScroll = useCallback(\n    (scrollHandler: () => void) => {\n      return throttle(() => {\n        const startTiming = performanceMonitor.startTiming('scroll');\n        \n        try {\n          scrollHandler();\n          const duration = startTiming();\n          \n          // Only log if scroll performance is poor\n          if (duration > config.targets.scrollPerformance) {\n            console.warn(`📜 Slow scroll: ${duration.toFixed(2)}ms (target: ${config.targets.scrollPerformance}ms)`);\n          }\n        } catch (error) {\n          startTiming();\n          console.error('Scroll handler failed:', error);\n        }\n      }, config.debouncing.scrollDelay);\n    },\n    [config.debouncing.scrollDelay, config.targets.scrollPerformance]\n  );\n\n  // Wrapper functions that set pending state\n  const wrappedVersionSelect = useCallback(\n    (cellLineId: string, versionId: string, panel: 'left' | 'right') => {\n      setIsVersionSelectionPending(true);\n      debouncedVersionSelect(cellLineId, versionId, panel);\n    },\n    [debouncedVersionSelect]\n  );\n\n  const wrappedFilter = useCallback(\n    (showDifferencesOnly: boolean) => {\n      setIsFilterPending(true);\n      debouncedFilter(showDifferencesOnly);\n    },\n    [debouncedFilter]\n  );\n\n  const wrappedSearch = useCallback(\n    (searchTerm: string) => {\n      setIsSearchPending(true);\n      debouncedSearch(searchTerm);\n    },\n    [debouncedSearch]\n  );\n\n  // Cancel all pending operations\n  const cancelPendingOperations = useCallback(() => {\n    // Cancel debounced functions\n    debouncedVersionSelect.cancel();\n    debouncedFilter.cancel();\n    debouncedSearch.cancel();\n\n    // Abort any in-flight requests\n    abortControllers.current.forEach(controller => controller.abort());\n    abortControllers.current.clear();\n\n    // Reset pending states\n    setIsVersionSelectionPending(false);\n    setIsFilterPending(false);\n    setIsSearchPending(false);\n  }, [debouncedVersionSelect, debouncedFilter, debouncedSearch]);\n\n  // Calculate total pending operations\n  const pendingOperations = [\n    isVersionSelectionPending,\n    isFilterPending,\n    isSearchPending\n  ].filter(Boolean).length;\n\n  const state: DebouncedOperationsState = {\n    isVersionSelectionPending,\n    isFilterPending,\n    isSearchPending,\n    pendingOperations\n  };\n\n  const actions: DebouncedOperationsActions = {\n    debouncedVersionSelect: wrappedVersionSelect,\n    debouncedFilter: wrappedFilter,\n    debouncedSearch: wrappedSearch,\n    throttledScroll,\n    cancelPendingOperations\n  };\n\n  return [state, actions];\n}\n\n/**\n * Hook for debounced input handling with immediate visual feedback\n */\nexport function useDebouncedInput<T>(\n  initialValue: T,\n  onDebouncedChange: (value: T) => void,\n  delay: number = 300\n) {\n  const [displayValue, setDisplayValue] = useState<T>(initialValue);\n  const [isPending, setIsPending] = useState(false);\n\n  const debouncedCallback = useMemo(\n    () => debounce((value: T) => {\n      onDebouncedChange(value);\n      setIsPending(false);\n    }, delay),\n    [onDebouncedChange, delay]\n  );\n\n  const setValue = useCallback((value: T) => {\n    setDisplayValue(value);\n    setIsPending(true);\n    debouncedCallback(value);\n  }, [debouncedCallback]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      debouncedCallback.cancel();\n    };\n  }, [debouncedCallback]);\n\n  return {\n    value: displayValue,\n    setValue,\n    isPending\n  };\n}\n\n/**\n * Hook for batch operations with automatic debouncing\n */\nexport function useBatchedOperations<T>(\n  onBatchProcess: (items: T[]) => void,\n  batchSize: number = 10,\n  delay: number = 100\n) {\n  const batch = useRef<T[]>([]);\n  const [pendingCount, setPendingCount] = useState(0);\n\n  const processBatch = useMemo(\n    () => debounce(() => {\n      if (batch.current.length === 0) return;\n\n      const startTiming = performanceMonitor.startTiming('batchOperation', {\n        batchSize: batch.current.length\n      });\n\n      try {\n        onBatchProcess([...batch.current]);\n        batch.current = [];\n        setPendingCount(0);\n        \n        const duration = startTiming();\n        console.log(`📦 Batch processed in ${duration.toFixed(2)}ms`);\n      } catch (error) {\n        startTiming();\n        console.error('Batch processing failed:', error);\n      }\n    }, delay),\n    [onBatchProcess, delay]\n  );\n\n  const addToBatch = useCallback((item: T) => {\n    batch.current.push(item);\n    setPendingCount(batch.current.length);\n\n    // Process immediately if batch is full\n    if (batch.current.length >= batchSize) {\n      processBatch.flush();\n    } else {\n      processBatch();\n    }\n  }, [batchSize, processBatch]);\n\n  const flushBatch = useCallback(() => {\n    processBatch.flush();\n  }, [processBatch]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      processBatch.cancel();\n    };\n  }, [processBatch]);\n\n  return {\n    addToBatch,\n    flushBatch,\n    pendingCount\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3483, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/PerformanceDashboard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { usePerformanceOptimization } from '../hooks/usePerformanceOptimization';\nimport { performanceMonitor } from '../utils/performanceMonitor';\n\ninterface PerformanceDashboardProps {\n  isVisible?: boolean;\n  onToggleVisibility?: () => void;\n}\n\nexport function PerformanceDashboard({ \n  isVisible = false, \n  onToggleVisibility \n}: PerformanceDashboardProps) {\n  const [perfState] = usePerformanceOptimization();\n  const [benchmarks, setBenchmarks] = useState(performanceMonitor.getBenchmarks());\n  const [summary, setSummary] = useState(performanceMonitor.getSummary(60000)); // Last minute\n  \n  // Update performance data every 2 seconds\n  useEffect(() => {\n    if (!isVisible) return;\n    \n    const interval = setInterval(() => {\n      setBenchmarks(performanceMonitor.getBenchmarks());\n      setSummary(performanceMonitor.getSummary(60000));\n    }, 2000);\n    \n    return () => clearInterval(interval);\n  }, [isVisible]);\n\n  // Only render in development\n  if (process.env.NODE_ENV !== 'development') {\n    return null;\n  }\n\n  return (\n    <>\n      {/* Toggle Button */}\n      <button\n        onClick={onToggleVisibility}\n        className={`fixed bottom-4 right-4 z-50 p-3 rounded-full shadow-lg transition-all duration-200 ${\n          isVisible \n            ? 'bg-red-500 hover:bg-red-600 text-white' \n            : 'bg-blue-500 hover:bg-blue-600 text-white'\n        }`}\n        title={isVisible ? 'Hide Performance Dashboard' : 'Show Performance Dashboard'}\n      >\n        {isVisible ? '📊❌' : '📊'}\n      </button>\n\n      {/* Dashboard Panel */}\n      {isVisible && (\n        <div className=\"fixed bottom-20 right-4 z-40 w-80 bg-white border border-gray-200 rounded-lg shadow-xl max-h-96 overflow-y-auto\">\n          <div className=\"p-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-800 flex items-center gap-2\">\n              ⚡ Performance Monitor\n              <span className={`w-2 h-2 rounded-full ${\n                perfState.isOptimized ? 'bg-green-500' : 'bg-yellow-500'\n              }`} />\n            </h3>\n          </div>\n\n          <div className=\"p-4 space-y-4\">\n            {/* Cache Statistics */}\n            <div>\n              <h4 className=\"font-medium text-gray-700 mb-2\">Cache Performance</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Version Cache:</span>\n                  <span className={`font-mono ${\n                    perfState.cacheStats.versionCache.hitRate > 0.8 ? 'text-green-600' : 'text-yellow-600'\n                  }`}>\n                    {(perfState.cacheStats.versionCache.hitRate * 100).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Diff Cache:</span>\n                  <span className={`font-mono ${\n                    perfState.cacheStats.diffCache.hitRate > 0.9 ? 'text-green-600' : 'text-yellow-600'\n                  }`}>\n                    {(perfState.cacheStats.diffCache.hitRate * 100).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Memory Usage:</span>\n                  <span className=\"font-mono text-blue-600\">\n                    {(perfState.cacheStats.totalMemoryUsage / 1024 / 1024).toFixed(1)}MB\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Performance Metrics */}\n            <div>\n              <h4 className=\"font-medium text-gray-700 mb-2\">Response Times</h4>\n              <div className=\"space-y-1 text-sm\">\n                {benchmarks.map(benchmark => (\n                  <div key={benchmark.name} className=\"flex justify-between items-center\">\n                    <span className=\"capitalize\">\n                      {benchmark.name.replace(/([A-Z])/g, ' $1').toLowerCase()}:\n                    </span>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"font-mono text-xs\">\n                        {benchmark.current.toFixed(0)}ms\n                      </span>\n                      <span className={`w-2 h-2 rounded-full ${\n                        benchmark.status === 'pass' ? 'bg-green-500' :\n                        benchmark.status === 'warning' ? 'bg-yellow-500' : 'bg-red-500'\n                      }`} />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Memory Trend */}\n            <div>\n              <h4 className=\"font-medium text-gray-700 mb-2\">Memory Trend</h4>\n              <div className=\"h-16 bg-gray-50 rounded p-2 relative\">\n                <MemoryTrendChart data={summary.memoryTrend} />\n              </div>\n            </div>\n\n            {/* Performance Summary */}\n            <div>\n              <h4 className=\"font-medium text-gray-700 mb-2\">Activity Summary</h4>\n              <div className=\"space-y-1 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Operations:</span>\n                  <span className=\"font-mono\">{summary.totalOperations}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Avg Response:</span>\n                  <span className=\"font-mono\">{summary.averageResponseTime.toFixed(1)}ms</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Cache Efficiency:</span>\n                  <span className=\"font-mono\">{(summary.cacheEfficiency * 100).toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Worst Performers */}\n            {summary.worstPerformers.length > 0 && (\n              <div>\n                <h4 className=\"font-medium text-gray-700 mb-2\">Slow Operations</h4>\n                <div className=\"space-y-1 text-xs\">\n                  {summary.worstPerformers.slice(0, 3).map((perf, index) => (\n                    <div key={index} className=\"flex justify-between text-red-600\">\n                      <span>{perf.operation}:</span>\n                      <span className=\"font-mono\">{perf.avgTime.toFixed(1)}ms</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Recommendations */}\n            {perfState.recommendations.length > 0 && (\n              <div>\n                <h4 className=\"font-medium text-gray-700 mb-2\">Recommendations</h4>\n                <div className=\"space-y-1 text-xs text-yellow-700\">\n                  {perfState.recommendations.slice(0, 2).map((rec, index) => (\n                    <div key={index} className=\"p-2 bg-yellow-50 rounded\">\n                      💡 {rec}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Footer Actions */}\n          <div className=\"p-3 border-t border-gray-200 flex gap-2\">\n            <button\n              onClick={() => {\n                performanceMonitor.clear();\n                setBenchmarks(performanceMonitor.getBenchmarks());\n                setSummary(performanceMonitor.getSummary());\n              }}\n              className=\"flex-1 px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 rounded transition-colors\"\n            >\n              Clear Data\n            </button>\n            <button\n              onClick={() => {\n                const data = {\n                  timestamp: new Date().toISOString(),\n                  perfState,\n                  benchmarks,\n                  summary\n                };\n                const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.href = url;\n                a.download = `performance-report-${Date.now()}.json`;\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n                URL.revokeObjectURL(url);\n              }}\n              className=\"flex-1 px-3 py-1 text-xs bg-blue-100 hover:bg-blue-200 text-blue-700 rounded transition-colors\"\n            >\n              Export Report\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\n/**\n * Simple memory trend visualization\n */\nfunction MemoryTrendChart({ data }: { data: number[] }) {\n  if (data.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-full text-xs text-gray-400\">\n        No memory data\n      </div>\n    );\n  }\n\n  const max = Math.max(...data);\n  const min = Math.min(...data);\n  const range = max - min || 1;\n\n  return (\n    <div className=\"flex items-end justify-between h-full\">\n      {data.map((value, index) => {\n        const height = ((value - min) / range) * 100;\n        return (\n          <div\n            key={index}\n            className={`w-1 rounded-t ${\n              value > max * 0.8 ? 'bg-red-400' :\n              value > max * 0.6 ? 'bg-yellow-400' : 'bg-green-400'\n            }`}\n            style={{ height: `${Math.max(height, 10)}%` }}\n            title={`${value.toFixed(1)}MB`}\n          />\n        );\n      })}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4084, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/VersionControlLayout.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { VersionSelector } from './VersionSelector';\nimport { useCellLineData } from '../hooks/useCellLineData';\nimport { DiffEngine } from './DiffEngine';\nimport { DiffResult } from '../types/diff';\nimport { generateStructuredDiff } from '../utils/diffAlgorithm';\nimport { VirtualizedDiffViewer } from './VirtualizedDiffViewer';\n\nimport { usePerformanceOptimization, useOptimizedDiff } from '../hooks/usePerformanceOptimization';\nimport { useDebouncedOperations } from '../hooks/useDebouncedOperations';\nimport { PerformanceDashboard } from './PerformanceDashboard';\nimport { performanceMonitor } from '../utils/performanceMonitor';\n\ninterface VersionControlState {\n  leftCellLine: string | null;\n  leftVersion: string | null;\n  rightCellLine: string | null;\n  rightVersion: string | null;\n  isScrollLocked: boolean;\n  showDifferencesOnly: boolean;\n  isLoading: {\n    leftPanel: boolean;\n    rightPanel: boolean;\n  };\n}\n\ninterface VersionControlLayoutProps {\n  onComparisonReady?: (leftData: unknown, rightData: unknown) => void;\n  onDiffReady?: (diff: DiffResult[]) => void;\n  className?: string;\n}\n\ninterface VersionInfo {\n  version_number: number;\n  created_by: string;\n  created_on: string;\n  change_summary?: string;\n}\n\ninterface CellLineOption {\n  id: string;\n  label: string;\n}\n\ninterface VersionOption {\n  id: string;\n  label: string;\n  subtitle: string;\n}\n\nexport function VersionControlLayout({ onComparisonReady, onDiffReady, className = '' }: VersionControlLayoutProps) {\n  const { cellLines } = useCellLineData();\n  \n  // Performance optimization hooks\n  const [perfState, perfActions] = usePerformanceOptimization();\n  const { computeOptimizedDiff } = useOptimizedDiff();\n  \n  // Use refs to stabilize callback functions and prevent constant re-runs\n  const onComparisonReadyRef = useRef(onComparisonReady);\n  const onDiffReadyRef = useRef(onDiffReady);\n  const computeOptimizedDiffRef = useRef(computeOptimizedDiff);\n  \n  // Update refs when callbacks change\n  useEffect(() => {\n    onComparisonReadyRef.current = onComparisonReady;\n  }, [onComparisonReady]);\n  \n  useEffect(() => {\n    onDiffReadyRef.current = onDiffReady;\n  }, [onDiffReady]);\n  \n  useEffect(() => {\n    computeOptimizedDiffRef.current = computeOptimizedDiff;\n  }, [computeOptimizedDiff]);\n  \n  const [showPerfDashboard, setShowPerfDashboard] = useState(false);\n  \n  const [state, setState] = useState<VersionControlState>({\n    leftCellLine: null,\n    leftVersion: null,\n    rightCellLine: null,\n    rightVersion: null,\n    isScrollLocked: false, // Not needed for single panel\n    showDifferencesOnly: false,\n    isLoading: {\n      leftPanel: false,\n      rightPanel: false,\n    },\n  });\n\n  const [leftVersions, setLeftVersions] = useState<VersionInfo[]>([]);\n  const [rightVersions, setRightVersions] = useState<VersionInfo[]>([]);\n  const [leftVersionData, setLeftVersionData] = useState<unknown>(null);\n  const [rightVersionData, setRightVersionData] = useState<unknown>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [diffResults, setDiffResults] = useState<DiffResult[] | null>(null);\n\n  // Format cell lines for dropdown options\n  const cellLineOptions: CellLineOption[] = cellLines.map(cellLine => ({\n    id: cellLine.CellLine_hpscreg_id,\n    label: cellLine.CellLine_hpscreg_id,\n  }));\n\n  // Format versions for dropdown options\n  const formatVersionOptions = (versions: VersionInfo[]): VersionOption[] => {\n    return versions.map(version => ({\n      id: version.version_number.toString(),\n      label: `Version ${version.version_number}`,\n      subtitle: new Date(version.created_on).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      }),\n    }));\n  };\n\n  // Debounced operations for better performance\n  const [debouncedState, debouncedActions] = useDebouncedOperations(\n    // Version selection handler\n    (cellLineId: string, versionId: string, panel: 'left' | 'right') => {\n      actuallyFetchVersionData(cellLineId, versionId, panel);\n    },\n    // Filter handler\n    (showDifferencesOnly: boolean) => {\n      setState(prev => ({ ...prev, showDifferencesOnly }));\n    }\n  );\n\n  // Fetch versions for a specific cell line with performance tracking\n  const fetchVersions = useCallback(async (cellLineId: string, panel: 'left' | 'right') => {\n    if (!cellLineId) return;\n\n    const startTiming = performanceMonitor.startTiming('fetchVersions', {\n      cellLineId,\n      panel\n    });\n\n    setState(prev => ({\n      ...prev,\n      isLoading: { ...prev.isLoading, [`${panel}Panel`]: true }\n    }));\n    setError(null);\n\n    try {\n      const response = await fetch(`http://localhost:8000/api/editor/celllines/${cellLineId}/versions/`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch versions: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      const versions = data.versions || [];\n\n      if (panel === 'left') {\n        setLeftVersions(versions);\n      } else {\n        setRightVersions(versions);\n      }\n\n      const duration = startTiming();\n      console.log(`📋 Fetched ${versions.length} versions in ${duration.toFixed(2)}ms`);\n    } catch (err) {\n      startTiming();\n      setError(err instanceof Error ? err.message : 'Failed to fetch versions');\n    } finally {\n      setState(prev => ({\n        ...prev,\n        isLoading: { ...prev.isLoading, [`${panel}Panel`]: false }\n      }));\n    }\n  }, []);\n\n  // Fetch specific version data with caching\n  const actuallyFetchVersionData = useCallback(async (cellLineId: string, versionNumber: string, panel: 'left' | 'right') => {\n    if (!cellLineId || !versionNumber) return;\n\n    setState(prev => ({\n      ...prev,\n      isLoading: { ...prev.isLoading, [`${panel}Panel`]: true }\n    }));\n    setError(null);\n\n    try {\n      // Use cached version data\n      const versionData = await perfActions.getCachedVersion(cellLineId, versionNumber);\n\n      if (panel === 'left') {\n        setLeftVersionData(versionData);\n      } else {\n        setRightVersionData(versionData);\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch version data');\n    } finally {\n      setState(prev => ({\n        ...prev,\n        isLoading: { ...prev.isLoading, [`${panel}Panel`]: false }\n      }));\n    }\n  }, [perfActions]);\n\n  // Original fetch function for non-debounced calls\n  const fetchVersionData = useCallback(async (cellLineId: string, versionNumber: string, panel: 'left' | 'right') => {\n    return actuallyFetchVersionData(cellLineId, versionNumber, panel);\n  }, [actuallyFetchVersionData]);\n\n  // Handle cell line selection\n  const handleCellLineSelect = useCallback((panel: 'left' | 'right', cellLineId: string) => {\n    setState(prev => ({\n      ...prev,\n      [`${panel}CellLine`]: cellLineId,\n      [`${panel}Version`]: null, // Reset version when cell line changes\n    }));\n\n    // Clear version data for this panel\n    if (panel === 'left') {\n      setLeftVersionData(null);\n      setLeftVersions([]);\n    } else {\n      setRightVersionData(null);\n      setRightVersions([]);\n    }\n\n    // Fetch versions for the selected cell line\n    fetchVersions(cellLineId, panel);\n  }, [fetchVersions]);\n\n  // Handle version selection with debouncing\n  const handleVersionSelect = useCallback((panel: 'left' | 'right', versionId: string) => {\n    setState(prev => ({\n      ...prev,\n      [`${panel}Version`]: versionId,\n    }));\n\n    const cellLineId = panel === 'left' ? state.leftCellLine : state.rightCellLine;\n    if (cellLineId) {\n      // Use debounced version selection for better performance\n      debouncedActions.debouncedVersionSelect(cellLineId, versionId, panel);\n    }\n  }, [state.leftCellLine, state.rightCellLine, debouncedActions]);\n\n  // Toggle scroll lock\n  const handleToggleScrollLock = useCallback(() => {\n    setState(prev => ({\n      ...prev,\n      isScrollLocked: !prev.isScrollLocked,\n    }));\n  }, []);\n\n  // Toggle show differences only with debouncing\n  const handleToggleShowDifferences = useCallback(() => {\n    const newValue = !state.showDifferencesOnly;\n    // Use debounced filter for better performance\n    debouncedActions.debouncedFilter(newValue);\n  }, [state.showDifferencesOnly, debouncedActions]);\n\n  // Handle diff results from DiffEngine\n  const handleDiffReady = useCallback((diff: DiffResult[]) => {\n    setDiffResults(diff);\n    if (onDiffReady) {\n      onDiffReady(diff);\n    }\n  }, [onDiffReady]);\n\n  const handleDiffError = useCallback((errorMessage: string) => {\n    setError(errorMessage);\n    setDiffResults(null);\n  }, []);\n\n  // Notify parent when comparison is ready\n  useEffect(() => {\n    if (leftVersionData && rightVersionData && onComparisonReady) {\n      onComparisonReady(leftVersionData, rightVersionData);\n    }\n  }, [leftVersionData, rightVersionData, onComparisonReady]);\n\n\n\n  // Compute diff when both versions are available with caching\n  useEffect(() => {\n    if (leftVersionData && rightVersionData && state.leftVersion && state.rightVersion) {\n      setDiffResults(null); // Clear previous results\n\n      // Use optimized diff computation with caching\n      const computeDiff = async () => {\n        try {\n          const diff = await computeOptimizedDiffRef.current(\n            leftVersionData as any,\n            rightVersionData as any,\n            `${state.leftCellLine}:${state.leftVersion}`,\n            `${state.rightCellLine}:${state.rightVersion}`,\n            generateStructuredDiff\n          );\n\n          setDiffResults(diff);\n\n          // Notify parent components using stable refs\n          if (onComparisonReadyRef.current) {\n            onComparisonReadyRef.current(leftVersionData, rightVersionData);\n          }\n          if (onDiffReadyRef.current) {\n            onDiffReadyRef.current(diff);\n          }\n        } catch (error) {\n          console.error('Diff computation failed:', error);\n          setError('Failed to compute differences');\n        }\n      };\n\n      computeDiff();\n    } else {\n      setDiffResults(null);\n    }\n  }, [\n    leftVersionData, \n    rightVersionData, \n    state.leftVersion, \n    state.rightVersion,\n    state.leftCellLine,\n    state.rightCellLine\n    // Removed function dependencies that cause constant re-runs\n  ]);\n\n  return (\n    <div className={`bg-white border border-gray-200 rounded-lg shadow-sm h-full w-full flex flex-col ${className}`}>\n      {/* Control Header */}\n      <div className=\"border-b border-gray-200 px-6 py-4 flex-shrink-0\">\n        <div className=\"flex items-center justify-end\">\n          {/* Control Elements */}\n          <div className=\"flex items-center space-x-3\">\n            {/* Show Differences Radio Toggle */}\n            <div className=\"flex items-center bg-gray-100 rounded-lg p-1 gap-1\">\n              <button\n                onClick={() => debouncedActions.debouncedFilter(false)}\n                className={`px-3 py-1.5 text-sm font-medium rounded-md transition-all duration-200 hover:ring-2 hover:ring-blue-500 hover:ring-opacity-50 hover:ring-offset-1 ${\n                  !state.showDifferencesOnly\n                    ? 'bg-white text-gray-900 shadow-sm'\n                    : 'text-gray-600 hover:text-gray-900'\n                }`}\n              >\n                Show All\n              </button>\n              <button\n                onClick={() => debouncedActions.debouncedFilter(true)}\n                className={`px-3 py-1.5 text-sm font-medium rounded-md transition-all duration-200 hover:ring-2 hover:ring-blue-500 hover:ring-opacity-50 hover:ring-offset-1 ${\n                  state.showDifferencesOnly\n                    ? 'bg-white text-gray-900 shadow-sm'\n                    : 'text-gray-600 hover:text-gray-900'\n                }`}\n              >\n                <svg className=\"w-4 h-4 mr-1.5 inline\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n                Show Differences\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"mx-6 mt-4 p-4 bg-red-50 border border-red-200 rounded-md flex-shrink-0\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-red-800\">{error}</p>\n            </div>\n            <div className=\"ml-auto pl-3\">\n              <button\n                onClick={() => setError(null)}\n                className=\"text-red-400 hover:text-red-600\"\n              >\n                <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Version Selection Controls */}\n      <div className=\"border-b border-gray-200 p-6 flex-shrink-0\">\n        <div className=\"grid grid-cols-4 gap-6\">\n          {/* Column 1: Left Panel Cell Line */}\n          <div className=\"space-y-4\">\n            <VersionSelector\n              label=\"Select cell line:\"\n              placeholder=\"Choose cell line...\"\n              options={cellLineOptions}\n              value={state.leftCellLine}\n              onChange={(value) => handleCellLineSelect('left', value)}\n              searchable\n            />\n          </div>\n\n          {/* Column 2: Left Panel Version */}\n          <div className=\"space-y-4\">\n            <VersionSelector\n              label=\"Select version:\"\n              placeholder=\"Select version...\"\n              options={formatVersionOptions(leftVersions)}\n              value={state.leftVersion}\n              onChange={(value) => handleVersionSelect('left', value)}\n              disabled={!state.leftCellLine}\n              isLoading={state.isLoading.leftPanel}\n            />\n          </div>\n\n          {/* Column 3: Right Panel Cell Line */}\n          <div className=\"space-y-4\">\n            <VersionSelector\n              label=\"Select cell line:\"\n              placeholder=\"Choose cell line...\"\n              options={cellLineOptions}\n              value={state.rightCellLine}\n              onChange={(value) => handleCellLineSelect('right', value)}\n              searchable\n            />\n          </div>\n\n          {/* Column 4: Right Panel Version */}\n          <div className=\"space-y-4\">\n            <VersionSelector\n              label=\"Select version:\"\n              placeholder=\"Select version...\"\n              options={formatVersionOptions(rightVersions)}\n              value={state.rightVersion}\n              onChange={(value) => handleVersionSelect('right', value)}\n              disabled={!state.rightCellLine}\n              isLoading={state.isLoading.rightPanel}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content Panel - Unified Diff Viewer */}\n      <div className=\"diff-container flex-1 flex flex-col min-h-0 w-full px-0 pb-0\">\n        {state.isLoading.leftPanel || state.isLoading.rightPanel ? (\n          <div className=\"flex items-center justify-center flex-1\">\n            <div className=\"flex items-center text-gray-600\">\n              <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mr-3\"></div>\n              Loading version data...\n            </div>\n          </div>\n        ) : !leftVersionData || !rightVersionData || !diffResults ? (\n          <div className=\"flex items-center justify-center flex-1\">\n            <div className=\"text-center text-gray-500\">\n              <svg className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n              </svg>\n              <p className=\"text-sm\">Select cell lines and versions to compare</p>\n              <p className=\"text-xs text-gray-400 mt-1\">Choose from the dropdowns above</p>\n            </div>\n          </div>\n        ) : (\n          <div className=\"diff-viewer-container flex-1 flex flex-col bg-white border border-gray-200 rounded-lg min-h-0 w-full mx-6 mb-6\">\n            {/* Column Headers */}\n            <div className=\"diff-header grid grid-cols-4 gap-6 p-4 pr-6 bg-gray-50 border-b border-gray-200 rounded-t-lg flex-shrink-0\">\n              <div className=\"text-sm font-medium text-gray-700\">Field Name</div>\n              <div className=\"text-sm font-medium text-gray-700\">&nbsp;</div>\n              <div className=\"text-sm font-medium text-gray-700 text-center\">\n                {state.leftCellLine} (v{state.leftVersion})\n              </div>\n              <div className=\"text-sm font-medium text-gray-700 text-center\">\n                {state.rightCellLine} (v{state.rightVersion})\n              </div>\n            </div>\n            \n            {/* Diff Content - Full height remaining space */}\n            <div className=\"flex-1 min-h-0\" style={{ height: '700px' }}>\n              <VirtualizedDiffViewer\n                diffResults={diffResults}\n                showDifferencesOnly={state.showDifferencesOnly}\n                leftCellLine={state.leftCellLine}\n                leftVersion={state.leftVersion}\n                rightCellLine={state.rightCellLine}\n                rightVersion={state.rightVersion}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Performance Dashboard */}\n      <PerformanceDashboard \n        isVisible={showPerfDashboard}\n        onToggleVisibility={() => setShowPerfDashboard(!showPerfDashboard)}\n      />\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4877, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/hooks/useSchemaData.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { FieldSchema } from '../types/editor';\n\nexport function useSchemaData() {\n  const [schema, setSchema] = useState<FieldSchema | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchSchema = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch('http://localhost:8000/api/editor/cellline-schema/');\n      if (!response.ok) {\n        throw new Error(`Failed to fetch schema: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      // Extract the fields from the schema response\n      setSchema(data.schema?.fields || data);\n      return data;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch schema');\n      console.error('Error fetching schema:', err);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchSchema();\n  }, [fetchSchema]);\n\n  return {\n    schema,\n    isLoading,\n    error,\n    refetch: fetchSchema,\n  };\n} "],"names":[],"mappings":";;;AAEA;;AAFA;;AAKO,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IACzD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAAE;YAC9B,aAAa;YACb,SAAS;YAET,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,SAAS,UAAU,EAAE;gBAClE;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,8CAA8C;gBAC9C,UAAU,KAAK,MAAM,EAAE,UAAU;gBACjC,OAAO;YACT,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAC9C,QAAQ,KAAK,CAAC,0BAA0B;gBACxC,OAAO;YACT,SAAU;gBACR,aAAa;YACf;QACF;iDAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR;QACF;kCAAG;QAAC;KAAY;IAEhB,OAAO;QACL;QACA;QACA;QACA,SAAS;IACX;AACF;GAtCgB","debugId":null}},
    {"offset": {"line": 4935, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/ErrorBoundary.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('Editor Error Boundary caught an error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-6 m-4\">\n          <div className=\"flex items-center mb-4\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">\n                Editor Error\n              </h3>\n              <div className=\"mt-2 text-sm text-red-700\">\n                <p>Something went wrong with the cell line editor. Please refresh the page or contact support if the problem persists.</p>\n                {process.env.NODE_ENV === 'development' && this.state.error && (\n                  <details className=\"mt-2\">\n                    <summary className=\"cursor-pointer\">Technical Details</summary>\n                    <pre className=\"mt-2 text-xs bg-red-100 p-2 rounded overflow-x-auto\">\n                      {this.state.error.stack}\n                    </pre>\n                  </details>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"flex\">\n            <button\n              onClick={() => this.setState({ hasError: false })}\n              className=\"bg-red-100 hover:bg-red-200 text-red-800 text-sm font-medium py-2 px-4 rounded transition-colors\"\n            >\n              Try Again\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n} "],"names":[],"mappings":";;;AA2CiB;;AAzCjB;AAFA;;;AAaO,MAAM,sBAAsB,6JAAA,CAAA,UAAK,CAAC,SAAS;IAChD,YAAY,KAAY,CAAE;QACxB,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YAAE,UAAU;QAAM;IACjC;IAEA,OAAO,yBAAyB,KAAY,EAAS;QACnD,OAAO;YAAE,UAAU;YAAM;QAAM;IACjC;IAEA,kBAAkB,KAAY,EAAE,SAA0B,EAAE;QAC1D,QAAQ,KAAK,CAAC,0CAA0C,OAAO;IACjE;IAEA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvB,qBACE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;oCAAuB,SAAQ;oCAAY,MAAK;8CAC7D,cAAA,6LAAC;wCAAK,UAAS;wCAAU,GAAE;wCAA0N,UAAS;;;;;;;;;;;;;;;;0CAGlQ,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAmC;;;;;;kDAGjD,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;0DAAE;;;;;;4CACF,oDAAyB,iBAAiB,IAAI,CAAC,KAAK,CAAC,KAAK,kBACzD,6LAAC;gDAAQ,WAAU;;kEACjB,6LAAC;wDAAQ,WAAU;kEAAiB;;;;;;kEACpC,6LAAC;wDAAI,WAAU;kEACZ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAOnC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,SAAS,IAAM,IAAI,CAAC,QAAQ,CAAC;oCAAE,UAAU;gCAAM;4BAC/C,WAAU;sCACX;;;;;;;;;;;;;;;;;QAMT;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;AACF","debugId":null}},
    {"offset": {"line": 5094, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/ModalValueEditor.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\n\ninterface FieldSchema {\n  type: 'CharField' | 'JSONField' | 'IntegerField' | 'BooleanField';\n  required: boolean;\n  max_length?: number;\n  choices?: string[];\n  json_schema?: any;\n  help_text?: string;\n}\n\ninterface ModalValueEditorProps {\n  isOpen: boolean;\n  fieldName: string;\n  value: any;\n  fieldSchema?: FieldSchema;\n  onSave: (newValue: any) => void;\n  onCancel: () => void;\n}\n\nexport default function ModalValueEditor({\n  isOpen,\n  fieldName,\n  value,\n  fieldSchema,\n  onSave,\n  onCancel\n}: ModalValueEditorProps) {\n  const [editValue, setEditValue] = useState(value?.toString() || '');\n  const [error, setError] = useState<string | null>(null);\n  const inputRef = useRef<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>(null);\n\n  // Reset state when modal opens with new value\n  useEffect(() => {\n    if (isOpen) {\n      setEditValue(value?.toString() || '');\n      setError(null);\n    }\n  }, [isOpen, value]);\n\n  // Focus input when modal opens\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      // Small delay to ensure modal is fully rendered\n      const timer = setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n          // Position cursor at the end instead of selecting all text\n          if ('setSelectionRange' in inputRef.current) {\n            const length = inputRef.current.value.length;\n            inputRef.current.setSelectionRange(length, length);\n          }\n        }\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [isOpen]);\n\n  // Handle escape key\n  useEffect(() => {\n    if (!isOpen) return;\n\n    const handleEscapeKey = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onCancel();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKey);\n    return () => document.removeEventListener('keydown', handleEscapeKey);\n  }, [isOpen, onCancel]);\n\n  const validateValue = (val: string): string | null => {\n    if (!fieldSchema) return null;\n\n    if (fieldSchema.required && val.trim() === '') {\n      return 'This field is required';\n    }\n\n    if (fieldSchema.max_length && val.length > fieldSchema.max_length) {\n      return `Maximum length is ${fieldSchema.max_length} characters`;\n    }\n\n    if (fieldSchema.type === 'IntegerField') {\n      const num = parseInt(val, 10);\n      if (isNaN(num)) {\n        return 'Must be a valid integer';\n      }\n    }\n\n    return null;\n  };\n\n  const handleSave = () => {\n    const validationError = validateValue(editValue);\n    if (validationError) {\n      setError(validationError);\n      return;\n    }\n\n    let processedValue: any = editValue;\n\n    // Convert value based on field type\n    if (fieldSchema) {\n      switch (fieldSchema.type) {\n        case 'IntegerField':\n          processedValue = parseInt(editValue, 10);\n          break;\n        case 'BooleanField':\n          processedValue = editValue === 'true' || editValue === '1';\n          break;\n        case 'JSONField':\n          try {\n            processedValue = JSON.parse(editValue);\n          } catch {\n            setError('Invalid JSON format');\n            return;\n          }\n          break;\n        default:\n          processedValue = editValue;\n      }\n    }\n\n    onSave(processedValue);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSave();\n    }\n    // Escape is handled by the document listener\n  };\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onCancel();\n    }\n  };\n\n  const renderEditor = () => {\n    if (fieldSchema?.choices && fieldSchema.choices.length > 0) {\n      // Select dropdown for choice fields\n      return (\n        <select\n          ref={inputRef as React.RefObject<HTMLSelectElement>}\n          value={editValue}\n          onChange={(e) => setEditValue(e.target.value)}\n          onKeyDown={handleKeyDown}\n          className=\"w-full border border-gray-300 rounded-lg px-4 py-3 text-xs focus:outline-none\"\n        >\n          <option value=\"\">Select...</option>\n          {fieldSchema.choices.map((choice) => (\n            <option key={choice} value={choice}>\n              {choice}\n            </option>\n          ))}\n        </select>\n      );\n    }\n\n    if (fieldSchema?.type === 'BooleanField') {\n      // Boolean toggle\n      return (\n        <select\n          ref={inputRef as React.RefObject<HTMLSelectElement>}\n          value={editValue}\n          onChange={(e) => setEditValue(e.target.value)}\n          onKeyDown={handleKeyDown}\n          className=\"w-full border border-gray-300 rounded-lg px-4 py-3 text-xs focus:outline-none\"\n        >\n          <option value=\"true\">True</option>\n          <option value=\"false\">False</option>\n        </select>\n      );\n    }\n\n    if (fieldSchema?.type === 'JSONField' || (editValue && editValue.includes('\\n'))) {\n      // Textarea for multiline content\n      return (\n        <textarea\n          ref={inputRef as React.RefObject<HTMLTextAreaElement>}\n          value={editValue}\n          onChange={(e) => setEditValue(e.target.value)}\n          onKeyDown={handleKeyDown}\n          className=\"w-full border border-gray-300 rounded-lg px-4 py-3 text-xs focus:outline-none resize-none\"\n          rows={Math.min(Math.max(editValue.split('\\n').length + 1, 5), 12)}\n          placeholder=\"Enter value...\"\n        />\n      );\n    }\n\n    // Default text input - use textarea for better visibility of long content\n    return (\n      <textarea\n        ref={inputRef as React.RefObject<HTMLTextAreaElement>}\n        value={editValue}\n        onChange={(e) => setEditValue(e.target.value)}\n        onKeyDown={handleKeyDown}\n        className=\"w-full border border-gray-300 rounded-lg px-4 py-3 text-xs focus:outline-none resize-none\"\n        rows={3}\n        maxLength={fieldSchema?.max_length}\n        placeholder=\"Enter value...\"\n      />\n    );\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      className=\"fixed inset-0 flex items-center justify-center z-50\"\n      onClick={handleBackdropClick}\n    >\n      <div className=\"bg-white rounded-lg shadow-xl max-w-lg w-full mx-4\">\n        {/* Header */}\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">\n            {fieldName}\n          </h3>\n          {fieldSchema?.help_text && (\n            <p className=\"text-sm text-gray-600 mt-1\">{fieldSchema.help_text}</p>\n          )}\n        </div>\n\n        {/* Content */}\n        <div className=\"px-6 py-4\">\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Value\n              </label>\n              {renderEditor()}\n              {error && (\n                <div className=\"mt-2 text-sm text-red-600\">\n                  {error}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"px-6 py-4 border-t border-gray-200 bg-gray-50 rounded-b-lg\">\n          <div className=\"text-xs text-gray-500 text-center\">\n            Press <kbd className=\"bg-gray-200 px-1 rounded\">Enter</kbd> to save • <kbd className=\"bg-gray-200 px-1 rounded\">Esc</kbd> to cancel\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5451, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/EditorLine.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { DisplayLine, FieldSchema } from '../types/editor';\nimport ModalValueEditor from './ModalValueEditor';\n\ninterface EditorLineProps {\n  line: DisplayLine;\n  schema: FieldSchema;\n  isEditing: boolean;\n  onToggleCollapse: () => void;\n  onStartEdit: () => void;\n  onCancelEdit: () => void;\n  onUpdateValue: (fieldPath: string[], newValue: any) => void;\n  onAddItem?: () => void;\n}\n\nexport default function EditorLine({\n  line,\n  schema,\n  isEditing,\n  onToggleCollapse,\n  onStartEdit,\n  onCancelEdit,\n  onUpdateValue,\n  onAddItem\n}: EditorLineProps) {\n  const [hovering, setHovering] = useState(false);\n\n  const getFieldSchema = () => {\n    const fieldName = line.fieldPath[0];\n    return schema?.[fieldName] || null;\n  };\n\n  const getSyntaxHighlighting = () => {\n    const fieldSchema = getFieldSchema();\n    const value = line.value;\n\n    // Type-based highlighting\n    if (fieldSchema?.type === 'BooleanField') {\n      return 'text-purple-600 font-medium'; // Purple for booleans\n    }\n    \n    if (fieldSchema?.type === 'IntegerField') {\n      return 'text-orange-600 font-medium'; // Orange for numbers\n    }\n    \n    if (Array.isArray(value)) {\n      return 'text-green-600'; // Green for arrays\n    }\n    \n    if (typeof value === 'object' && value !== null) {\n      return 'text-indigo-600'; // Indigo for objects\n    }\n    \n    // Default for strings and other types\n    return 'text-gray-900';\n  };\n\n  const handleValueClick = () => {\n    if (line.isEditable && !isEditing) {\n      onStartEdit();\n    }\n  };\n\n  const handleCollapseClick = () => {\n    if (line.isCollapsible) {\n      onToggleCollapse();\n    }\n  };\n\n  const renderLineContent = () => {\n    const parts = line.displayText.split(': ');\n    const fieldPart = parts[0];\n    const valuePart = parts.slice(1).join(': ');\n\n    if (line.type === 'array_control') {\n      return (\n        <div \n          className=\"flex items-center text-green-600 cursor-pointer hover:text-green-800\"\n          title=\"Add new item to array\"\n          onClick={onAddItem}\n        >\n          <span>{line.displayText}</span>\n        </div>\n      );\n    }\n\n    if (line.isCollapsible) {\n      return (\n        <div className=\"flex items-center\">\n          <button\n            onClick={handleCollapseClick}\n            className=\"mr-2 text-gray-500 hover:text-gray-700 flex-shrink-0\"\n          >\n            {line.isCollapsed ? '▶' : '▼'}\n          </button>\n          <span className=\"text-blue-800 font-medium\">{fieldPart}:</span>\n        </div>\n      );\n    }\n\n    if (line.isEditable && valuePart !== undefined) {\n      return (\n        <div className=\"flex items-center\">\n          <span className=\"text-blue-800 font-medium mr-1\">{fieldPart}:</span>\n          <span\n            onClick={handleValueClick}\n            className={`cursor-pointer px-1 rounded border max-w-md truncate inline-block ${\n              hovering\n                ? 'bg-blue-50 border-blue-200 text-blue-900'\n                : 'hover:bg-gray-50 border-transparent'\n            } ${\n              valuePart.trim() === ''\n                ? 'text-gray-400 italic'\n                : getSyntaxHighlighting()\n            }`}\n            onMouseEnter={() => setHovering(true)}\n            onMouseLeave={() => setHovering(false)}\n            title={valuePart.trim() === '' ? '(empty)' : valuePart}\n          >\n            {valuePart.trim() === '' ? '(empty)' : valuePart}\n          </span>\n          <ModalValueEditor\n            isOpen={isEditing}\n            fieldName={fieldPart}\n            value={line.value}\n            fieldSchema={getFieldSchema()}\n            onSave={(newValue: any) => {\n              console.log('🟡 EditorLine onSave called, fieldPath:', line.fieldPath, 'newValue:', newValue);\n              onUpdateValue(line.fieldPath, newValue);\n            }}\n            onCancel={onCancelEdit}\n          />\n        </div>\n      );\n    }\n\n    return <span className=\"text-gray-800\">{line.displayText}</span>;\n  };\n\n  return (\n    <div className=\"flex items-center\">\n      {/* Line Number */}\n      <div className=\"w-12 text-right text-xs text-gray-500 bg-gray-50 border-r border-gray-200 py-1 px-2 select-none\">\n        {line.lineNumber}\n      </div>\n\n      {/* Line Content */}\n      <div className=\"flex-1 py-1 px-3 min-h-[28px] flex items-center hover:bg-gray-50 border-l-2 border-transparent hover:border-blue-200 transition-colors\">\n        <div style={{ paddingLeft: `${line.indentLevel * 32}px` }}>\n          {renderLineContent()}\n        </div>\n      </div>\n\n      {/* Validation Indicator */}\n      {line.validation && (\n        <div className=\"px-2\">\n          <span\n            className={`text-sm ${\n              line.validation.type === 'error' ? 'text-red-500' : 'text-yellow-500'\n            }`}\n            title={line.validation.message}\n          >\n            {line.validation.type === 'error' ? '🔴' : '⚠️'}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5673, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/CustomCellLineEditor.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useCellLineData } from '../hooks/useCellLineData';\nimport { useSchemaData } from '../hooks/useSchemaData';\nimport { ErrorBoundary } from './ErrorBoundary';\nimport { DisplayLine, CellLineData, FieldSchema } from '../types/editor';\nimport EditorLine from './EditorLine';\n// import EditorLine from './EditorLine';\n\n// Parse JSON data to display lines\nfunction parseDataToLines(data: any, schema: FieldSchema, path: string[] = [], indentLevel: number = 0, globalLineNumber: { current: number } = { current: 1 }): DisplayLine[] {\n  const lines: DisplayLine[] = [];\n\n  function addLine(\n    type: DisplayLine['type'],\n    fieldPath: string[],\n    displayText: string,\n    value: any,\n    isCollapsible: boolean = false,\n    isEditable: boolean = false,\n    customIndentLevel?: number\n  ): DisplayLine {\n    const line: DisplayLine = {\n      lineNumber: globalLineNumber.current++,\n      type,\n      fieldPath,\n      displayText,\n      isCollapsible,\n      isCollapsed: true,\n      isEditable,\n      value,\n      indentLevel: customIndentLevel !== undefined ? customIndentLevel : indentLevel,\n    };\n    lines.push(line);\n    return line;\n  }\n\n  if (typeof data === 'object' && data !== null) {\n    Object.entries(data).forEach(([key, value]) => {\n      const currentPath = [...path, key];\n      const indent = '  '.repeat(indentLevel);\n      const fieldSchema = schema[key];\n\n      if (Array.isArray(value)) {\n        // Array field - always expand arrays to show contents (even if empty)\n        const arrayLine = addLine('object', currentPath, `${key}`, value, true, false, indentLevel);\n        arrayLine.isCollapsed = false; // Always expand arrays to show their contents\n        value.forEach((item, index) => {\n          const itemPath = [...currentPath, index.toString()];\n          if (typeof item === 'object' && item !== null) {\n            addLine('array_item', itemPath, `${index}:`, item, true, false, indentLevel + 1);\n            lines.push(...parseDataToLines(item, schema, itemPath, indentLevel + 2, globalLineNumber));\n          } else {\n            addLine('array_item', itemPath, `${index}: ${item}`, item, false, true, indentLevel + 1);\n          }\n        });\n        // Add control to add new items\n        addLine('array_control', [...currentPath, 'add'], `➕ Add Item`, null, false, false, indentLevel + 1);\n      } else if (typeof value === 'object' && value !== null) {\n        // Nested object\n        addLine('object', currentPath, `${key}`, value, true, false, indentLevel);\n        lines.push(...parseDataToLines(value, schema, currentPath, indentLevel + 1, globalLineNumber));\n      } else {\n        // Simple field\n        const displayValue = value === null || value === undefined ? '' : String(value);\n        addLine('field', currentPath, `${key}: ${displayValue}`, value, false, true, indentLevel);\n      }\n    });\n  }\n\n  return lines;\n}\n\n// Helper function to get visible lines (handles collapsing)\nfunction getVisibleLines(lines: DisplayLine[]): DisplayLine[] {\n  const visible: DisplayLine[] = [];\n  let skipUntilIndent = -1;\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    \n    // If we're skipping and this line is still at a deeper indent level, skip it\n    if (skipUntilIndent >= 0 && line.indentLevel > skipUntilIndent) {\n      continue;\n    }\n    \n    // Reset skip mode if we've returned to the parent level or higher\n    if (skipUntilIndent >= 0 && line.indentLevel <= skipUntilIndent) {\n      skipUntilIndent = -1;\n    }\n    \n    // Always show the line itself\n    visible.push(line);\n    \n    // If this line is collapsed, start skipping its children\n    if (line.isCollapsed && line.isCollapsible) {\n      skipUntilIndent = line.indentLevel;\n    }\n  }\n\n  return visible;\n}\n\ninterface CustomCellLineEditorProps {\n  initialCellLineId?: string;\n  hideSelector?: boolean;\n  onSave?: (savedData: any) => void;\n  onError?: (error: string) => void;\n}\n\nexport default function CustomCellLineEditor({ initialCellLineId, hideSelector = false, onSave, onError }: CustomCellLineEditorProps = {}) {\n  const { cellLines, selectedCellLine, isLoading: cellLineLoading, error: cellLineError, fetchCellLine, saveCellLine, setSelectedCellLine, refetch } = useCellLineData();\n  const { schema, isLoading: schemaLoading, error: schemaError } = useSchemaData();\n  \n  const [selectedCellLineId, setSelectedCellLineId] = useState<string>(initialCellLineId || '');\n  const [displayLines, setDisplayLines] = useState<DisplayLine[]>([]);\n  const [editingLine, setEditingLine] = useState<number | null>(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveError, setSaveError] = useState<string | null>(null);\n  const [changeHistory, setChangeHistory] = useState<any[]>([]);\n  const [canUndo, setCanUndo] = useState(false);\n  const [originalCellLine, setOriginalCellLine] = useState<any>(null);\n  const [curationSourceFilter, setCurationSourceFilter] = useState<string>('');\n\n\n\n  // Generate display lines when data or schema changes\n  const lines = useMemo(() => {\n    if (!selectedCellLine || !schema) return [];\n    return parseDataToLines(selectedCellLine, schema);\n  }, [selectedCellLine, schema]);\n\n  useEffect(() => {\n    setDisplayLines(lines);\n  }, [lines]);\n\n  // Define handleCellLineSelect before it's used in useEffect\n  const handleCellLineSelect = useCallback(async (cellLineId: string) => {\n    \n    if (cellLineId) {\n      setSelectedCellLineId(cellLineId);\n      setChangeHistory([]);\n      setCanUndo(false);\n      setOriginalCellLine(null); // Reset original state when switching cell lines\n      setSaveError(null); // Clear any previous save errors\n      \n      // Find the cell line data from the list or fetch individual one\n      const existingCellLine = cellLines.find(cl => cl.CellLine_hpscreg_id === cellLineId);\n      \n      if (existingCellLine && schema) {\n        // Convert the flat structure to be compatible with selectedCellLine\n        const cellLineData = {\n          id: existingCellLine.CellLine_hpscreg_id,\n          ...existingCellLine,\n          template_name: existingCellLine.CellLine_hpscreg_id\n        };\n        \n        setSelectedCellLine(cellLineData);\n        setOriginalCellLine(JSON.parse(JSON.stringify(cellLineData))); // Deep copy for original state\n        \n        // Directly use the existing data\n        const lines = parseDataToLines(cellLineData, schema);\n        setDisplayLines(lines);\n      } else {\n        await fetchCellLine(cellLineId);\n      }\n    }\n  }, [cellLines, schema, fetchCellLine, setSelectedCellLine]);\n\n  // Refetch cell lines when curation source filter changes\n  useEffect(() => {\n    refetch(curationSourceFilter || undefined);\n  }, [curationSourceFilter, refetch]);\n\n  // Auto-select initial cell line when provided and data is ready\n  useEffect(() => {\n    if (initialCellLineId && schema) {\n      // Always update when initialCellLineId changes, regardless of current selection\n      if (!selectedCellLine || selectedCellLine.id !== initialCellLineId) {\n        handleCellLineSelect(initialCellLineId);\n      }\n    }\n  }, [initialCellLineId, schema, handleCellLineSelect]);\n\n  // Set original cell line when selectedCellLine changes (but not when it's being updated by edits)\n  useEffect(() => {\n    if (selectedCellLine && !originalCellLine) {\n      setOriginalCellLine(JSON.parse(JSON.stringify(selectedCellLine)));\n    }\n  }, [selectedCellLine, originalCellLine]);\n\n  const handleSave = async () => {\n    if (!selectedCellLine) return;\n    \n    setIsSaving(true);\n    setSaveError(null); // Clear any previous save errors\n    try {\n      const result = await saveCellLine(selectedCellLine.id, selectedCellLine);\n      console.log('✅ Save successful');\n      \n      // Call the onSave callback if provided (for curation workflow)\n      if (onSave) {\n        onSave(result.data || selectedCellLine);\n      }\n    } catch (error) {\n      console.error('❌ Save failed:', error);\n      const errorMessage = error instanceof Error ? error.message : 'Failed to save cell line';\n      setSaveError(errorMessage);\n      \n      // Call the onError callback if provided\n      if (onError) {\n        onError(errorMessage);\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const dismissSaveError = () => {\n    setSaveError(null);\n  };\n\n  const toggleCollapse = (lineNumber: number) => {\n    setDisplayLines(prev => prev.map(line => \n      line.lineNumber === lineNumber \n        ? { ...line, isCollapsed: !line.isCollapsed }\n        : line\n    ));\n  };\n\n  const startEditing = (lineNumber: number) => {\n    setEditingLine(lineNumber);\n  };\n\n  const cancelEditing = () => {\n    setEditingLine(null);\n  };\n\n  const handleUndo = () => {\n    if (changeHistory.length === 0) return;\n    \n    // Get the last state from history\n    const lastState = changeHistory[changeHistory.length - 1];\n    \n    // Remove the last state from history\n    setChangeHistory(prev => prev.slice(0, -1));\n    setCanUndo(changeHistory.length > 1);\n    \n    // Restore the state\n    setSelectedCellLine(lastState);\n    \n    // Regenerate display lines\n    if (schema) {\n      const newLines = parseDataToLines(lastState, schema);\n      setDisplayLines(newLines);\n    }\n    \n    console.log('🔄 Undo performed, remaining history items:', changeHistory.length - 1);\n  };\n\n  const handleRevertAll = () => {\n    if (!originalCellLine) return;\n    \n    // Restore the original state\n    setSelectedCellLine(JSON.parse(JSON.stringify(originalCellLine)));\n    \n    // Clear change history\n    setChangeHistory([]);\n    setCanUndo(false);\n    \n    // Regenerate display lines\n    if (schema) {\n      const newLines = parseDataToLines(originalCellLine, schema);\n      setDisplayLines(newLines);\n    }\n    \n    console.log('🔄 All changes reverted to original state');\n  };\n\n  const updateValue = (fieldPath: string[], newValue: any) => {\n    console.log('🟢 updateValue called with fieldPath:', fieldPath, 'newValue:', newValue);\n    console.log('🟢 Current selectedCellLine:', selectedCellLine ? 'EXISTS' : 'NULL');\n    console.log('🟢 selectedCellLine keys:', selectedCellLine ? Object.keys(selectedCellLine).slice(0, 5) : 'N/A');\n    \n    // Update the selectedCellLine data with proper deep cloning and state update\n    if (selectedCellLine) {\n      console.log('🟢 selectedCellLine exists, creating deep copy...');\n      \n      // Save current state to history before making changes\n      setChangeHistory(prev => [...prev, JSON.parse(JSON.stringify(selectedCellLine))]);\n      setCanUndo(true);\n      \n      // Create a deep copy of the selected cell line\n      const updated = JSON.parse(JSON.stringify(selectedCellLine));\n      let current = updated;\n      \n      console.log('🟢 Navigating to field path...');\n      // Navigate to the parent object\n      for (let i = 0; i < fieldPath.length - 1; i++) {\n        if (!current[fieldPath[i]]) {\n          current[fieldPath[i]] = {};\n        }\n        current = current[fieldPath[i]];\n      }\n      \n      // Set the new value\n      const fieldName = fieldPath[fieldPath.length - 1];\n      console.log('🟢 Setting field', fieldName, 'from', current[fieldName], 'to', newValue);\n      current[fieldName] = newValue;\n      \n      console.log('🟢 Updated object:', updated);\n      \n      // UPDATE: Actually update the selectedCellLine state - this was the missing piece!\n      console.log('🟢 Calling setSelectedCellLine...');\n      setSelectedCellLine(updated);\n      \n      // Regenerate display lines with updated data\n      if (schema) {\n        console.log('🟢 Regenerating display lines...');\n        const newLines = parseDataToLines(updated, schema);\n        setDisplayLines(newLines);\n        console.log('🟢 Display lines updated, count:', newLines.length);\n      }\n    } else {\n      console.log('❌ No selectedCellLine available');\n    }\n    \n    console.log('🟢 Setting editing line to null');\n    setEditingLine(null);\n  };\n\n  const createEmptyItemFromSchema = (fieldName: string): any => {\n    const fieldSchema = schema?.[fieldName];\n    \n    if (!fieldSchema?.json_schema) {\n      // Simple array - add empty string\n      return \"\";\n    }\n    \n    const jsonSchema = fieldSchema.json_schema;\n    \n    // For array items, look at the items schema\n    if (jsonSchema.type === 'array' && jsonSchema.items) {\n      const itemSchema = jsonSchema.items;\n      \n      if (itemSchema.type === 'object' && itemSchema.properties) {\n        // Complex array - create object with all fields as empty strings\n        const emptyObject: any = {};\n        Object.keys(itemSchema.properties).forEach(prop => {\n          emptyObject[prop] = \"\";\n        });\n        return emptyObject;\n      } else {\n        // Simple array item type\n        return \"\";\n      }\n    }\n    \n    // Fallback to empty string\n    return \"\";\n  };\n\n  const handleAddItem = (fieldPath: string[]) => {\n    if (!selectedCellLine || !schema) return;\n    \n    console.log('🟢 handleAddItem called with fieldPath:', fieldPath);\n    \n    // Save current state to history before making changes\n    setChangeHistory(prev => [...prev, JSON.parse(JSON.stringify(selectedCellLine))]);\n    setCanUndo(true);\n    \n    // Remove 'add' from the path to get the actual array field path\n    const arrayFieldPath = fieldPath.slice(0, -1);\n    const fieldName = arrayFieldPath[0];\n    \n    console.log('🟢 Array field name:', fieldName);\n    \n    // Create a deep copy of the selected cell line\n    const updated = JSON.parse(JSON.stringify(selectedCellLine));\n    let current = updated;\n    \n    // Navigate to the array\n    for (let i = 0; i < arrayFieldPath.length - 1; i++) {\n      current = current[arrayFieldPath[i]];\n    }\n    \n    const arrayField = arrayFieldPath[arrayFieldPath.length - 1];\n    if (!Array.isArray(current[arrayField])) {\n      current[arrayField] = [];\n    }\n    \n    // Create new item based on schema\n    const newItem = createEmptyItemFromSchema(fieldName);\n    console.log('🟢 Adding new item:', newItem);\n    \n    // Add the new item\n    current[arrayField].push(newItem);\n    \n    // Update state\n    setSelectedCellLine(updated);\n    \n    // Regenerate display lines\n    const newLines = parseDataToLines(updated, schema);\n    setDisplayLines(newLines);\n    \n    console.log('🟢 Array item added successfully');\n  };\n\n  if (schemaLoading || cellLineLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-800\"></div>\n        <span className=\"ml-3 text-gray-600\">Loading...</span>\n      </div>\n    );\n  }\n\n  // Only show blocking errors for schema/loading issues, not save errors\n  if (schemaError) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <h3 className=\"text-red-800 font-medium\">Schema Error</h3>\n        <p className=\"text-red-700 text-sm mt-1\">\n          {schemaError}\n        </p>\n      </div>\n    );\n  }\n\n  // Only show blocking error for cellLineError if it's NOT a save error\n  // (Save errors should be handled separately and not block the editor)\n  if (cellLineError && !selectedCellLine) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <h3 className=\"text-red-800 font-medium\">Loading Error</h3>\n        <p className=\"text-red-700 text-sm mt-1\">\n          {cellLineError}\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <div className=\"space-y-6\">\n        {/* Save Error Banner - Non-blocking */}\n        {saveError && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex items-start\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"h-5 w-5 text-red-400 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div className=\"ml-3\">\n                  <h3 className=\"text-red-800 font-medium text-sm\">Save Failed</h3>\n                  <p className=\"text-red-700 text-sm mt-1\">\n                    {saveError}\n                  </p>\n                  <p className=\"text-red-600 text-xs mt-2\">\n                    Please fix the issue and try saving again.\n                  </p>\n                </div>\n              </div>\n              <button\n                onClick={dismissSaveError}\n                className=\"ml-4 text-red-400 hover:text-red-600 transition-colors\"\n                title=\"Dismiss error\"\n              >\n                <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Cell Line Selection */}\n        {!hideSelector && (\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <label htmlFor=\"curation-source-filter\" className=\"text-sm font-medium text-gray-700\">\n              Curation Source:\n            </label>\n            <div className=\"relative\">\n              <select\n                id=\"curation-source-filter\"\n                value={curationSourceFilter}\n                onChange={(e) => setCurationSourceFilter(e.target.value)}\n                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-blue-600 min-w-[150px]\"\n              >\n                <option value=\"\">All Sources</option>\n                <option value=\"hpscreg\">HPSCREG</option>\n                <option value=\"LLM\">LLM Generated</option>\n                <option value=\"institution\">Institution</option>\n                <option value=\"manual\">Manual Entry</option>\n              </select>\n            </div>\n            \n            <label htmlFor=\"cellline-select\" className=\"text-sm font-medium text-gray-700\">\n              Select Cell Line:\n            </label>\n            <div className=\"relative\">\n              <select\n                id=\"cellline-select\"\n                value={selectedCellLineId}\n                onChange={(e) => handleCellLineSelect(e.target.value)}\n                className=\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-blue-600 min-w-[200px]\"\n              >\n                <option value=\"\">Choose a cell line...</option>\n                {cellLines.map((cellLine) => (\n                  <option \n                    key={cellLine.CellLine_hpscreg_id || cellLine.template_name} \n                    value={cellLine.CellLine_hpscreg_id || cellLine.template_name}\n                  >\n                    {cellLine.CellLine_hpscreg_id || cellLine.template_name}\n                    {cellLine.curation_source && ` (${cellLine.curation_source})`}\n                  </option>\n                ))}\n              </select>\n              {cellLines.length > 0 && (\n                <div className=\"text-xs text-gray-500 mt-1\">\n                  {cellLines.length} cell lines available\n                </div>\n              )}\n            </div>\n            \n            {/* Add Cell Line Button */}\n            <button\n              onClick={() => {\n                // TODO: Implement add cell line functionality\n                console.log('Add cell line clicked');\n              }}\n              className=\"bg-green-600 hover:bg-green-700 text-white text-sm font-medium py-2 px-4 rounded-md transition-all shadow-sm hover:shadow flex items-center\"\n              title=\"Create a new cell line\"\n            >\n              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n              </svg>\n              Add Cell Line\n            </button>\n          </div>\n\n          {selectedCellLineId && (\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={handleUndo}\n                disabled={!canUndo}\n                className=\"bg-gray-600 hover:bg-gray-700 disabled:bg-gray-300 text-white text-sm font-medium py-2 px-4 rounded-md transition-all shadow-sm hover:shadow flex items-center\"\n                title={canUndo ? `Undo last change (${changeHistory.length} changes available)` : 'No changes to undo'}\n              >\n                Undo\n              </button>\n              <button\n                onClick={handleRevertAll}\n                disabled={changeHistory.length === 0}\n                className=\"bg-gray-600 hover:bg-gray-700 disabled:bg-gray-300 text-white text-sm font-medium py-2 px-4 rounded-md transition-all shadow-sm hover:shadow flex items-center\"\n                title={changeHistory.length > 0 ? 'Revert all changes back to original state' : 'No changes to revert'}\n              >\n                Revert All\n              </button>\n              <button\n                onClick={handleSave}\n                disabled={isSaving}\n                className=\"bg-blue-800 hover:bg-blue-900 disabled:bg-blue-300 text-white text-sm font-medium py-2 px-4 rounded-md transition-all shadow-sm hover:shadow flex items-center\"\n              >\n                {isSaving ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Saving...\n                  </>\n                ) : (\n                  'Save Changes'\n                )}\n              </button>\n            </div>\n          )}\n        </div>\n        )}\n\n\n        {/* Editor Interface */}\n        {(selectedCellLineId && displayLines.length > 0 && schema) ? (\n          <div className=\"border border-gray-200 rounded-lg overflow-hidden relative\">\n            <div className=\"bg-gray-50 px-4 py-2 border-b border-gray-200\">\n              <h3 className=\"text-sm font-medium text-gray-900\">\n                {selectedCellLineId}\n              </h3>\n              <p className=\"text-xs text-gray-600 mt-1\">\n                {displayLines.length} fields • Click values to edit\n              </p>\n            </div>\n            \n            <div className=\"custom-editor bg-white\">\n              {getVisibleLines(displayLines).map((line) => (\n                <EditorLine\n                  key={line.lineNumber}\n                  line={line}\n                  schema={schema}\n                  isEditing={editingLine === line.lineNumber}\n                  onToggleCollapse={() => toggleCollapse(line.lineNumber)}\n                  onStartEdit={() => startEditing(line.lineNumber)}\n                  onCancelEdit={cancelEditing}\n                  onUpdateValue={updateValue}\n                  onAddItem={() => handleAddItem(line.fieldPath)}\n                />\n              ))}\n            </div>\n            \n            {/* Floating Save Button */}\n            <button\n              onClick={handleSave}\n              disabled={isSaving}\n              className=\"absolute bottom-4 right-4 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-300 text-white p-3 rounded-full shadow-lg transition-all hover:shadow-xl flex items-center justify-center\"\n              title={isSaving ? 'Saving...' : 'Save Changes'}\n            >\n              {isSaving ? (\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white\"></div>\n              ) : (\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M17,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3M19,19H5V5H15V9H19V19Z\" />\n                  <path d=\"M7,5V9H13V5H7M6,14A2,2 0 0,1 8,12A2,2 0 0,1 10,14A2,2 0 0,1 8,16A2,2 0 0,1 6,14Z\" fill=\"white\" />\n                </svg>\n              )}\n            </button>\n          </div>\n        ) : (\n          <div className=\"text-center py-12 text-gray-500\">\n            <p>Select a cell line to begin editing</p>\n          </div>\n        )}\n      </div>\n\n      <style jsx>{`\n        .custom-editor {\n          font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif;\n          font-size: 14px;\n          line-height: 1.6;\n          max-height: 600px;\n          overflow-y: auto;\n          overscroll-behavior-y: contain;\n        }\n      `}</style>\n    </ErrorBoundary>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6645, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/tools/editor/components/EditorContainer.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\nimport { VersionControlLayout } from './VersionControlLayout';\nimport CustomCellLineEditor from './CustomCellLineEditor';\n\nfunction EditorContent() {\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"container mx-auto px-4 py-8 w-full\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n          {/* Content Area */}\n          {/* Version Control Interface */}\n          <div className=\"p-6 border-b border-gray-200\">\n            <div className=\"mb-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-2\">\n                Version Control Interface\n              </h2>\n              <p className=\"text-sm text-gray-600\">\n                Compare cell line versions side-by-side\n              </p>\n            </div>\n            <VersionControlLayout />\n          </div>\n\n          {/* Main Content - Cell Line Editor */}\n          <div className=\"p-6\">\n            <div className=\"mb-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-2\">\n                Edit Cell Lines\n              </h2>\n              <p className=\"text-sm text-gray-600\">\n                Select and edit cell line metadata\n              </p>\n            </div>\n            <CustomCellLineEditor />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function EditorContainer({ initialCellLineId }: { initialCellLineId?: string }) {\n  return <EditorContent />;\n} "],"names":[],"mappings":";;;;AAIA;AACA;AALA;;;;AAOA,SAAS;IAEP,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCAGb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAyC;;;;;;kDAGvD,6LAAC;wCAAE,WAAU;kDAAwB;;;;;;;;;;;;0CAIvC,6LAAC,uKAAA,CAAA,uBAAoB;;;;;;;;;;;kCAIvB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAyC;;;;;;kDAGvD,6LAAC;wCAAE,WAAU;kDAAwB;;;;;;;;;;;;0CAIvC,6LAAC,uKAAA,CAAA,UAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjC;KApCS;AAsCF,SAAS,gBAAgB,EAAE,iBAAiB,EAAkC;IACnF,qBAAO,6LAAC;;;;;AACV;MAFgB","debugId":null}}]
}