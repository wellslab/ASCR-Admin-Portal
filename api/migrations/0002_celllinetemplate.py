# Generated by Django 5.0.2 on 2025-06-27 00:08

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CellLineTemplate',
            fields=[
                ('CellLine_hpscreg_id', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('CellLine_alt_names', models.JSONField(default=list)),
                ('CellLine_cell_line_type', models.CharField(choices=[('hESC', 'hESC'), ('hiPSC', 'hiPSC')], max_length=10)),
                ('CellLine_source_cell_type', models.CharField(max_length=200)),
                ('CellLine_source_tissue', models.CharField(max_length=200)),
                ('CellLine_source', models.CharField(max_length=200)),
                ('CellLine_frozen', models.BooleanField(default=False)),
                ('CellLine_publication_doi', models.CharField(blank=True, max_length=200)),
                ('CellLine_publication_pmid', models.CharField(blank=True, max_length=50)),
                ('CellLine_publication_title', models.TextField(blank=True)),
                ('CellLine_publication_first_author', models.CharField(blank=True, max_length=200)),
                ('CellLine_publication_last_author', models.CharField(blank=True, max_length=200)),
                ('CellLine_publication_journal', models.CharField(blank=True, max_length=200)),
                ('CellLine_publication_year', models.IntegerField(blank=True, null=True)),
                ('CellLine_donor_age', models.IntegerField(blank=True, null=True)),
                ('CellLine_donor_sex', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('CellLine_donor_disease', models.CharField(blank=True, max_length=500)),
                ('CellLine_contact_name', models.CharField(blank=True, max_length=200)),
                ('CellLine_contact_email', models.EmailField(blank=True, max_length=254)),
                ('CellLine_contact_phone', models.CharField(blank=True, max_length=50)),
                ('CellLine_maintainer', models.CharField(blank=True, max_length=200)),
                ('CellLine_producer', models.CharField(blank=True, max_length=200)),
                ('GenomicAlteration_performed', models.BooleanField(default=False)),
                ('GenomicAlteration_mutation_type', models.CharField(blank=True, choices=[('variant', 'Variant'), ('transgen expression', 'Transgen Expression'), ('knock out', 'Knock Out'), ('knock in', 'Knock In'), ('isogenic modification', 'Isogenic Modification')], max_length=50)),
                ('GenomicAlteration_cytoband', models.CharField(blank=True, max_length=100)),
                ('GenomicAlteration_delivery_method', models.CharField(blank=True, max_length=200)),
                ('GenomicAlteration_loci_name', models.CharField(blank=True, max_length=200)),
                ('GenomicAlteration_loci_chromosome', models.CharField(blank=True, max_length=10)),
                ('GenomicAlteration_loci_start', models.IntegerField(blank=True, null=True)),
                ('GenomicAlteration_loci_end', models.IntegerField(blank=True, null=True)),
                ('GenomicAlteration_loci_group', models.CharField(blank=True, max_length=200)),
                ('GenomicAlteration_loci_disease', models.CharField(blank=True, max_length=500)),
                ('GenomicAlteration_description', models.TextField(blank=True)),
                ('GenomicAlteration_genotype', models.CharField(blank=True, max_length=500)),
                ('PluripotencyCharacterisation_cell_type', models.CharField(blank=True, choices=[('endoderm', 'Endoderm'), ('mesoderm', 'Mesoderm'), ('ectoderm', 'Ectoderm'), ('trophectoderm', 'Trophectoderm')], max_length=20)),
                ('PluripotencyCharacterisation_shown_potency', models.BooleanField(default=False)),
                ('PluripotencyCharacterisation_marker_list', models.JSONField(default=list)),
                ('PluripotencyCharacterisation_method', models.CharField(blank=True, max_length=200)),
                ('PluripotencyCharacterisation_differentiation_profile', models.CharField(blank=True, choices=[('in vivo teratoma', 'In Vivo Teratoma'), ('in vitro spontaneous differentiation', 'In Vitro Spontaneous Differentiation'), ('in vitro directed differentiation', 'In Vitro Directed Differentiation'), ('scorecard', 'Scorecard'), ('other', 'Other')], max_length=50)),
                ('ReprogrammingMethod_vector_type', models.CharField(blank=True, choices=[('non-integrated', 'Non-integrated'), ('integrated', 'Integrated'), ('vector-free', 'Vector-free'), ('none', 'None')], max_length=20)),
                ('ReprogrammingMethod_vector_name', models.CharField(blank=True, max_length=200)),
                ('ReprogrammingMethod_kit', models.CharField(blank=True, max_length=200)),
                ('ReprogrammingMethod_detected', models.BooleanField(default=False)),
                ('GenomicCharacterisation_passage_number', models.IntegerField(blank=True, null=True)),
                ('GenomicCharacterisation_karyotype', models.CharField(blank=True, max_length=500)),
                ('GenomicCharacterisation_karyotype_method', models.CharField(blank=True, choices=[('G-Banding', 'G-Banding'), ('Spectral', 'Spectral'), ('Comparative Genomic Hybridisation(CGH)', 'Comparative Genomic Hybridisation(CGH)'), ('Array CGH', 'Array CGH'), ('Molecular Kartotyping by SNP array', 'Molecular Kartotyping by SNP array'), ('Karyolite BoBs', 'Karyolite BoBs')], max_length=50)),
                ('GenomicCharacterisation_summary', models.TextField(blank=True)),
                ('STRResults_exists', models.BooleanField(default=False)),
                ('STRResults_loci', models.IntegerField(blank=True, null=True)),
                ('STRResults_group', models.CharField(blank=True, choices=[('HLA-type-1', 'HLA-type-1'), ('HLA-type-2', 'HLA-type-2'), ('Non-HLA', 'Non-HLA')], max_length=20)),
                ('STRResults_allele_1', models.CharField(blank=True, max_length=100)),
                ('STRResults_allele_2', models.CharField(blank=True, max_length=100)),
                ('InducedDerivation_i_source_cell_type', models.CharField(blank=True, max_length=200)),
                ('InducedDerivation_i_cell_origin', models.CharField(blank=True, max_length=200)),
                ('InducedDerivation_derivation_year', models.CharField(blank=True, max_length=10)),
                ('InducedDerivation_vector_type', models.CharField(blank=True, choices=[('non-integrated', 'Non-integrated'), ('integrated', 'Integrated'), ('vector-free', 'Vector-free'), ('none', 'None')], max_length=20)),
                ('InducedDerivation_vector_name', models.CharField(blank=True, max_length=200)),
                ('InducedDerivation_kit_name', models.CharField(blank=True, max_length=200)),
                ('Ethics', models.JSONField(default=list)),
                ('MicrobiologyVirologyScreening_performed', models.BooleanField(default=False)),
                ('MicrobiologyVirologyScreening_hiv1', models.CharField(blank=True, choices=[('pos', 'Positive'), ('neg', 'Negative'), ('not done', 'Not Done')], max_length=10)),
                ('MicrobiologyVirologyScreening_hiv2', models.CharField(blank=True, choices=[('pos', 'Positive'), ('neg', 'Negative'), ('not done', 'Not Done')], max_length=10)),
                ('MicrobiologyVirologyScreening_hep_b', models.CharField(blank=True, choices=[('pos', 'Positive'), ('neg', 'Negative'), ('not done', 'Not Done')], max_length=10)),
                ('MicrobiologyVirologyScreening_hep_c', models.CharField(blank=True, choices=[('pos', 'Positive'), ('neg', 'Negative'), ('not done', 'Not Done')], max_length=10)),
                ('MicrobiologyVirologyScreening_mycoplasma', models.CharField(blank=True, choices=[('pos', 'Positive'), ('neg', 'Negative'), ('not done', 'Not Done')], max_length=10)),
                ('MicrobiologyVirologyScreening_other', models.CharField(blank=True, max_length=200)),
                ('MicrobiologyVirologyScreening_other_result', models.CharField(blank=True, max_length=100)),
                ('CultureMedium_co2_concentration', models.FloatField(blank=True, null=True)),
                ('CultureMedium_o2_concentration', models.FloatField(blank=True, null=True)),
                ('CultureMedium_passage_method', models.CharField(blank=True, choices=[('Enzymatically', 'Enzymatically'), ('Enzyme-free cell dissociation', 'Enzyme-free cell dissociation'), ('mechanically', 'Mechanically'), ('other', 'Other')], max_length=50)),
                ('CultureMedium_base_medium', models.CharField(blank=True, max_length=200)),
                ('CultureMedium_base_coat', models.CharField(blank=True, max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cell Line Template',
                'verbose_name_plural': 'Cell Line Templates',
                'db_table': 'cellline_template',
            },
        ),
    ]
